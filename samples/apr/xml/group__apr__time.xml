<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__apr__time" kind="group">
    <compoundname>apr_time</compoundname>
    <title>Time Routines</title>
    <innerclass refid="structapr__time__exp__t" prot="public">apr_time_exp_t</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__apr__time_1gadb4bde16055748190eae190c55aa02bb" prot="public" static="no">
        <type>apr_int64_t</type>
        <definition>typedef apr_int64_t apr_time_t</definition>
        <argsstring></argsstring>
        <name>apr_time_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>number of microseconds since 00:00:00 January 1, 1970 UTC </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_time.h" line="46" column="1" bodyfile="include/apr_time.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__apr__time_1gaae2129185a395cc393f76fabf4f43e47" prot="public" static="no">
        <type>apr_int64_t</type>
        <definition>typedef apr_int64_t apr_interval_time_t</definition>
        <argsstring></argsstring>
        <name>apr_interval_time_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>intervals for I/O timeouts, in microseconds </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_time.h" line="56" column="1" bodyfile="include/apr_time.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__apr__time_1ga3e4663cc0d8b730902ff697c8d3f64be" prot="public" static="no">
        <type>apr_int32_t</type>
        <definition>typedef apr_int32_t apr_short_interval_time_t</definition>
        <argsstring></argsstring>
        <name>apr_short_interval_time_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>short interval for I/O timeouts, in microseconds </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_time.h" line="58" column="1" bodyfile="include/apr_time.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__apr__time_1gae28f2767111a534f263ced95a28489b1" prot="public" static="no">
        <type>struct <ref refid="structapr__time__exp__t" kindref="compound">apr_time_exp_t</ref></type>
        <definition>typedef struct apr_time_exp_t apr_time_exp_t</definition>
        <argsstring></argsstring>
        <name>apr_time_exp_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="structapr__time__exp__t" kindref="compound">apr_time_exp_t</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_time.h" line="88" column="1" bodyfile="include/apr_time.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__apr__time_1ga77382d017a2bef80d44478e0b41557a4" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char apr_month_snames[12][4]</definition>
        <argsstring>[12][4]</argsstring>
        <name>apr_month_snames</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>month names </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_time.h" line="40" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__apr__time_1ga37d6f7740ae0f5d8ae9cfc286e8712be" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char apr_day_snames[7][4]</definition>
        <argsstring>[7][4]</argsstring>
        <name>apr_day_snames</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>day names </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_time.h" line="42" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__apr__time_1gac5cb8713d0681d7b809169a222512287" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__apr__time_1gadb4bde16055748190eae190c55aa02bb" kindref="member">apr_time_t</ref></type>
        <definition>apr_time_t apr_time_now</definition>
        <argsstring>(void)</argsstring>
        <name>apr_time_now</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the current time </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_time.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__apr__time_1gac2fec71f18b4a286b2e21f0b74fadce8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c" kindref="member">apr_status_t</ref></type>
        <definition>apr_status_t apr_time_ansi_put</definition>
        <argsstring>(apr_time_t *result, time_t input)</argsstring>
        <name>apr_time_ansi_put</name>
        <param>
          <type><ref refid="group__apr__time_1gadb4bde16055748190eae190c55aa02bb" kindref="member">apr_time_t</ref> *</type>
          <declname>result</declname>
        </param>
        <param>
          <type>time_t</type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert an ansi time_t to an apr_time_t <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>the resulting apr_time_t </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>the time_t to convert </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_time.h" line="128" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__apr__time_1gaaf3b8ba123feaa0af5a5975b9a8ab8b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c" kindref="member">apr_status_t</ref></type>
        <definition>apr_status_t apr_time_exp_tz</definition>
        <argsstring>(apr_time_exp_t *result, apr_time_t input, apr_int32_t offs)</argsstring>
        <name>apr_time_exp_tz</name>
        <param>
          <type><ref refid="structapr__time__exp__t" kindref="compound">apr_time_exp_t</ref> *</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="group__apr__time_1gadb4bde16055748190eae190c55aa02bb" kindref="member">apr_time_t</ref></type>
          <declname>input</declname>
        </param>
        <param>
          <type>apr_int32_t</type>
          <declname>offs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a time to its human readable components using an offset from GMT. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>the exploded time </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>the time to explode </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offs</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of seconds offset to apply </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_time.h" line="138" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__apr__time_1gafa8bdd3a4500f66866d8dd54bf69fb71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c" kindref="member">apr_status_t</ref></type>
        <definition>apr_status_t apr_time_exp_gmt</definition>
        <argsstring>(apr_time_exp_t *result, apr_time_t input)</argsstring>
        <name>apr_time_exp_gmt</name>
        <param>
          <type><ref refid="structapr__time__exp__t" kindref="compound">apr_time_exp_t</ref> *</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="group__apr__time_1gadb4bde16055748190eae190c55aa02bb" kindref="member">apr_time_t</ref></type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a time to its human readable components (GMT). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>the exploded time </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>the time to explode </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_time.h" line="147" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__apr__time_1ga34d3b9858de1d3111a4b2ff936ada7f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c" kindref="member">apr_status_t</ref></type>
        <definition>apr_status_t apr_time_exp_lt</definition>
        <argsstring>(apr_time_exp_t *result, apr_time_t input)</argsstring>
        <name>apr_time_exp_lt</name>
        <param>
          <type><ref refid="structapr__time__exp__t" kindref="compound">apr_time_exp_t</ref> *</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="group__apr__time_1gadb4bde16055748190eae190c55aa02bb" kindref="member">apr_time_t</ref></type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a time to its human readable components in the local timezone. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>the exploded time </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>the time to explode </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_time.h" line="155" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__apr__time_1gac13166685922464d9848bda469e0b3b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c" kindref="member">apr_status_t</ref></type>
        <definition>apr_status_t apr_time_exp_get</definition>
        <argsstring>(apr_time_t *result, apr_time_exp_t *input)</argsstring>
        <name>apr_time_exp_get</name>
        <param>
          <type><ref refid="group__apr__time_1gadb4bde16055748190eae190c55aa02bb" kindref="member">apr_time_t</ref> *</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="structapr__time__exp__t" kindref="compound">apr_time_exp_t</ref> *</type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert time value from human readable format to a numeric apr_time_t (elapsed microseconds since the epoch). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>the resulting imploded time </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>the input exploded time </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_time.h" line="164" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__apr__time_1ga0f9fdeae48a45662cb3f198d06c743f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c" kindref="member">apr_status_t</ref></type>
        <definition>apr_status_t apr_time_exp_gmt_get</definition>
        <argsstring>(apr_time_t *result, apr_time_exp_t *input)</argsstring>
        <name>apr_time_exp_gmt_get</name>
        <param>
          <type><ref refid="group__apr__time_1gadb4bde16055748190eae190c55aa02bb" kindref="member">apr_time_t</ref> *</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="structapr__time__exp__t" kindref="compound">apr_time_exp_t</ref> *</type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert time value from human readable format to a numeric apr_time_t that always represents GMT. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>the resulting imploded time </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>the input exploded time </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_time.h" line="173" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__apr__time_1ga8ffddc239a3d8051d9972cee080fd761" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void apr_sleep</definition>
        <argsstring>(apr_interval_time_t t)</argsstring>
        <name>apr_sleep</name>
        <param>
          <type><ref refid="group__apr__time_1gaae2129185a395cc393f76fabf4f43e47" kindref="member">apr_interval_time_t</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sleep for the specified number of micro-seconds. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>desired amount of time to sleep. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="warning"><para>May sleep for longer than the specified time. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_time.h" line="181" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__apr__time_1gad77b323dd4402ac89c51240f19015df5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c" kindref="member">apr_status_t</ref></type>
        <definition>apr_status_t apr_rfc822_date</definition>
        <argsstring>(char *date_str, apr_time_t t)</argsstring>
        <name>apr_rfc822_date</name>
        <param>
          <type>char *</type>
          <declname>date_str</declname>
        </param>
        <param>
          <type><ref refid="group__apr__time_1gadb4bde16055748190eae190c55aa02bb" kindref="member">apr_time_t</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>apr_rfc822_date formats dates in the RFC822 format in an efficient manner. It is a fixed length format which requires APR_RFC822_DATA_LEN bytes of storage, including the trailing NUL terminator. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>date_str</parametername>
</parameternamelist>
<parameterdescription>
<para>String to write to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>the time to convert </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_time.h" line="193" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__apr__time_1gad1fcb8f26d508fbb34ea2beca7bc851e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c" kindref="member">apr_status_t</ref></type>
        <definition>apr_status_t apr_ctime</definition>
        <argsstring>(char *date_str, apr_time_t t)</argsstring>
        <name>apr_ctime</name>
        <param>
          <type>char *</type>
          <declname>date_str</declname>
        </param>
        <param>
          <type><ref refid="group__apr__time_1gadb4bde16055748190eae190c55aa02bb" kindref="member">apr_time_t</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>apr_ctime formats dates in the ctime() format in an efficient manner. It is a fixed length format and requires APR_CTIME_LEN bytes of storage including the trailing NUL terminator. Unlike ANSI/ISO C ctime(), <ref refid="group__apr__time_1gad1fcb8f26d508fbb34ea2beca7bc851e" kindref="member">apr_ctime()</ref> does not include a \n at the end of the string. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>date_str</parametername>
</parameternamelist>
<parameterdescription>
<para>String to write to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>the time to convert </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_time.h" line="207" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__apr__time_1ga3f5e1aa45e735f3bcf8c13fb718c214f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c" kindref="member">apr_status_t</ref></type>
        <definition>apr_status_t apr_strftime</definition>
        <argsstring>(char *s, apr_size_t *retsize, apr_size_t max, const char *format, apr_time_exp_t *tm)</argsstring>
        <name>apr_strftime</name>
        <param>
          <type>char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>apr_size_t *</type>
          <declname>retsize</declname>
        </param>
        <param>
          <type>apr_size_t</type>
          <declname>max</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type><ref refid="structapr__time__exp__t" kindref="compound">apr_time_exp_t</ref> *</type>
          <declname>tm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Formats the exploded time according to the format specified <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>string to write to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>retsize</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of the returned string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum length of the string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>The format for the time string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tm</parametername>
</parameternamelist>
<parameterdescription>
<para>The time to convert </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_time.h" line="217" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__apr__time_1gac47e0b54f17857f0ce2925b2930b5500" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void apr_time_clock_hires</definition>
        <argsstring>(apr_pool_t *p)</argsstring>
        <name>apr_time_clock_hires</name>
        <param>
          <type><ref refid="group__apr__pools_1gaf137f28edcf9a086cd6bc36c20d7cdfb" kindref="member">apr_pool_t</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Improve the clock resolution for the lifetime of the given pool. Generally this is only desirable on benchmarking and other very time-sensitive applications, and has no impact on most platforms. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>The pool to associate the finer clock resolution </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_time.h" line="227" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__apr__time_1gab0d08005432bbda78e03bcd2e235e7d3" prot="public" static="no">
        <name>APR_TIME_C</name>
        <param><defname>val</defname></param>
        <initializer>APR_INT64_C(val)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>mechanism to properly type apr_time_t literals </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_time.h" line="50" column="9" bodyfile="include/apr_time.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__apr__time_1gaad2d372b64a68d96b1e4c5f1173eb2c7" prot="public" static="no">
        <name>APR_TIME_T_FMT</name>
        <initializer>APR_INT64_T_FMT</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>mechanism to properly print apr_time_t values </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_time.h" line="53" column="9" bodyfile="include/apr_time.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__apr__time_1gab4dd3f3015d25a50f3be3e0e91043abf" prot="public" static="no">
        <name>APR_USEC_PER_SEC</name>
        <initializer><ref refid="group__apr__time_1gab0d08005432bbda78e03bcd2e235e7d3" kindref="member">APR_TIME_C</ref>(1000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>number of microseconds per second </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_time.h" line="61" column="9" bodyfile="include/apr_time.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__apr__time_1gae0237f70a9a3206b5263c0a474219476" prot="public" static="no">
        <name>apr_time_sec</name>
        <param><defname>time</defname></param>
        <initializer>((time) / <ref refid="group__apr__time_1gab4dd3f3015d25a50f3be3e0e91043abf" kindref="member">APR_USEC_PER_SEC</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>apr_time_t as a second </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_time.h" line="64" column="9" bodyfile="include/apr_time.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__apr__time_1gae842c7b471ccf0dc691eb2ff3cc8fc8e" prot="public" static="no">
        <name>apr_time_usec</name>
        <param><defname>time</defname></param>
        <initializer>((time) % <ref refid="group__apr__time_1gab4dd3f3015d25a50f3be3e0e91043abf" kindref="member">APR_USEC_PER_SEC</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>apr_time_t as a usec </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_time.h" line="67" column="9" bodyfile="include/apr_time.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__apr__time_1ga05d6c6ea507b74605aa2149a4410076f" prot="public" static="no">
        <name>apr_time_msec</name>
        <param><defname>time</defname></param>
        <initializer>(((time) / 1000) % 1000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>apr_time_t as a msec </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_time.h" line="70" column="9" bodyfile="include/apr_time.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__apr__time_1ga0ab989e84c18e63d36e653aab2821691" prot="public" static="no">
        <name>apr_time_as_msec</name>
        <param><defname>time</defname></param>
        <initializer>((time) / 1000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>apr_time_t as a msec </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_time.h" line="73" column="9" bodyfile="include/apr_time.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__apr__time_1ga9530ae08ce10e2d653f4e7dc8b14ad00" prot="public" static="no">
        <name>apr_time_from_msec</name>
        <param><defname>msec</defname></param>
        <initializer>((<ref refid="group__apr__time_1gadb4bde16055748190eae190c55aa02bb" kindref="member">apr_time_t</ref>)(msec) * 1000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>milliseconds as an apr_time_t </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_time.h" line="76" column="9" bodyfile="include/apr_time.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__apr__time_1gaec56c2c03299a750006bfcc08d64ec32" prot="public" static="no">
        <name>apr_time_from_sec</name>
        <param><defname>sec</defname></param>
        <initializer>((<ref refid="group__apr__time_1gadb4bde16055748190eae190c55aa02bb" kindref="member">apr_time_t</ref>)(sec) * <ref refid="group__apr__time_1gab4dd3f3015d25a50f3be3e0e91043abf" kindref="member">APR_USEC_PER_SEC</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>seconds as an apr_time_t </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_time.h" line="79" column="9" bodyfile="include/apr_time.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__apr__time_1ga47e8d04826e56b6ce39ed082d33abc38" prot="public" static="no">
        <name>apr_time_make</name>
        <param><defname>sec</defname></param>
        <param><defname>usec</defname></param>
        <initializer>((<ref refid="group__apr__time_1gadb4bde16055748190eae190c55aa02bb" kindref="member">apr_time_t</ref>)(sec) * <ref refid="group__apr__time_1gab4dd3f3015d25a50f3be3e0e91043abf" kindref="member">APR_USEC_PER_SEC</ref> \
                                + (<ref refid="group__apr__time_1gadb4bde16055748190eae190c55aa02bb" kindref="member">apr_time_t</ref>)(usec))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a second and usec combination as an apr_time_t </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_time.h" line="82" column="9" bodyfile="include/apr_time.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__apr__time_1ga33933cf7a3e3c2cf6082c5f6d22ca3e5" prot="public" static="no">
        <name>APR_RFC822_DATE_LEN</name>
        <initializer>(30)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>length of a RFC822 Date </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_time.h" line="184" column="9" bodyfile="include/apr_time.h" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__apr__time_1ga0bd804145d3954f45a6962e9dd10f220" prot="public" static="no">
        <name>APR_CTIME_LEN</name>
        <initializer>(25)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>length of a CTIME date </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_time.h" line="196" column="9" bodyfile="include/apr_time.h" bodystart="196" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
