<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__apr__os__thread" kind="group">
    <compoundname>apr_os_thread</compoundname>
    <title>Thread portability Routines</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__apr__os__thread_1gadda5e99fc387491a2a9436bf6144bd49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c" kindref="member">apr_status_t</ref></type>
        <definition>apr_status_t apr_os_thread_get</definition>
        <argsstring>(apr_os_thread_t **thethd, apr_thread_t *thd)</argsstring>
        <name>apr_os_thread_get</name>
        <param>
          <type><ref refid="group__apr__portabile_1ga4ccd9519af148ccf9cff850dd58f00b6" kindref="member">apr_os_thread_t</ref> **</type>
          <declname>thethd</declname>
        </param>
        <param>
          <type><ref refid="group__apr__thread__proc_1ga646c71351e723d84f8cc8c8d1d5937be" kindref="member">apr_thread_t</ref> *</type>
          <declname>thd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>convert the thread to os specific type from apr type. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>thethd</parametername>
</parameternamelist>
<parameterdescription>
<para>The apr thread to convert </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>thd</parametername>
</parameternamelist>
<parameterdescription>
<para>The os specific thread we are converting to </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_portable.h" line="285" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__apr__os__thread_1ga2fd6ec9d398c4f2564765866c3d31219" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c" kindref="member">apr_status_t</ref></type>
        <definition>apr_status_t apr_os_threadkey_get</definition>
        <argsstring>(apr_os_threadkey_t *thekey, apr_threadkey_t *key)</argsstring>
        <name>apr_os_threadkey_get</name>
        <param>
          <type><ref refid="group__apr__portabile_1ga0a228496d8a1a9b3be744ddb101a3e76" kindref="member">apr_os_threadkey_t</ref> *</type>
          <declname>thekey</declname>
        </param>
        <param>
          <type><ref refid="group__apr__thread__proc_1ga337c9c1bd2d47740022071a5c41f2edb" kindref="member">apr_threadkey_t</ref> *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>convert the thread private memory key to os specific type from an apr type. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>thekey</parametername>
</parameternamelist>
<parameterdescription>
<para>The apr handle we are converting from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The os specific handle we are converting to. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_portable.h" line="293" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__apr__os__thread_1ga7eda58df34fbc11cd251899e575a1b0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c" kindref="member">apr_status_t</ref></type>
        <definition>apr_status_t apr_os_thread_put</definition>
        <argsstring>(apr_thread_t **thd, apr_os_thread_t *thethd, apr_pool_t *cont)</argsstring>
        <name>apr_os_thread_put</name>
        <param>
          <type><ref refid="group__apr__thread__proc_1ga646c71351e723d84f8cc8c8d1d5937be" kindref="member">apr_thread_t</ref> **</type>
          <declname>thd</declname>
        </param>
        <param>
          <type><ref refid="group__apr__portabile_1ga4ccd9519af148ccf9cff850dd58f00b6" kindref="member">apr_os_thread_t</ref> *</type>
          <declname>thethd</declname>
        </param>
        <param>
          <type><ref refid="group__apr__pools_1gaf137f28edcf9a086cd6bc36c20d7cdfb" kindref="member">apr_pool_t</ref> *</type>
          <declname>cont</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>convert the thread from os specific type to apr type. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>thd</parametername>
</parameternamelist>
<parameterdescription>
<para>The apr thread we are converting to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>thethd</parametername>
</parameternamelist>
<parameterdescription>
<para>The os specific thread to convert </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cont</parametername>
</parameternamelist>
<parameterdescription>
<para>The pool to use if it is needed. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_portable.h" line="302" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__apr__os__thread_1ga386f6e3e205d422f623132bb50147133" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c" kindref="member">apr_status_t</ref></type>
        <definition>apr_status_t apr_os_threadkey_put</definition>
        <argsstring>(apr_threadkey_t **key, apr_os_threadkey_t *thekey, apr_pool_t *cont)</argsstring>
        <name>apr_os_threadkey_put</name>
        <param>
          <type><ref refid="group__apr__thread__proc_1ga337c9c1bd2d47740022071a5c41f2edb" kindref="member">apr_threadkey_t</ref> **</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="group__apr__portabile_1ga0a228496d8a1a9b3be744ddb101a3e76" kindref="member">apr_os_threadkey_t</ref> *</type>
          <declname>thekey</declname>
        </param>
        <param>
          <type><ref refid="group__apr__pools_1gaf137f28edcf9a086cd6bc36c20d7cdfb" kindref="member">apr_pool_t</ref> *</type>
          <declname>cont</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>convert the thread private memory key from os specific type to apr type. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The apr handle we are converting to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>thekey</parametername>
</parameternamelist>
<parameterdescription>
<para>The os specific handle to convert </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cont</parametername>
</parameternamelist>
<parameterdescription>
<para>The pool to use if it is needed. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_portable.h" line="312" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__apr__os__thread_1ga669a17c3a41db20bbc41c06d0e8881b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__apr__portabile_1ga4ccd9519af148ccf9cff850dd58f00b6" kindref="member">apr_os_thread_t</ref></type>
        <definition>apr_os_thread_t apr_os_thread_current</definition>
        <argsstring>(void)</argsstring>
        <name>apr_os_thread_current</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the thread ID </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_portable.h" line="318" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__apr__os__thread_1gac55d4bbc219435046872b1236feb9bfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int apr_os_thread_equal</definition>
        <argsstring>(apr_os_thread_t tid1, apr_os_thread_t tid2)</argsstring>
        <name>apr_os_thread_equal</name>
        <param>
          <type><ref refid="group__apr__portabile_1ga4ccd9519af148ccf9cff850dd58f00b6" kindref="member">apr_os_thread_t</ref></type>
          <declname>tid1</declname>
        </param>
        <param>
          <type><ref refid="group__apr__portabile_1ga4ccd9519af148ccf9cff850dd58f00b6" kindref="member">apr_os_thread_t</ref></type>
          <declname>tid2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compare two thread id&apos;s <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tid1</parametername>
</parameternamelist>
<parameterdescription>
<para>1st Thread ID to compare </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tid2</parametername>
</parameternamelist>
<parameterdescription>
<para>2nd Thread ID to compare </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>non-zero if the two threads are equal, zero otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_portable.h" line="326" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
