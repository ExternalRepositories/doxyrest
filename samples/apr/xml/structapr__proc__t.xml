<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structapr__proc__t" kind="struct" language="C++" prot="public">
    <compoundname>apr_proc_t</compoundname>
    <includes refid="apr__thread__proc_8h" local="no">apr_thread_proc.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structapr__proc__t_1a8a8ee4b234156485a72497023e7482e5" prot="public" static="no" mutable="no">
        <type>pid_t</type>
        <definition>pid_t apr_proc_t::pid</definition>
        <argsstring></argsstring>
        <name>pid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The process ID </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_thread_proc.h" line="145" column="1" bodyfile="include/apr_thread_proc.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structapr__proc__t_1a914bda8939f9d17c9e2f238683fb994b" prot="public" static="no" mutable="no">
        <type><ref refid="group__apr__file__io_1gaa46e4763ac375ea3c7a43ba6f6099e22" kindref="member">apr_file_t</ref> *</type>
        <definition>apr_file_t* apr_proc_t::in</definition>
        <argsstring></argsstring>
        <name>in</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parent&apos;s side of pipe to child&apos;s stdin </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_thread_proc.h" line="147" column="1" bodyfile="include/apr_thread_proc.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structapr__proc__t_1acb7d7c5226217946d761f0e90ff70d24" prot="public" static="no" mutable="no">
        <type><ref refid="group__apr__file__io_1gaa46e4763ac375ea3c7a43ba6f6099e22" kindref="member">apr_file_t</ref> *</type>
        <definition>apr_file_t* apr_proc_t::out</definition>
        <argsstring></argsstring>
        <name>out</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parent&apos;s side of pipe to child&apos;s stdout </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_thread_proc.h" line="149" column="1" bodyfile="include/apr_thread_proc.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structapr__proc__t_1ad087f812b5c69ce937db4cf6e8cd5a0b" prot="public" static="no" mutable="no">
        <type><ref refid="group__apr__file__io_1gaa46e4763ac375ea3c7a43ba6f6099e22" kindref="member">apr_file_t</ref> *</type>
        <definition>apr_file_t* apr_proc_t::err</definition>
        <argsstring></argsstring>
        <name>err</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parent&apos;s side of pipe to child&apos;s stdouterr </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_thread_proc.h" line="151" column="1" bodyfile="include/apr_thread_proc.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structapr__proc__t_1a72ed1c58c3f08ffa7202fa80e870cd54" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* apr_proc_t::invoked</definition>
        <argsstring></argsstring>
        <name>invoked</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Diagnositics/debugging string of the command invoked for this process [only present if APR_HAS_PROC_INVOKED is true] <simplesect kind="remark"><para>Only enabled on Win32 by default. </para></simplesect>
<xrefsect id="bug_1_bug000011"><xreftitle>Bug</xreftitle><xrefdescription><para>This should either always or never be present in release builds - since it breaks binary compatibility. We may enable it always in APR 1.0 yet leave it undefined in most cases. </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_thread_proc.h" line="160" column="1" bodyfile="include/apr_thread_proc.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structapr__proc__t_1aa1f17cce2b442d92893b9c63053b6771" prot="public" static="no" mutable="no">
        <type>HANDLE</type>
        <definition>HANDLE apr_proc_t::hproc</definition>
        <argsstring></argsstring>
        <name>hproc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>(Win32 only) Creator&apos;s handle granting access to the process <simplesect kind="remark"><para>This handle is closed and reset to NULL in every case corresponding to a waitpid() on Unix which returns the exit status. Therefore Win32 correspond&apos;s to Unix&apos;s zombie reaping characteristics and avoids potential handle leaks. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_thread_proc.h" line="169" column="1" bodyfile="include/apr_thread_proc.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The APR process type </para>    </detaileddescription>
    <location file="include/apr_thread_proc.h" line="143" column="1" bodyfile="include/apr_thread_proc.h" bodystart="143" bodyend="171"/>
    <listofallmembers>
      <member refid="structapr__proc__t_1ad087f812b5c69ce937db4cf6e8cd5a0b" prot="public" virt="non-virtual"><scope>apr_proc_t</scope><name>err</name></member>
      <member refid="structapr__proc__t_1aa1f17cce2b442d92893b9c63053b6771" prot="public" virt="non-virtual"><scope>apr_proc_t</scope><name>hproc</name></member>
      <member refid="structapr__proc__t_1a914bda8939f9d17c9e2f238683fb994b" prot="public" virt="non-virtual"><scope>apr_proc_t</scope><name>in</name></member>
      <member refid="structapr__proc__t_1a72ed1c58c3f08ffa7202fa80e870cd54" prot="public" virt="non-virtual"><scope>apr_proc_t</scope><name>invoked</name></member>
      <member refid="structapr__proc__t_1acb7d7c5226217946d761f0e90ff70d24" prot="public" virt="non-virtual"><scope>apr_proc_t</scope><name>out</name></member>
      <member refid="structapr__proc__t_1a8a8ee4b234156485a72497023e7482e5" prot="public" virt="non-virtual"><scope>apr_proc_t</scope><name>pid</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
