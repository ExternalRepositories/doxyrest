<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="apr__thread__mutex_8h" kind="file" language="C++">
    <compoundname>apr_thread_mutex.h</compoundname>
    <includes refid="apr_8h" local="yes">apr.h</includes>
    <includes refid="apr__errno_8h" local="yes">apr_errno.h</includes>
    <includes refid="apr__pools_8h" local="yes">apr_pools.h</includes>
    <includedby refid="apr__allocator_8h" local="yes">apr_allocator.h</includedby>
    <includedby refid="apr__thread__cond_8h" local="yes">apr_thread_cond.h</includedby>
    <incdepgraph>
      <node id="814">
        <label>stdint.h</label>
      </node>
      <node id="818">
        <label>errno.h</label>
      </node>
      <node id="820">
        <label>apr_general.h</label>
        <link refid="apr__general_8h"/>
        <childnode refid="811" relation="include">
        </childnode>
        <childnode refid="819" relation="include">
        </childnode>
        <childnode refid="817" relation="include">
        </childnode>
        <childnode refid="821" relation="include">
        </childnode>
      </node>
      <node id="816">
        <label>limits.h</label>
      </node>
      <node id="812">
        <label>sys/types.h</label>
      </node>
      <node id="823">
        <label>string.h</label>
      </node>
      <node id="810">
        <label>apr_thread_mutex.h</label>
        <link refid="apr__thread__mutex_8h"/>
        <childnode refid="811" relation="include">
        </childnode>
        <childnode refid="817" relation="include">
        </childnode>
        <childnode refid="819" relation="include">
        </childnode>
      </node>
      <node id="819">
        <label>apr_pools.h</label>
        <link refid="apr__pools_8h"/>
        <childnode refid="811" relation="include">
        </childnode>
        <childnode refid="817" relation="include">
        </childnode>
        <childnode refid="820" relation="include">
        </childnode>
        <childnode refid="822" relation="include">
        </childnode>
        <childnode refid="824" relation="include">
        </childnode>
      </node>
      <node id="824">
        <label>apr_allocator.h</label>
        <link refid="apr__allocator_8h"/>
        <childnode refid="811" relation="include">
        </childnode>
        <childnode refid="817" relation="include">
        </childnode>
        <childnode refid="822" relation="include">
        </childnode>
        <childnode refid="819" relation="include">
        </childnode>
        <childnode refid="810" relation="include">
        </childnode>
      </node>
      <node id="821">
        <label>signal.h</label>
      </node>
      <node id="817">
        <label>apr_errno.h</label>
        <link refid="apr__errno_8h"/>
        <childnode refid="811" relation="include">
        </childnode>
        <childnode refid="818" relation="include">
        </childnode>
      </node>
      <node id="815">
        <label>sys/wait.h</label>
      </node>
      <node id="811">
        <label>apr.h</label>
        <link refid="apr_8h"/>
        <childnode refid="812" relation="include">
        </childnode>
        <childnode refid="813" relation="include">
        </childnode>
        <childnode refid="814" relation="include">
        </childnode>
        <childnode refid="815" relation="include">
        </childnode>
        <childnode refid="816" relation="include">
        </childnode>
      </node>
      <node id="813">
        <label>sys/socket.h</label>
      </node>
      <node id="822">
        <label>apr_want.h</label>
        <link refid="apr__want_8h"/>
        <childnode refid="811" relation="include">
        </childnode>
        <childnode refid="823" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="838">
        <label>apr_file_info.h</label>
        <link refid="apr__file__info_8h"/>
        <childnode refid="839" relation="include">
        </childnode>
      </node>
      <node id="833">
        <label>apr_dso.h</label>
        <link refid="apr__dso_8h"/>
        <childnode refid="834" relation="include">
        </childnode>
      </node>
      <node id="855">
        <label>apr_strings.h</label>
        <link refid="apr__strings_8h"/>
      </node>
      <node id="852">
        <label>apr_hash.h</label>
        <link refid="apr__hash_8h"/>
      </node>
      <node id="853">
        <label>apr_shm.h</label>
        <link refid="apr__shm_8h"/>
        <childnode refid="834" relation="include">
        </childnode>
      </node>
      <node id="851">
        <label>apr_global_mutex.h</label>
        <link refid="apr__global__mutex_8h"/>
        <childnode refid="834" relation="include">
        </childnode>
      </node>
      <node id="847">
        <label>apr_time.h</label>
        <link refid="apr__time_8h"/>
        <childnode refid="838" relation="include">
        </childnode>
        <childnode refid="839" relation="include">
        </childnode>
        <childnode refid="834" relation="include">
        </childnode>
        <childnode refid="848" relation="include">
        </childnode>
      </node>
      <node id="839">
        <label>apr_file_io.h</label>
        <link refid="apr__file__io_8h"/>
        <childnode refid="831" relation="include">
        </childnode>
        <childnode refid="840" relation="include">
        </childnode>
        <childnode refid="841" relation="include">
        </childnode>
        <childnode refid="843" relation="include">
        </childnode>
        <childnode refid="834" relation="include">
        </childnode>
        <childnode refid="842" relation="include">
        </childnode>
      </node>
      <node id="830">
        <label>apr_ring.h</label>
        <link refid="apr__ring_8h"/>
        <childnode refid="831" relation="include">
        </childnode>
      </node>
      <node id="831">
        <label>apr_mmap.h</label>
        <link refid="apr__mmap_8h"/>
      </node>
      <node id="842">
        <label>apr_support.h</label>
        <link refid="apr__support_8h"/>
      </node>
      <node id="828">
        <label>apr_general.h</label>
        <link refid="apr__general_8h"/>
        <childnode refid="827" relation="include">
        </childnode>
        <childnode refid="829" relation="include">
        </childnode>
        <childnode refid="830" relation="include">
        </childnode>
      </node>
      <node id="836">
        <label>apr_env.h</label>
        <link refid="apr__env_8h"/>
      </node>
      <node id="837">
        <label>apr_user.h</label>
        <link refid="apr__user_8h"/>
        <childnode refid="838" relation="include">
        </childnode>
      </node>
      <node id="840">
        <label>apr_network_io.h</label>
        <link refid="apr__network__io_8h"/>
        <childnode refid="841" relation="include">
        </childnode>
        <childnode refid="834" relation="include">
        </childnode>
        <childnode refid="842" relation="include">
        </childnode>
      </node>
      <node id="825">
        <label>apr_thread_mutex.h</label>
        <link refid="apr__thread__mutex_8h"/>
        <childnode refid="826" relation="include">
        </childnode>
        <childnode refid="848" relation="include">
        </childnode>
      </node>
      <node id="827">
        <label>apr_pools.h</label>
        <link refid="apr__pools_8h"/>
        <childnode refid="826" relation="include">
        </childnode>
        <childnode refid="828" relation="include">
        </childnode>
        <childnode refid="825" relation="include">
        </childnode>
        <childnode refid="832" relation="include">
        </childnode>
        <childnode refid="833" relation="include">
        </childnode>
        <childnode refid="836" relation="include">
        </childnode>
        <childnode refid="837" relation="include">
        </childnode>
        <childnode refid="838" relation="include">
        </childnode>
        <childnode refid="845" relation="include">
        </childnode>
        <childnode refid="847" relation="include">
        </childnode>
        <childnode refid="839" relation="include">
        </childnode>
        <childnode refid="849" relation="include">
        </childnode>
        <childnode refid="850" relation="include">
        </childnode>
        <childnode refid="851" relation="include">
        </childnode>
        <childnode refid="852" relation="include">
        </childnode>
        <childnode refid="831" relation="include">
        </childnode>
        <childnode refid="840" relation="include">
        </childnode>
        <childnode refid="841" relation="include">
        </childnode>
        <childnode refid="834" relation="include">
        </childnode>
        <childnode refid="843" relation="include">
        </childnode>
        <childnode refid="853" relation="include">
        </childnode>
        <childnode refid="844" relation="include">
        </childnode>
        <childnode refid="854" relation="include">
        </childnode>
        <childnode refid="855" relation="include">
        </childnode>
        <childnode refid="848" relation="include">
        </childnode>
        <childnode refid="856" relation="include">
        </childnode>
      </node>
      <node id="826">
        <label>apr_allocator.h</label>
        <link refid="apr__allocator_8h"/>
        <childnode refid="827" relation="include">
        </childnode>
      </node>
      <node id="841">
        <label>apr_poll.h</label>
        <link refid="apr__poll_8h"/>
      </node>
      <node id="834">
        <label>apr_portable.h</label>
        <link refid="apr__portable_8h"/>
        <childnode refid="835" relation="include">
        </childnode>
      </node>
      <node id="846">
        <label>apr_fnmatch.h</label>
        <link refid="apr__fnmatch_8h"/>
      </node>
      <node id="849">
        <label>apr_getopt.h</label>
        <link refid="apr__getopt_8h"/>
      </node>
      <node id="835">
        <label>apr_skiplist.h</label>
        <link refid="apr__skiplist_8h"/>
      </node>
      <node id="843">
        <label>apr_thread_proc.h</label>
        <link refid="apr__thread__proc_8h"/>
        <childnode refid="834" relation="include">
        </childnode>
        <childnode refid="844" relation="include">
        </childnode>
      </node>
      <node id="829">
        <label>apr_escape.h</label>
        <link refid="apr__escape_8h"/>
      </node>
      <node id="856">
        <label>apr_thread_rwlock.h</label>
        <link refid="apr__thread__rwlock_8h"/>
      </node>
      <node id="845">
        <label>apr_tables.h</label>
        <link refid="apr__tables_8h"/>
        <childnode refid="838" relation="include">
        </childnode>
        <childnode refid="846" relation="include">
        </childnode>
      </node>
      <node id="832">
        <label>apr_atomic.h</label>
        <link refid="apr__atomic_8h"/>
      </node>
      <node id="850">
        <label>apr_proc_mutex.h</label>
        <link refid="apr__proc__mutex_8h"/>
        <childnode refid="851" relation="include">
        </childnode>
        <childnode refid="834" relation="include">
        </childnode>
      </node>
      <node id="854">
        <label>apr_signal.h</label>
        <link refid="apr__signal_8h"/>
      </node>
      <node id="844">
        <label>apr_random.h</label>
        <link refid="apr__random_8h"/>
      </node>
      <node id="848">
        <label>apr_thread_cond.h</label>
        <link refid="apr__thread__cond_8h"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__apr__thread__mutex_1ga579050872f9aff06e773b084264f7d06" prot="public" static="no">
        <name>APR_THREAD_MUTEX_DEFAULT</name>
        <initializer>0x0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>platform-optimal lock behavior </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_thread_mutex.h" line="43" column="9" bodyfile="include/apr_thread_mutex.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__apr__thread__mutex_1gaf421e0445dbc3c739130f5f6544c2e78" prot="public" static="no">
        <name>APR_THREAD_MUTEX_NESTED</name>
        <initializer>0x1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>enable nested (recursive) locks </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_thread_mutex.h" line="44" column="9" bodyfile="include/apr_thread_mutex.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__apr__thread__mutex_1gac31107f3db115edc0c26ea48943c6a16" prot="public" static="no">
        <name>APR_THREAD_MUTEX_UNNESTED</name>
        <initializer>0x2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>disable nested locks </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_thread_mutex.h" line="45" column="9" bodyfile="include/apr_thread_mutex.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__apr__thread__mutex_1ga95712060ba3a192036416e1ccef1db75" prot="public" static="no">
        <type>struct <ref refid="group__apr__thread__mutex_1ga95712060ba3a192036416e1ccef1db75" kindref="member">apr_thread_mutex_t</ref></type>
        <definition>typedef struct apr_thread_mutex_t apr_thread_mutex_t</definition>
        <argsstring></argsstring>
        <name>apr_thread_mutex_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Opaque thread-local mutex structure </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_thread_mutex.h" line="129" column="1" bodyfile="include/apr_thread_mutex.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__apr__thread__mutex_1ga927e99580a669f577fbcb6508814ff12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c" kindref="member">apr_status_t</ref></type>
        <definition>apr_status_t apr_thread_mutex_create</definition>
        <argsstring>(apr_thread_mutex_t **mutex, unsigned int flags, apr_pool_t *pool)</argsstring>
        <name>apr_thread_mutex_create</name>
        <param>
          <type><ref refid="group__apr__thread__mutex_1ga95712060ba3a192036416e1ccef1db75" kindref="member">apr_thread_mutex_t</ref> **</type>
          <declname>mutex</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="group__apr__pools_1gaf137f28edcf9a086cd6bc36c20d7cdfb" kindref="member">apr_pool_t</ref> *</type>
          <declname>pool</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create and initialize a mutex that can be used to synchronize threads. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mutex</parametername>
</parameternamelist>
<parameterdescription>
<para>the memory address where the newly created mutex will be stored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Or&apos;ed value of: <preformatted>
          APR_THREAD_MUTEX_DEFAULT   platform-optimal lock behavior.
          APR_THREAD_MUTEX_NESTED    enable nested (recursive) locks.
          APR_THREAD_MUTEX_UNNESTED  disable nested locks (non-recursive).
</preformatted> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pool</parametername>
</parameternamelist>
<parameterdescription>
<para>the pool from which to allocate the mutex. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="warning"><para>Be cautious in using APR_THREAD_MUTEX_DEFAULT. While this is the most optimal mutex based on a given platform&apos;s performance characteristics, it will behave as either a nested or an unnested lock. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_thread_mutex.h" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__apr__thread__mutex_1ga1430fd10d8d260c0e3832c959742a977" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c" kindref="member">apr_status_t</ref></type>
        <definition>apr_status_t apr_thread_mutex_lock</definition>
        <argsstring>(apr_thread_mutex_t *mutex)</argsstring>
        <name>apr_thread_mutex_lock</name>
        <param>
          <type><ref refid="group__apr__thread__mutex_1ga95712060ba3a192036416e1ccef1db75" kindref="member">apr_thread_mutex_t</ref> *</type>
          <declname>mutex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Acquire the lock for the given mutex. If the mutex is already locked, the current thread will be put to sleep until the lock becomes available. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mutex</parametername>
</parameternamelist>
<parameterdescription>
<para>the mutex on which to acquire the lock. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_thread_mutex.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__apr__thread__mutex_1ga6ac9c8ebee83ff89416f00231a858798" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c" kindref="member">apr_status_t</ref></type>
        <definition>apr_status_t apr_thread_mutex_trylock</definition>
        <argsstring>(apr_thread_mutex_t *mutex)</argsstring>
        <name>apr_thread_mutex_trylock</name>
        <param>
          <type><ref refid="group__apr__thread__mutex_1ga95712060ba3a192036416e1ccef1db75" kindref="member">apr_thread_mutex_t</ref> *</type>
          <declname>mutex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Attempt to acquire the lock for the given mutex. If the mutex has already been acquired, the call returns immediately with APR_EBUSY. Note: it is important that the <ref refid="group___a_p_r___s_t_a_t_u_s___i_s_1gabb92ad7b6ef304132de70e9e5cbaa896" kindref="member">APR_STATUS_IS_EBUSY(s)</ref> macro be used to determine if the return value was APR_EBUSY, for portability reasons. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mutex</parametername>
</parameternamelist>
<parameterdescription>
<para>the mutex on which to attempt the lock acquiring. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_thread_mutex.h" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__apr__thread__mutex_1ga74e58f753737283f9b826d8cdcbcb4bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c" kindref="member">apr_status_t</ref></type>
        <definition>apr_status_t apr_thread_mutex_unlock</definition>
        <argsstring>(apr_thread_mutex_t *mutex)</argsstring>
        <name>apr_thread_mutex_unlock</name>
        <param>
          <type><ref refid="group__apr__thread__mutex_1ga95712060ba3a192036416e1ccef1db75" kindref="member">apr_thread_mutex_t</ref> *</type>
          <declname>mutex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Release the lock for the given mutex. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mutex</parametername>
</parameternamelist>
<parameterdescription>
<para>the mutex from which to release the lock. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_thread_mutex.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__apr__thread__mutex_1gae80e6f9c2a2fbaa94f5a6954e02118f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c" kindref="member">apr_status_t</ref></type>
        <definition>apr_status_t apr_thread_mutex_destroy</definition>
        <argsstring>(apr_thread_mutex_t *mutex)</argsstring>
        <name>apr_thread_mutex_destroy</name>
        <param>
          <type><ref refid="group__apr__thread__mutex_1ga95712060ba3a192036416e1ccef1db75" kindref="member">apr_thread_mutex_t</ref> *</type>
          <declname>mutex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroy the mutex and free the memory associated with the lock. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mutex</parametername>
</parameternamelist>
<parameterdescription>
<para>the mutex to destroy. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_thread_mutex.h" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__apr__thread__mutex_1gafec9362d92f8bd67660b97cb3c246544" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__apr__pools_1gaf137f28edcf9a086cd6bc36c20d7cdfb" kindref="member">apr_pool_t</ref> *</type>
        <definition>apr_pool_t* apr_thread_mutex_pool_get</definition>
        <argsstring>(const apr_thread_mutex_t *thethread_mutex)</argsstring>
        <name>apr_thread_mutex_pool_get</name>
        <param>
          <type>const <ref refid="group__apr__thread__mutex_1ga95712060ba3a192036416e1ccef1db75" kindref="member">apr_thread_mutex_t</ref> *</type>
          <declname>thethread_mutex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the pool used by this thread_mutex. <simplesect kind="return"><para>apr_pool_t the pool </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_thread_mutex.h" line="100" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>APR Thread Mutex Routines. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/apr_thread_mutex.h"/>
  </compounddef>
</doxygen>
