<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__apr__portabile" kind="group">
    <compoundname>apr_portabile</compoundname>
    <title>Portability Routines</title>
    <innerclass refid="structapr__os__proc__mutex__t" prot="public">apr_os_proc_mutex_t</innerclass>
    <innerclass refid="structapr__os__sock__info__t" prot="public">apr_os_sock_info_t</innerclass>
    <innergroup refid="group__apr__os__thread">Thread portability Routines</innergroup>
    <innergroup refid="group__apr__os__dso">DSO (Dynamic Loading) Portability Routines</innergroup>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__apr__portabile_1ga885491b889a4a719549650d3a370fd34" prot="public" static="no">
        <type>int</type>
        <definition>typedef int apr_os_file_t</definition>
        <argsstring></argsstring>
        <name>apr_os_file_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>native file </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_portable.h" line="145" column="1" bodyfile="include/apr_portable.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__apr__portabile_1gacb790646cfc3da1b43a5f7c4bfaa3937" prot="public" static="no">
        <type>DIR</type>
        <definition>typedef DIR apr_os_dir_t</definition>
        <argsstring></argsstring>
        <name>apr_os_dir_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>native dir </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_portable.h" line="146" column="1" bodyfile="include/apr_portable.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__apr__portabile_1ga2965cd2e48cb6513bc0ba05aa6083ed7" prot="public" static="no">
        <type>int</type>
        <definition>typedef int apr_os_sock_t</definition>
        <argsstring></argsstring>
        <name>apr_os_sock_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>native dir </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_portable.h" line="147" column="1" bodyfile="include/apr_portable.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__apr__portabile_1ga107413a26e947456cabfcab99b8a7ade" prot="public" static="no">
        <type>struct <ref refid="structapr__os__proc__mutex__t" kindref="compound">apr_os_proc_mutex_t</ref></type>
        <definition>typedef struct apr_os_proc_mutex_t apr_os_proc_mutex_t</definition>
        <argsstring></argsstring>
        <name>apr_os_proc_mutex_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>native process mutex </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_portable.h" line="147" column="1" bodyfile="include/apr_portable.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__apr__portabile_1ga4ccd9519af148ccf9cff850dd58f00b6" prot="public" static="no">
        <type>pthread_t</type>
        <definition>typedef pthread_t apr_os_thread_t</definition>
        <argsstring></argsstring>
        <name>apr_os_thread_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>native thread </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_portable.h" line="152" column="1" bodyfile="include/apr_portable.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__apr__portabile_1ga0a228496d8a1a9b3be744ddb101a3e76" prot="public" static="no">
        <type>pthread_key_t</type>
        <definition>typedef pthread_key_t apr_os_threadkey_t</definition>
        <argsstring></argsstring>
        <name>apr_os_threadkey_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>native thread address space </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_portable.h" line="153" column="1" bodyfile="include/apr_portable.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__apr__portabile_1ga2ce5962de629ee6528081813c6b60e2e" prot="public" static="no">
        <type>pid_t</type>
        <definition>typedef pid_t apr_os_proc_t</definition>
        <argsstring></argsstring>
        <name>apr_os_proc_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>native pid </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_portable.h" line="156" column="1" bodyfile="include/apr_portable.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__apr__portabile_1ga6d27e476300cd1d3fda24e1ff0e358e1" prot="public" static="no">
        <type>struct timeval</type>
        <definition>typedef struct timeval apr_os_imp_time_t</definition>
        <argsstring></argsstring>
        <name>apr_os_imp_time_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>native timeval </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_portable.h" line="156" column="1" bodyfile="include/apr_portable.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__apr__portabile_1ga0fa9349212690591b09a0cbea7b61bdd" prot="public" static="no">
        <type>struct tm</type>
        <definition>typedef struct tm apr_os_exp_time_t</definition>
        <argsstring></argsstring>
        <name>apr_os_exp_time_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>native tm </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_portable.h" line="156" column="1" bodyfile="include/apr_portable.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__apr__portabile_1ga542684803ee8ab0abd69077697599ec0" prot="public" static="no">
        <type>void *</type>
        <definition>apr_os_dso_handle_t</definition>
        <argsstring></argsstring>
        <name>apr_os_dso_handle_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>native dso types </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_portable.h" line="169" column="1" bodyfile="include/apr_portable.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__apr__portabile_1ga7af1085d6390fbd08d66482b8c17de51" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void* apr_os_shm_t</definition>
        <argsstring></argsstring>
        <name>apr_os_shm_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>native SHM </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_portable.h" line="171" column="1" bodyfile="include/apr_portable.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__apr__portabile_1gaece2b8b41cbb949590896b47daaa9fd2" prot="public" static="no">
        <type>struct <ref refid="structapr__os__sock__info__t" kindref="compound">apr_os_sock_info_t</ref></type>
        <definition>apr_os_sock_info_t</definition>
        <argsstring></argsstring>
        <name>apr_os_sock_info_t</name>
        <briefdescription>
<para>alias for local OS socket </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_portable.h" line="171" column="1" bodyfile="include/apr_portable.h" bodystart="192" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__apr__portabile_1ga1ff9a9a7313954fb6590f280d2c2e992" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c" kindref="member">apr_status_t</ref></type>
        <definition>apr_status_t apr_os_file_get</definition>
        <argsstring>(apr_os_file_t *thefile, apr_file_t *file)</argsstring>
        <name>apr_os_file_get</name>
        <param>
          <type><ref refid="group__apr__portabile_1ga885491b889a4a719549650d3a370fd34" kindref="member">apr_os_file_t</ref> *</type>
          <declname>thefile</declname>
        </param>
        <param>
          <type><ref refid="group__apr__file__io_1gaa46e4763ac375ea3c7a43ba6f6099e22" kindref="member">apr_file_t</ref> *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>convert the file from apr type to os specific type. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>thefile</parametername>
</parameternamelist>
<parameterdescription>
<para>The os specific file we are converting to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>The apr file to convert. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para>On Unix, it is only possible to get a file descriptor from an apr file type. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_portable.h" line="224" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__apr__portabile_1ga99225bfab137069b9d5c5a72f863c577" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c" kindref="member">apr_status_t</ref></type>
        <definition>apr_status_t apr_os_dir_get</definition>
        <argsstring>(apr_os_dir_t **thedir, apr_dir_t *dir)</argsstring>
        <name>apr_os_dir_get</name>
        <param>
          <type><ref refid="group__apr__portabile_1gacb790646cfc3da1b43a5f7c4bfaa3937" kindref="member">apr_os_dir_t</ref> **</type>
          <declname>thedir</declname>
        </param>
        <param>
          <type><ref refid="group__apr__file__info_1ga92ed8cf52cba2abb42cf74087aa74da8" kindref="member">apr_dir_t</ref> *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>convert the dir from apr type to os specific type. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>thedir</parametername>
</parameternamelist>
<parameterdescription>
<para>The os specific dir we are converting to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>The apr dir to convert. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_portable.h" line="232" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__apr__portabile_1ga07ec79bbb5243596933cd2caf2d428df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c" kindref="member">apr_status_t</ref></type>
        <definition>apr_status_t apr_os_sock_get</definition>
        <argsstring>(apr_os_sock_t *thesock, apr_socket_t *sock)</argsstring>
        <name>apr_os_sock_get</name>
        <param>
          <type><ref refid="group__apr__portabile_1ga2965cd2e48cb6513bc0ba05aa6083ed7" kindref="member">apr_os_sock_t</ref> *</type>
          <declname>thesock</declname>
        </param>
        <param>
          <type><ref refid="group__apr__network__io_1ga49262b223e7434746e1f1737659aa2c3" kindref="member">apr_socket_t</ref> *</type>
          <declname>sock</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert the socket from an apr type to an OS specific socket <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>thesock</parametername>
</parameternamelist>
<parameterdescription>
<para>The socket to convert. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sock</parametername>
</parameternamelist>
<parameterdescription>
<para>The os specific equivalent of the apr socket.. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_portable.h" line="240" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__apr__portabile_1ga2003a3142f05675696268053b2fddbe1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c" kindref="member">apr_status_t</ref></type>
        <definition>apr_status_t apr_os_proc_mutex_get</definition>
        <argsstring>(apr_os_proc_mutex_t *ospmutex, apr_proc_mutex_t *pmutex)</argsstring>
        <name>apr_os_proc_mutex_get</name>
        <param>
          <type><ref refid="structapr__os__proc__mutex__t" kindref="compound">apr_os_proc_mutex_t</ref> *</type>
          <declname>ospmutex</declname>
        </param>
        <param>
          <type><ref refid="group__apr__proc__mutex_1ga0fae3a1ab686cd1f252c6062e4c97bd2" kindref="member">apr_proc_mutex_t</ref> *</type>
          <declname>pmutex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert the proc mutex from os specific type to apr type <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ospmutex</parametername>
</parameternamelist>
<parameterdescription>
<para>The os specific proc mutex we are converting to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pmutex</parametername>
</parameternamelist>
<parameterdescription>
<para>The apr proc mutex to convert. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_portable.h" line="248" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__apr__portabile_1ga903df49f8cd2bb7298cb1612ff6394df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c" kindref="member">apr_status_t</ref></type>
        <definition>apr_status_t apr_os_exp_time_get</definition>
        <argsstring>(apr_os_exp_time_t **ostime, apr_time_exp_t *aprtime)</argsstring>
        <name>apr_os_exp_time_get</name>
        <param>
          <type><ref refid="group__apr__portabile_1ga0fa9349212690591b09a0cbea7b61bdd" kindref="member">apr_os_exp_time_t</ref> **</type>
          <declname>ostime</declname>
        </param>
        <param>
          <type><ref refid="structapr__time__exp__t" kindref="compound">apr_time_exp_t</ref> *</type>
          <declname>aprtime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the exploded time in the platforms native format. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ostime</parametername>
</parameternamelist>
<parameterdescription>
<para>the native time format </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aprtime</parametername>
</parameternamelist>
<parameterdescription>
<para>the time to convert </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_portable.h" line="256" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__apr__portabile_1ga406db611360a70360bec953cd92d2df7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c" kindref="member">apr_status_t</ref></type>
        <definition>apr_status_t apr_os_imp_time_get</definition>
        <argsstring>(apr_os_imp_time_t **ostime, apr_time_t *aprtime)</argsstring>
        <name>apr_os_imp_time_get</name>
        <param>
          <type><ref refid="group__apr__portabile_1ga6d27e476300cd1d3fda24e1ff0e358e1" kindref="member">apr_os_imp_time_t</ref> **</type>
          <declname>ostime</declname>
        </param>
        <param>
          <type><ref refid="group__apr__time_1gadb4bde16055748190eae190c55aa02bb" kindref="member">apr_time_t</ref> *</type>
          <declname>aprtime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the imploded time in the platforms native format. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ostime</parametername>
</parameternamelist>
<parameterdescription>
<para>the native time format </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aprtime</parametername>
</parameternamelist>
<parameterdescription>
<para>the time to convert </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_portable.h" line="264" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__apr__portabile_1ga80ebb75a574f97363455dbab05e289d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c" kindref="member">apr_status_t</ref></type>
        <definition>apr_status_t apr_os_shm_get</definition>
        <argsstring>(apr_os_shm_t *osshm, apr_shm_t *shm)</argsstring>
        <name>apr_os_shm_get</name>
        <param>
          <type><ref refid="group__apr__portabile_1ga7af1085d6390fbd08d66482b8c17de51" kindref="member">apr_os_shm_t</ref> *</type>
          <declname>osshm</declname>
        </param>
        <param>
          <type><ref refid="group__apr__shm_1ga79e8c16bdeaf7ade4ef0f935249e7c2f" kindref="member">apr_shm_t</ref> *</type>
          <declname>shm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>convert the shm from apr type to os specific type. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>osshm</parametername>
</parameternamelist>
<parameterdescription>
<para>The os specific shm representation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shm</parametername>
</parameternamelist>
<parameterdescription>
<para>The apr shm to convert. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_portable.h" line="272" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__apr__portabile_1ga17a85a792b05506f293e7cf36f8754b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c" kindref="member">apr_status_t</ref></type>
        <definition>apr_status_t apr_os_file_put</definition>
        <argsstring>(apr_file_t **file, apr_os_file_t *thefile, apr_int32_t flags, apr_pool_t *cont)</argsstring>
        <name>apr_os_file_put</name>
        <param>
          <type><ref refid="group__apr__file__io_1gaa46e4763ac375ea3c7a43ba6f6099e22" kindref="member">apr_file_t</ref> **</type>
          <declname>file</declname>
        </param>
        <param>
          <type><ref refid="group__apr__portabile_1ga885491b889a4a719549650d3a370fd34" kindref="member">apr_os_file_t</ref> *</type>
          <declname>thefile</declname>
        </param>
        <param>
          <type>apr_int32_t</type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="group__apr__pools_1gaf137f28edcf9a086cd6bc36c20d7cdfb" kindref="member">apr_pool_t</ref> *</type>
          <declname>cont</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>convert the file from os specific type to apr type. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>The apr file we are converting to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>thefile</parametername>
</parameternamelist>
<parameterdescription>
<para>The os specific file to convert </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>The flags that were used to open this file. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cont</parametername>
</parameternamelist>
<parameterdescription>
<para>The pool to use if it is needed. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para>On Unix, it is only possible to put a file descriptor into an apr file type. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_portable.h" line="341" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__apr__portabile_1ga8886290c57248bc4d6c1e4802cc377f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c" kindref="member">apr_status_t</ref></type>
        <definition>apr_status_t apr_os_pipe_put</definition>
        <argsstring>(apr_file_t **file, apr_os_file_t *thefile, apr_pool_t *cont)</argsstring>
        <name>apr_os_pipe_put</name>
        <param>
          <type><ref refid="group__apr__file__io_1gaa46e4763ac375ea3c7a43ba6f6099e22" kindref="member">apr_file_t</ref> **</type>
          <declname>file</declname>
        </param>
        <param>
          <type><ref refid="group__apr__portabile_1ga885491b889a4a719549650d3a370fd34" kindref="member">apr_os_file_t</ref> *</type>
          <declname>thefile</declname>
        </param>
        <param>
          <type><ref refid="group__apr__pools_1gaf137f28edcf9a086cd6bc36c20d7cdfb" kindref="member">apr_pool_t</ref> *</type>
          <declname>cont</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>convert the file from os specific type to apr type. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>The apr file we are converting to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>thefile</parametername>
</parameternamelist>
<parameterdescription>
<para>The os specific pipe to convert </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cont</parametername>
</parameternamelist>
<parameterdescription>
<para>The pool to use if it is needed. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para>On Unix, it is only possible to put a file descriptor into an apr file type. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_portable.h" line="353" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__apr__portabile_1gaa3b025a01b6e9b71e402abba74fe3b93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c" kindref="member">apr_status_t</ref></type>
        <definition>apr_status_t apr_os_pipe_put_ex</definition>
        <argsstring>(apr_file_t **file, apr_os_file_t *thefile, int register_cleanup, apr_pool_t *cont)</argsstring>
        <name>apr_os_pipe_put_ex</name>
        <param>
          <type><ref refid="group__apr__file__io_1gaa46e4763ac375ea3c7a43ba6f6099e22" kindref="member">apr_file_t</ref> **</type>
          <declname>file</declname>
        </param>
        <param>
          <type><ref refid="group__apr__portabile_1ga885491b889a4a719549650d3a370fd34" kindref="member">apr_os_file_t</ref> *</type>
          <declname>thefile</declname>
        </param>
        <param>
          <type>int</type>
          <declname>register_cleanup</declname>
        </param>
        <param>
          <type><ref refid="group__apr__pools_1gaf137f28edcf9a086cd6bc36c20d7cdfb" kindref="member">apr_pool_t</ref> *</type>
          <declname>cont</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>convert the file from os specific type to apr type. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>The apr file we are converting to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>thefile</parametername>
</parameternamelist>
<parameterdescription>
<para>The os specific pipe to convert </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>register_cleanup</parametername>
</parameternamelist>
<parameterdescription>
<para>A cleanup will be registered on the apr_file_t to issue <ref refid="group__apr__file__io_1ga5607bce1c4c798ceb6c8475a998a81a1" kindref="member">apr_file_close()</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cont</parametername>
</parameternamelist>
<parameterdescription>
<para>The pool to use if it is needed. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para>On Unix, it is only possible to put a file descriptor into an apr file type. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_portable.h" line="367" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__apr__portabile_1ga5087057e23ff6b79ae31ef6e7cc7301e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c" kindref="member">apr_status_t</ref></type>
        <definition>apr_status_t apr_os_dir_put</definition>
        <argsstring>(apr_dir_t **dir, apr_os_dir_t *thedir, apr_pool_t *cont)</argsstring>
        <name>apr_os_dir_put</name>
        <param>
          <type><ref refid="group__apr__file__info_1ga92ed8cf52cba2abb42cf74087aa74da8" kindref="member">apr_dir_t</ref> **</type>
          <declname>dir</declname>
        </param>
        <param>
          <type><ref refid="group__apr__portabile_1gacb790646cfc3da1b43a5f7c4bfaa3937" kindref="member">apr_os_dir_t</ref> *</type>
          <declname>thedir</declname>
        </param>
        <param>
          <type><ref refid="group__apr__pools_1gaf137f28edcf9a086cd6bc36c20d7cdfb" kindref="member">apr_pool_t</ref> *</type>
          <declname>cont</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>convert the dir from os specific type to apr type. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>The apr dir we are converting to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>thedir</parametername>
</parameternamelist>
<parameterdescription>
<para>The os specific dir to convert </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cont</parametername>
</parameternamelist>
<parameterdescription>
<para>The pool to use when creating to apr directory. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_portable.h" line="378" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__apr__portabile_1ga729bd6825dfadd814de2aa602462d838" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c" kindref="member">apr_status_t</ref></type>
        <definition>apr_status_t apr_os_sock_put</definition>
        <argsstring>(apr_socket_t **sock, apr_os_sock_t *thesock, apr_pool_t *cont)</argsstring>
        <name>apr_os_sock_put</name>
        <param>
          <type><ref refid="group__apr__network__io_1ga49262b223e7434746e1f1737659aa2c3" kindref="member">apr_socket_t</ref> **</type>
          <declname>sock</declname>
        </param>
        <param>
          <type><ref refid="group__apr__portabile_1ga2965cd2e48cb6513bc0ba05aa6083ed7" kindref="member">apr_os_sock_t</ref> *</type>
          <declname>thesock</declname>
        </param>
        <param>
          <type><ref refid="group__apr__pools_1gaf137f28edcf9a086cd6bc36c20d7cdfb" kindref="member">apr_pool_t</ref> *</type>
          <declname>cont</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a socket from the os specific type to the apr type <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sock</parametername>
</parameternamelist>
<parameterdescription>
<para>The pool to use. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>thesock</parametername>
</parameternamelist>
<parameterdescription>
<para>The socket to convert to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cont</parametername>
</parameternamelist>
<parameterdescription>
<para>The socket we are converting to an apr type. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para>If it is a true socket, it is best to call <ref refid="group__apr__portabile_1ga5df9f6b1b9c07bfeca3685118760eefc" kindref="member">apr_os_sock_make()</ref> and provide APR with more information about the socket. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_portable.h" line="390" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__apr__portabile_1ga5df9f6b1b9c07bfeca3685118760eefc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c" kindref="member">apr_status_t</ref></type>
        <definition>apr_status_t apr_os_sock_make</definition>
        <argsstring>(apr_socket_t **apr_sock, apr_os_sock_info_t *os_sock_info, apr_pool_t *cont)</argsstring>
        <name>apr_os_sock_make</name>
        <param>
          <type><ref refid="group__apr__network__io_1ga49262b223e7434746e1f1737659aa2c3" kindref="member">apr_socket_t</ref> **</type>
          <declname>apr_sock</declname>
        </param>
        <param>
          <type><ref refid="structapr__os__sock__info__t" kindref="compound">apr_os_sock_info_t</ref> *</type>
          <declname>os_sock_info</declname>
        </param>
        <param>
          <type><ref refid="group__apr__pools_1gaf137f28edcf9a086cd6bc36c20d7cdfb" kindref="member">apr_pool_t</ref> *</type>
          <declname>cont</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a socket from an existing descriptor and local and remote socket addresses. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>apr_sock</parametername>
</parameternamelist>
<parameterdescription>
<para>The new socket that has been set up </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>os_sock_info</parametername>
</parameternamelist>
<parameterdescription>
<para>The os representation of the socket handle and other characteristics of the socket </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cont</parametername>
</parameternamelist>
<parameterdescription>
<para>The pool to use </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para>If you only know the descriptor/handle or if it isn&apos;t really a true socket, use <ref refid="group__apr__portabile_1ga729bd6825dfadd814de2aa602462d838" kindref="member">apr_os_sock_put()</ref> instead. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_portable.h" line="404" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__apr__portabile_1ga885f99da0c19912293b5b7bf9df21b02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c" kindref="member">apr_status_t</ref></type>
        <definition>apr_status_t apr_os_proc_mutex_put</definition>
        <argsstring>(apr_proc_mutex_t **pmutex, apr_os_proc_mutex_t *ospmutex, apr_pool_t *cont)</argsstring>
        <name>apr_os_proc_mutex_put</name>
        <param>
          <type><ref refid="group__apr__proc__mutex_1ga0fae3a1ab686cd1f252c6062e4c97bd2" kindref="member">apr_proc_mutex_t</ref> **</type>
          <declname>pmutex</declname>
        </param>
        <param>
          <type><ref refid="structapr__os__proc__mutex__t" kindref="compound">apr_os_proc_mutex_t</ref> *</type>
          <declname>ospmutex</declname>
        </param>
        <param>
          <type><ref refid="group__apr__pools_1gaf137f28edcf9a086cd6bc36c20d7cdfb" kindref="member">apr_pool_t</ref> *</type>
          <declname>cont</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert the proc mutex from os specific type to apr type <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pmutex</parametername>
</parameternamelist>
<parameterdescription>
<para>The apr proc mutex we are converting to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ospmutex</parametername>
</parameternamelist>
<parameterdescription>
<para>The os specific proc mutex to convert. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cont</parametername>
</parameternamelist>
<parameterdescription>
<para>The pool to use if it is needed. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_portable.h" line="414" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__apr__portabile_1ga8ba8b7036b84e260c1cf519c3247a7d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c" kindref="member">apr_status_t</ref></type>
        <definition>apr_status_t apr_os_imp_time_put</definition>
        <argsstring>(apr_time_t *aprtime, apr_os_imp_time_t **ostime, apr_pool_t *cont)</argsstring>
        <name>apr_os_imp_time_put</name>
        <param>
          <type><ref refid="group__apr__time_1gadb4bde16055748190eae190c55aa02bb" kindref="member">apr_time_t</ref> *</type>
          <declname>aprtime</declname>
        </param>
        <param>
          <type><ref refid="group__apr__portabile_1ga6d27e476300cd1d3fda24e1ff0e358e1" kindref="member">apr_os_imp_time_t</ref> **</type>
          <declname>ostime</declname>
        </param>
        <param>
          <type><ref refid="group__apr__pools_1gaf137f28edcf9a086cd6bc36c20d7cdfb" kindref="member">apr_pool_t</ref> *</type>
          <declname>cont</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Put the imploded time in the APR format. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aprtime</parametername>
</parameternamelist>
<parameterdescription>
<para>the APR time format </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ostime</parametername>
</parameternamelist>
<parameterdescription>
<para>the time to convert </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cont</parametername>
</parameternamelist>
<parameterdescription>
<para>the pool to use if necessary </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_portable.h" line="424" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__apr__portabile_1ga59486f31d5b591863ed83e67cc8106b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c" kindref="member">apr_status_t</ref></type>
        <definition>apr_status_t apr_os_exp_time_put</definition>
        <argsstring>(apr_time_exp_t *aprtime, apr_os_exp_time_t **ostime, apr_pool_t *cont)</argsstring>
        <name>apr_os_exp_time_put</name>
        <param>
          <type><ref refid="structapr__time__exp__t" kindref="compound">apr_time_exp_t</ref> *</type>
          <declname>aprtime</declname>
        </param>
        <param>
          <type><ref refid="group__apr__portabile_1ga0fa9349212690591b09a0cbea7b61bdd" kindref="member">apr_os_exp_time_t</ref> **</type>
          <declname>ostime</declname>
        </param>
        <param>
          <type><ref refid="group__apr__pools_1gaf137f28edcf9a086cd6bc36c20d7cdfb" kindref="member">apr_pool_t</ref> *</type>
          <declname>cont</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Put the exploded time in the APR format. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aprtime</parametername>
</parameternamelist>
<parameterdescription>
<para>the APR time format </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ostime</parametername>
</parameternamelist>
<parameterdescription>
<para>the time to convert </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cont</parametername>
</parameternamelist>
<parameterdescription>
<para>the pool to use if necessary </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_portable.h" line="434" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__apr__portabile_1gaac2b48e4ea4ac8f959cd0e78ede6c5f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c" kindref="member">apr_status_t</ref></type>
        <definition>apr_status_t apr_os_shm_put</definition>
        <argsstring>(apr_shm_t **shm, apr_os_shm_t *osshm, apr_pool_t *cont)</argsstring>
        <name>apr_os_shm_put</name>
        <param>
          <type><ref refid="group__apr__shm_1ga79e8c16bdeaf7ade4ef0f935249e7c2f" kindref="member">apr_shm_t</ref> **</type>
          <declname>shm</declname>
        </param>
        <param>
          <type><ref refid="group__apr__portabile_1ga7af1085d6390fbd08d66482b8c17de51" kindref="member">apr_os_shm_t</ref> *</type>
          <declname>osshm</declname>
        </param>
        <param>
          <type><ref refid="group__apr__pools_1gaf137f28edcf9a086cd6bc36c20d7cdfb" kindref="member">apr_pool_t</ref> *</type>
          <declname>cont</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>convert the shared memory from os specific type to apr type. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shm</parametername>
</parameternamelist>
<parameterdescription>
<para>The apr shm representation of osshm </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>osshm</parametername>
</parameternamelist>
<parameterdescription>
<para>The os specific shm identity </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cont</parametername>
</parameternamelist>
<parameterdescription>
<para>The pool to use if it is needed. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para>On fork()ed architectures, this is typically nothing more than the memory block mapped. On non-fork architectures, this is typically some internal handle to pass the mapping from process to process. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_portable.h" line="447" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__apr__portabile_1ga79f20b89377abd00e2caed59bff2eebe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c" kindref="member">apr_status_t</ref></type>
        <definition>apr_status_t apr_os_uuid_get</definition>
        <argsstring>(unsigned char *uuid_data)</argsstring>
        <name>apr_os_uuid_get</name>
        <param>
          <type>unsigned char *</type>
          <declname>uuid_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Private: apr-util&apos;s apr_uuid module when supported by the platform </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_portable.h" line="483" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__apr__portabile_1ga6e21845a4a5f3b7dd107b2beea50c91e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* apr_os_default_encoding</definition>
        <argsstring>(apr_pool_t *pool)</argsstring>
        <name>apr_os_default_encoding</name>
        <param>
          <type><ref refid="group__apr__pools_1gaf137f28edcf9a086cd6bc36c20d7cdfb" kindref="member">apr_pool_t</ref> *</type>
          <declname>pool</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the name of the system default character set. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pool</parametername>
</parameternamelist>
<parameterdescription>
<para>the pool to allocate the name from, if needed </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_portable.h" line="491" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__apr__portabile_1gaf4c49baaf6cb115c6c92e74e4a40fd46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* apr_os_locale_encoding</definition>
        <argsstring>(apr_pool_t *pool)</argsstring>
        <name>apr_os_locale_encoding</name>
        <param>
          <type><ref refid="group__apr__pools_1gaf137f28edcf9a086cd6bc36c20d7cdfb" kindref="member">apr_pool_t</ref> *</type>
          <declname>pool</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the name of the current locale character set. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pool</parametername>
</parameternamelist>
<parameterdescription>
<para>the pool to allocate the name from, if needed </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para>Defers to apr_os_default_encoding if the current locale&apos;s data can&apos;t be retrieved on this system. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_portable.h" line="500" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__apr__portabile_1gadd3a9818afc16248c3c30f22e19838dd" prot="public" static="no">
        <name>apr_os_global_mutex_t</name>
        <initializer><ref refid="structapr__os__proc__mutex__t" kindref="compound">apr_os_proc_mutex_t</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Opaque global mutex type </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_portable.h" line="196" column="9" bodyfile="include/apr_portable.h" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__apr__portabile_1gae9be7821e8c021915c930fc83d6d4a73" prot="public" static="no">
        <name>apr_os_global_mutex_get</name>
        <initializer><ref refid="group__apr__portabile_1ga2003a3142f05675696268053b2fddbe1" kindref="member">apr_os_proc_mutex_get</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>apr_os_global_mutex </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_portable.h" line="198" column="9" bodyfile="include/apr_portable.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
