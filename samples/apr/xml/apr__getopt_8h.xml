<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="apr__getopt_8h" kind="file" language="C++">
    <compoundname>apr_getopt.h</compoundname>
    <includes refid="apr__pools_8h" local="yes">apr_pools.h</includes>
    <incdepgraph>
      <node id="337">
        <label>stdint.h</label>
      </node>
      <node id="341">
        <label>errno.h</label>
      </node>
      <node id="342">
        <label>apr_general.h</label>
        <link refid="apr__general_8h"/>
        <childnode refid="334" relation="include">
        </childnode>
        <childnode refid="333" relation="include">
        </childnode>
        <childnode refid="340" relation="include">
        </childnode>
        <childnode refid="343" relation="include">
        </childnode>
      </node>
      <node id="339">
        <label>limits.h</label>
      </node>
      <node id="335">
        <label>sys/types.h</label>
      </node>
      <node id="345">
        <label>string.h</label>
      </node>
      <node id="347">
        <label>apr_thread_mutex.h</label>
        <link refid="apr__thread__mutex_8h"/>
        <childnode refid="334" relation="include">
        </childnode>
        <childnode refid="340" relation="include">
        </childnode>
        <childnode refid="333" relation="include">
        </childnode>
      </node>
      <node id="333">
        <label>apr_pools.h</label>
        <link refid="apr__pools_8h"/>
        <childnode refid="334" relation="include">
        </childnode>
        <childnode refid="340" relation="include">
        </childnode>
        <childnode refid="342" relation="include">
        </childnode>
        <childnode refid="344" relation="include">
        </childnode>
        <childnode refid="346" relation="include">
        </childnode>
      </node>
      <node id="346">
        <label>apr_allocator.h</label>
        <link refid="apr__allocator_8h"/>
        <childnode refid="334" relation="include">
        </childnode>
        <childnode refid="340" relation="include">
        </childnode>
        <childnode refid="344" relation="include">
        </childnode>
        <childnode refid="333" relation="include">
        </childnode>
        <childnode refid="347" relation="include">
        </childnode>
      </node>
      <node id="343">
        <label>signal.h</label>
      </node>
      <node id="332">
        <label>apr_getopt.h</label>
        <link refid="apr__getopt_8h"/>
        <childnode refid="333" relation="include">
        </childnode>
      </node>
      <node id="340">
        <label>apr_errno.h</label>
        <link refid="apr__errno_8h"/>
        <childnode refid="334" relation="include">
        </childnode>
        <childnode refid="341" relation="include">
        </childnode>
      </node>
      <node id="338">
        <label>sys/wait.h</label>
      </node>
      <node id="334">
        <label>apr.h</label>
        <link refid="apr_8h"/>
        <childnode refid="335" relation="include">
        </childnode>
        <childnode refid="336" relation="include">
        </childnode>
        <childnode refid="337" relation="include">
        </childnode>
        <childnode refid="338" relation="include">
        </childnode>
        <childnode refid="339" relation="include">
        </childnode>
      </node>
      <node id="336">
        <label>sys/socket.h</label>
      </node>
      <node id="344">
        <label>apr_want.h</label>
        <link refid="apr__want_8h"/>
        <childnode refid="334" relation="include">
        </childnode>
        <childnode refid="345" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structapr__getopt__t" prot="public">apr_getopt_t</innerclass>
    <innerclass refid="structapr__getopt__option__t" prot="public">apr_getopt_option_t</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__apr__getopt_1gad0f6c9baec81bc84293e0f1e2262656e" prot="public" static="no">
        <type>void()</type>
        <definition>typedef void() apr_getopt_err_fn_t(void *arg, const char *err,...)</definition>
        <argsstring>(void *arg, const char *err,...)</argsstring>
        <name>apr_getopt_err_fn_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>An <computeroutput><ref refid="structapr__getopt__t" kindref="compound">apr_getopt_t</ref></computeroutput> error callback function.</para><para><emphasis>arg</emphasis> is this <computeroutput><ref refid="structapr__getopt__t" kindref="compound">apr_getopt_t</ref>&apos;s</computeroutput> <computeroutput>errarg</computeroutput> member. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_getopt.h" line="42" column="1" bodyfile="include/apr_getopt.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__apr__getopt_1gaed49565eab64803e93f76d0c40d6873d" prot="public" static="no">
        <type>struct <ref refid="structapr__getopt__t" kindref="compound">apr_getopt_t</ref></type>
        <definition>typedef struct apr_getopt_t apr_getopt_t</definition>
        <argsstring></argsstring>
        <name>apr_getopt_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="structapr__getopt__t" kindref="compound">apr_getopt_t</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_getopt.h" line="42" column="1" bodyfile="include/apr_getopt.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__apr__getopt_1ga114d2af52f3573eaeee2ffa73b2c4ff5" prot="public" static="no">
        <type>struct <ref refid="structapr__getopt__option__t" kindref="compound">apr_getopt_option_t</ref></type>
        <definition>typedef struct apr_getopt_option_t apr_getopt_option_t</definition>
        <argsstring></argsstring>
        <name>apr_getopt_option_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="structapr__getopt__option__t" kindref="compound">apr_getopt_option_t</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_getopt.h" line="42" column="1" bodyfile="include/apr_getopt.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__apr__getopt_1gaaab2b4bfb62361af7a2d427f5f29a3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c" kindref="member">apr_status_t</ref></type>
        <definition>apr_status_t apr_getopt_init</definition>
        <argsstring>(apr_getopt_t **os, apr_pool_t *cont, int argc, const char *const *argv)</argsstring>
        <name>apr_getopt_init</name>
        <param>
          <type><ref refid="structapr__getopt__t" kindref="compound">apr_getopt_t</ref> **</type>
          <declname>os</declname>
        </param>
        <param>
          <type><ref refid="group__apr__pools_1gaf137f28edcf9a086cd6bc36c20d7cdfb" kindref="member">apr_pool_t</ref> *</type>
          <declname>cont</declname>
        </param>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>const char *const *</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize the arguments for parsing by <ref refid="group__apr__getopt_1ga289cdcf7eacc997eb91fea7c02d08934" kindref="member">apr_getopt()</ref>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>os</parametername>
</parameternamelist>
<parameterdescription>
<para>The options structure created for <ref refid="group__apr__getopt_1ga289cdcf7eacc997eb91fea7c02d08934" kindref="member">apr_getopt()</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cont</parametername>
</parameternamelist>
<parameterdescription>
<para>The pool to operate on </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argc</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of arguments to parse </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argv</parametername>
</parameternamelist>
<parameterdescription>
<para>The array of arguments to parse </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para>Arguments 3 and 4 are most commonly argc and argv from main(argc, argv) The (*os)-&gt;errfn is initialized to fprintf(stderr... but may be overridden. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_getopt.h" line="103" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__apr__getopt_1ga289cdcf7eacc997eb91fea7c02d08934" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c" kindref="member">apr_status_t</ref></type>
        <definition>apr_status_t apr_getopt</definition>
        <argsstring>(apr_getopt_t *os, const char *opts, char *option_ch, const char **option_arg)</argsstring>
        <name>apr_getopt</name>
        <param>
          <type><ref refid="structapr__getopt__t" kindref="compound">apr_getopt_t</ref> *</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>opts</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>option_ch</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>option_arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parse the options initialized by <ref refid="group__apr__getopt_1gaaab2b4bfb62361af7a2d427f5f29a3d4" kindref="member">apr_getopt_init()</ref>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>os</parametername>
</parameternamelist>
<parameterdescription>
<para>The apr_opt_t structure returned by <ref refid="group__apr__getopt_1gaaab2b4bfb62361af7a2d427f5f29a3d4" kindref="member">apr_getopt_init()</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>opts</parametername>
</parameternamelist>
<parameterdescription>
<para>A string of characters that are acceptable options to the program. Characters followed by &quot;:&quot; are required to have an option associated </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>option_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>The next option character parsed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>option_arg</parametername>
</parameternamelist>
<parameterdescription>
<para>The argument following the option character: </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>There are four potential status values on exit. They are: <preformatted>
            APR_EOF      <ndash/>  No more options to parse
            APR_BADCH    <ndash/>  Found a bad option character
            APR_BADARG   <ndash/>  No argument followed the option flag
            APR_SUCCESS  <ndash/>  The next option was found.
</preformatted> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_getopt.h" line="122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__apr__getopt_1ga80d6ff2213da4e25406b3f179fa13989" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c" kindref="member">apr_status_t</ref></type>
        <definition>apr_status_t apr_getopt_long</definition>
        <argsstring>(apr_getopt_t *os, const apr_getopt_option_t *opts, int *option_ch, const char **option_arg)</argsstring>
        <name>apr_getopt_long</name>
        <param>
          <type><ref refid="structapr__getopt__t" kindref="compound">apr_getopt_t</ref> *</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structapr__getopt__option__t" kindref="compound">apr_getopt_option_t</ref> *</type>
          <declname>opts</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>option_ch</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>option_arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parse the options initialized by <ref refid="group__apr__getopt_1gaaab2b4bfb62361af7a2d427f5f29a3d4" kindref="member">apr_getopt_init()</ref>, accepting long options beginning with &quot;--&quot; in addition to single-character options beginning with &quot;-&quot;. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>os</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="structapr__getopt__t" kindref="compound">apr_getopt_t</ref> structure created by <ref refid="group__apr__getopt_1gaaab2b4bfb62361af7a2d427f5f29a3d4" kindref="member">apr_getopt_init()</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>opts</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a list of <ref refid="structapr__getopt__option__t" kindref="compound">apr_getopt_option_t</ref> structures, which can be initialized with { &quot;name&quot;, optch, has_args }. has_args is nonzero if the option requires an argument. A structure with an optch value of 0 terminates the list. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>option_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the value of &quot;optch&quot; from the <ref refid="structapr__getopt__option__t" kindref="compound">apr_getopt_option_t</ref> structure corresponding to the next option matched. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>option_arg</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the argument following the option, if any. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>There are four potential status values on exit. They are: <preformatted>
            APR_EOF      --  No more options to parse
            APR_BADCH    --  Found a bad option character
            APR_BADARG   --  No argument followed the option flag
            APR_SUCCESS  --  The next option was found.
</preformatted> When APR_SUCCESS is returned, os-&gt;ind gives the index of the first non-option argument. On error, a message will be printed to stdout unless os-&gt;err is set to 0. If os-&gt;interleave is set to nonzero, options can come after arguments, and os-&gt;argv will be permuted to leave non-option arguments at the end (the original argv is unaffected). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_getopt.h" line="150" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>APR Command Arguments (getopt) </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/apr_getopt.h"/>
  </compounddef>
</doxygen>
