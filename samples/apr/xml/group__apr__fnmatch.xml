<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__apr__fnmatch" kind="group">
    <compoundname>apr_fnmatch</compoundname>
    <title>Filename Matching Functions</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__apr__fnmatch_1gabe9c7d7efe6afc203a01befbc45bad96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c" kindref="member">apr_status_t</ref></type>
        <definition>apr_status_t apr_fnmatch</definition>
        <argsstring>(const char *pattern, const char *strings, int flags)</argsstring>
        <name>apr_fnmatch</name>
        <param>
          <type>const char *</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>strings</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Try to match the string to the given pattern, return APR_SUCCESS if match, else return APR_FNM_NOMATCH. Note that there is no such thing as an illegal pattern.</para><para>With all flags unset, a pattern is interpreted as such:</para><para>PATTERN: Backslash followed by any character, including another backslash.<linebreak/>
 MATCHES: That character exactly.</para><para>PATTERN: ?<linebreak/>
 MATCHES: Any single character. </para><para>PATTERN: *<linebreak/>
 MATCHES: Any sequence of zero or more characters. (Note that multiple *s in a row are equivalent to one.)</para><para>PATTERN: Any character other than \?*[ or a \ at the end of the pattern<linebreak/>
 MATCHES: That character exactly. (Case sensitive.)</para><para>PATTERN: [ followed by a class description followed by ]<linebreak/>
 MATCHES: A single character described by the class description. (Never matches, if the class description reaches until the end of the string without a ].) If the first character of the class description is ^ or !, the sense of the description is reversed. The rest of the class description is a list of single characters or pairs of characters separated by -. Any of those characters can have a backslash in front of them, which is ignored; this lets you use the characters ] and - in the character class, as well as ^ and ! at the beginning. The pattern matches a single character if it is one of the listed characters or falls into one of the listed ranges (inclusive, case sensitive). Ranges with the first character larger than the second are legal but never match. Edge cases: [] never matches, and [^] and [!] always match without consuming a character.</para><para>Note that these patterns attempt to match the entire string, not just find a substring matching the pattern.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pattern</parametername>
</parameternamelist>
<parameterdescription>
<para>The pattern to match to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>strings</parametername>
</parameternamelist>
<parameterdescription>
<para>The string we are trying to match </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>flags to use in the match. Bitwise OR of: <preformatted>
             APR_FNM_NOESCAPE       Disable backslash escaping
             APR_FNM_PATHNAME       Slash must be matched by slash
             APR_FNM_PERIOD         Period must be matched by period
             APR_FNM_CASE_BLIND     Compare characters case-insensitively.
</preformatted> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_fnmatch.h" line="120" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__apr__fnmatch_1ga4e7828bb7be756d999f13b8af8202204" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int apr_fnmatch_test</definition>
        <argsstring>(const char *pattern)</argsstring>
        <name>apr_fnmatch_test</name>
        <param>
          <type>const char *</type>
          <declname>pattern</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine if the given pattern is a regular expression. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pattern</parametername>
</parameternamelist>
<parameterdescription>
<para>The pattern to search for glob characters. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>non-zero if pattern has any glob characters in it </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_fnmatch.h" line="128" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__apr__fnmatch_1ga25c7eacaa966d0c9c09ef160644ac997" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c" kindref="member">apr_status_t</ref></type>
        <definition>apr_status_t apr_match_glob</definition>
        <argsstring>(const char *dir_pattern, apr_array_header_t **result, apr_pool_t *p)</argsstring>
        <name>apr_match_glob</name>
        <param>
          <type>const char *</type>
          <declname>dir_pattern</declname>
        </param>
        <param>
          <type><ref refid="structapr__array__header__t" kindref="compound">apr_array_header_t</ref> **</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="group__apr__pools_1gaf137f28edcf9a086cd6bc36c20d7cdfb" kindref="member">apr_pool_t</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Find all files that match a specified pattern in a directory. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dir_pattern</parametername>
</parameternamelist>
<parameterdescription>
<para>The pattern to use for finding files, appended to the search directory. The pattern is anything following the final forward or backward slash in the parameter. If no slash is found, the current directory is searched. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>Array to use when storing the results </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>The pool to use. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>APR_SUCCESS if no processing errors occurred, APR error code otherwise </para></simplesect>
<simplesect kind="remark"><para>The returned array may be empty even if APR_SUCCESS was returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_fnmatch.h" line="143" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__apr__fnmatch_1gaea769621807400e4c741e7deddf6c3df" prot="public" static="no">
        <name>APR_FNM_NOMATCH</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Match failed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_fnmatch.h" line="58" column="9" bodyfile="include/apr_fnmatch.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__apr__fnmatch_1gae12c1286631f316647be6dc007170630" prot="public" static="no">
        <name>APR_FNM_NOESCAPE</name>
        <initializer>0x01</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Disable backslash escaping. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_fnmatch.h" line="60" column="9" bodyfile="include/apr_fnmatch.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__apr__fnmatch_1ga0d421a2cef68cb590f958b5de6c7fe1b" prot="public" static="no">
        <name>APR_FNM_PATHNAME</name>
        <initializer>0x02</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Slash must be matched by slash. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_fnmatch.h" line="61" column="9" bodyfile="include/apr_fnmatch.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__apr__fnmatch_1ga4806f936b6eacc59dfed831d67b750ef" prot="public" static="no">
        <name>APR_FNM_PERIOD</name>
        <initializer>0x04</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Period must be matched by period. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_fnmatch.h" line="62" column="9" bodyfile="include/apr_fnmatch.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__apr__fnmatch_1ga5cee1c0a917a283a193721d11160b502" prot="public" static="no">
        <name>APR_FNM_CASE_BLIND</name>
        <initializer>0x08</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compare characters case-insensitively. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_fnmatch.h" line="63" column="9" bodyfile="include/apr_fnmatch.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
