<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="pcm__extplug_8c" kind="file" language="C++">
    <compoundname>pcm_extplug.c</compoundname>
    <includes local="yes">pcm_local.h</includes>
    <includes local="yes">pcm_plugin.h</includes>
    <includes refid="pcm__extplug_8h" local="yes">pcm_extplug.h</includes>
    <includes local="yes">pcm_ext_parm.h</includes>
    <incdepgraph>
      <node id="465">
        <label>pcm_ext_parm.h</label>
      </node>
      <node id="463">
        <label>pcm_plugin.h</label>
      </node>
      <node id="464">
        <label>pcm_extplug.h</label>
        <link refid="pcm__extplug_8h"/>
      </node>
      <node id="462">
        <label>pcm_local.h</label>
      </node>
      <node id="461">
        <label>/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_extplug.c</label>
        <link refid="pcm__extplug_8c"/>
        <childnode refid="462" relation="include">
        </childnode>
        <childnode refid="463" relation="include">
        </childnode>
        <childnode refid="464" relation="include">
        </childnode>
        <childnode refid="465" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___p_c_m___ext_plug_1gab0b27889f74c83cd033062981320fd62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_extplug_create</definition>
        <argsstring>(snd_pcm_extplug_t *extplug, const char *name, snd_config_t *root, snd_config_t *slave_conf, snd_pcm_stream_t stream, int mode)</argsstring>
        <name>snd_pcm_extplug_create</name>
        <param>
          <type><ref refid="group___p_c_m___ext_plug_1gaeddcbb8005ccafb008a75283d5d9e551" kindref="member">snd_pcm_extplug_t</ref> *</type>
          <declname>extplug</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>root</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>slave_conf</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gac23b43ff55add78638e503b9cc892c24" kindref="member">snd_pcm_stream_t</ref></type>
          <declname>stream</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Create an extplug instance. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>extplug</parametername>
</parameternamelist>
<parameterdescription>
<para>the extplug handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the PCM </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>root</parametername>
</parameternamelist>
<parameterdescription>
<para>configuration tree root </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>slave_conf</parametername>
</parameternamelist>
<parameterdescription>
<para>slave configuration root </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stream</parametername>
</parameternamelist>
<parameterdescription>
<para>stream direction </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM open mode </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, or a negative error code</para></simplesect>
Creates the extplug instance based on the given handle. The slave_conf argument is mandatory, and usually taken from the config tree of the PCM plugin as &quot;slave&quot; config value. name, root, stream and mode arguments are the values used for opening the PCM.</para><para>The callback is the mandatory field of extplug handle. At least, start, stop and pointer callbacks must be set before calling this function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_extplug.c" line="663" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_extplug.c" bodystart="663" bodyend="726"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___ext_plug_1ga7259292a6f64a2432f4c2a44bb5f8508" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_extplug_delete</definition>
        <argsstring>(snd_pcm_extplug_t *extplug)</argsstring>
        <name>snd_pcm_extplug_delete</name>
        <param>
          <type><ref refid="group___p_c_m___ext_plug_1gaeddcbb8005ccafb008a75283d5d9e551" kindref="member">snd_pcm_extplug_t</ref> *</type>
          <declname>extplug</declname>
        </param>
        <briefdescription>
<para>Delete the extplug instance. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>extplug</parametername>
</parameternamelist>
<parameterdescription>
<para>the extplug handle to delete </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, or a negative error code</para></simplesect>
The destructor of extplug instance. Closes the PCM and deletes the associated resources. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_extplug.c" line="736" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_extplug.c" bodystart="736" bodyend="739"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___ext_plug_1gacef181565eb697397ce41c1aab381777" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_pcm_extplug_params_reset</definition>
        <argsstring>(snd_pcm_extplug_t *extplug)</argsstring>
        <name>snd_pcm_extplug_params_reset</name>
        <param>
          <type><ref refid="group___p_c_m___ext_plug_1gaeddcbb8005ccafb008a75283d5d9e551" kindref="member">snd_pcm_extplug_t</ref> *</type>
          <declname>extplug</declname>
        </param>
        <briefdescription>
<para>Reset extplug parameters. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>extplug</parametername>
</parameternamelist>
<parameterdescription>
<para>the extplug handle</para></parameterdescription>
</parameteritem>
</parameterlist>
Resets the all parameters for the given extplug handle. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_extplug.c" line="748" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_extplug.c" bodystart="748" bodyend="752"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___ext_plug_1gad14f6746e36d556c7a7937633b965ca7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_extplug_set_slave_param_list</definition>
        <argsstring>(snd_pcm_extplug_t *extplug, int type, unsigned int num_list, const unsigned int *list)</argsstring>
        <name>snd_pcm_extplug_set_slave_param_list</name>
        <param>
          <type><ref refid="group___p_c_m___ext_plug_1gaeddcbb8005ccafb008a75283d5d9e551" kindref="member">snd_pcm_extplug_t</ref> *</type>
          <declname>extplug</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>num_list</declname>
        </param>
        <param>
          <type>const unsigned int *</type>
          <declname>list</declname>
        </param>
        <briefdescription>
<para>Set slave parameter as the list. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>extplug</parametername>
</parameternamelist>
<parameterdescription>
<para>the extplug handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_list</parametername>
</parameternamelist>
<parameterdescription>
<para>number of available values </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>the list of available values </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, or a negative error code</para></simplesect>
Sets the slave parameter as the list. The available values of the given parameter type of the slave PCM is restricted to the ones of the given list. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_extplug.c" line="766" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_extplug.c" bodystart="766" bodyend="774"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___ext_plug_1gad3cac0ee15293f349220a75cce69a51e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_extplug_set_slave_param_minmax</definition>
        <argsstring>(snd_pcm_extplug_t *extplug, int type, unsigned int min, unsigned int max)</argsstring>
        <name>snd_pcm_extplug_set_slave_param_minmax</name>
        <param>
          <type><ref refid="group___p_c_m___ext_plug_1gaeddcbb8005ccafb008a75283d5d9e551" kindref="member">snd_pcm_extplug_t</ref> *</type>
          <declname>extplug</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>min</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>max</declname>
        </param>
        <briefdescription>
<para>Set slave parameter as the min/max values. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>extplug</parametername>
</parameternamelist>
<parameterdescription>
<para>the extplug handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min</parametername>
</parameternamelist>
<parameterdescription>
<para>the minimum value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>the maximum value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, or a negative error code</para></simplesect>
Sets the slave parameter as the min/max values. The available values of the given parameter type of the slave PCM is restricted between the given minimum and maximum values. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_extplug.c" line="788" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_extplug.c" bodystart="788" bodyend="800"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___ext_plug_1gadbf27adba1a7cd0195b6ac750bb11bf7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_extplug_set_param_list</definition>
        <argsstring>(snd_pcm_extplug_t *extplug, int type, unsigned int num_list, const unsigned int *list)</argsstring>
        <name>snd_pcm_extplug_set_param_list</name>
        <param>
          <type><ref refid="group___p_c_m___ext_plug_1gaeddcbb8005ccafb008a75283d5d9e551" kindref="member">snd_pcm_extplug_t</ref> *</type>
          <declname>extplug</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>num_list</declname>
        </param>
        <param>
          <type>const unsigned int *</type>
          <declname>list</declname>
        </param>
        <briefdescription>
<para>Set master parameter as the list. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>extplug</parametername>
</parameternamelist>
<parameterdescription>
<para>the extplug handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_list</parametername>
</parameternamelist>
<parameterdescription>
<para>number of available values </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>the list of available values </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, or a negative error code</para></simplesect>
Sets the master parameter as the list. The available values of the given parameter type of this PCM (as input) is restricted to the ones of the given list. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_extplug.c" line="814" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_extplug.c" bodystart="814" bodyend="822"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___ext_plug_1gabef139bbe5db265433fd5310d0faad4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_extplug_set_param_minmax</definition>
        <argsstring>(snd_pcm_extplug_t *extplug, int type, unsigned int min, unsigned int max)</argsstring>
        <name>snd_pcm_extplug_set_param_minmax</name>
        <param>
          <type><ref refid="group___p_c_m___ext_plug_1gaeddcbb8005ccafb008a75283d5d9e551" kindref="member">snd_pcm_extplug_t</ref> *</type>
          <declname>extplug</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>min</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>max</declname>
        </param>
        <briefdescription>
<para>Set master parameter as the min/max values. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>extplug</parametername>
</parameternamelist>
<parameterdescription>
<para>the extplug handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min</parametername>
</parameternamelist>
<parameterdescription>
<para>the minimum value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>the maximum value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, or a negative error code</para></simplesect>
Sets the master parameter as the min/max values. The available values of the given parameter type of this PCM (as input) is restricted between the given minimum and maximum values. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_extplug.c" line="836" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_extplug.c" bodystart="836" bodyend="848"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>External Filter Plugin SDK. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Takashi Iwai <ulink url="mailto:tiwai@suse.de">tiwai@suse.de</ulink> </para></simplesect>
<simplesect kind="date"><para>2005 </para></simplesect>
</para>    </detaileddescription>
    <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_extplug.c"/>
  </compounddef>
</doxygen>
