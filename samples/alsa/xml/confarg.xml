<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="confarg" kind="page">
    <compoundname>confarg</compoundname>
    <title>Runtime arguments in configuration files</title>
    <detaileddescription>
<para>The ALSA library can accept runtime arguments for some configuration blocks. This extension is built on top of the basic configuration file syntax.</para><sect1 id="confarg_1confarg_define">
<title>Defining arguments</title>
<para>Arguments are defined using the id (key) <computeroutput>@args</computeroutput> and array values containing the string names of the arguments:</para><para><programlisting><codeline><highlight class="normal">@args<sp/>[<sp/>CARD<sp/>]<sp/><sp/>#<sp/>or</highlight></codeline>
<codeline><highlight class="normal">@args.0<sp/>CARD</highlight></codeline>
</programlisting></para></sect1>
<sect1 id="confarg_1confarg_type">
<title>Defining argument types and default values</title>
<para>An argument&apos;s type is specified with the id (key) <computeroutput>@args</computeroutput> and the argument name. The type and the default value are specified in the compound block:</para><para><programlisting><codeline><highlight class="normal">@args.CARD<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>type<sp/>string</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>default<sp/>&quot;abcd&quot;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para></sect1>
<sect1 id="confarg_1confarg_refer">
<title>Referring to arguments</title>
<para>Arguments are referred to with a dollar-sign ($) and the name of the argument:</para><para><programlisting><codeline><highlight class="normal">card<sp/>$CARD</highlight></codeline>
</programlisting></para></sect1>
<sect1 id="confarg_1confarg_usage">
<title>Usage</title>
<para>To use a block with arguments, write the argument values after the key, separated with a colon (:). For example, all these names for PCM interfaces give the same result:</para><para><programlisting><codeline><highlight class="normal">hw:0,1</highlight></codeline>
<codeline><highlight class="normal">hw:CARD=0,DEV=1</highlight></codeline>
<codeline><highlight class="normal">hw:{CARD<sp/>0<sp/>DEV<sp/>1}</highlight></codeline>
<codeline><highlight class="normal">plug:&quot;hw:0,1&quot;</highlight></codeline>
<codeline><highlight class="normal">plug:{SLAVE=&quot;hw:{CARD<sp/>0<sp/>DEV<sp/>1}&quot;}</highlight></codeline>
</programlisting></para><para>As you see, arguments can be specified in their proper order or by name. Note that arguments enclosed in braces are parsed in the same way as in configuration files, but using the override method by default.</para></sect1>
<sect1 id="confarg_1confarg_example">
<title>Example</title>
<para><programlisting><codeline><highlight class="normal">pcm.demo<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>@args<sp/>[<sp/>CARD<sp/>DEVICE<sp/>]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>@args.CARD<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>string</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default<sp/>&quot;supersonic&quot;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>@args.DEVICE<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>integer</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default<sp/>0</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>type<sp/>hw</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>card<sp/>$CARD</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>device<sp/>$DEVICE</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
