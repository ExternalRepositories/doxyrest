<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group___p_c_m___h_w___params" kind="group">
    <compoundname>PCM_HW_Params</compoundname>
    <title>Hardware Parameters</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga6e2dd8efbb7a4084bd05e6cc458d84f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_any</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)</argsstring>
        <name>snd_pcm_hw_params_any</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Fill params with a full configuration space for a PCM. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space</para></parameterdescription>
</parameteritem>
</parameterlist>
The configuration space will be filled with all possible ranges for the PCM device. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="677" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="3596" bodyend="3600"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga53b3b351bc5db48da18d5f36b98f79a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_can_mmap_sample_resolution</definition>
        <argsstring>(const snd_pcm_hw_params_t *params)</argsstring>
        <name>snd_pcm_hw_params_can_mmap_sample_resolution</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Check if hardware supports sample-resolution mmap for given configuration. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Hardware doesn&apos;t support sample-resolution mmap </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Hardware supports sample-resolution mmap</para></parameterdescription>
</parameteritem>
</parameterlist>
This function should only be called when the configuration space contains a single configuration. Call <ref refid="group___p_c_m_1ga1ca0dc120a484965e26cabf966502330" kindref="member">snd_pcm_hw_params</ref> to choose a single configuration from the configuration space. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="679" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="3247" bodyend="3255"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga3bfe71142e72dffb274f8ba9ef7edeee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_is_double</definition>
        <argsstring>(const snd_pcm_hw_params_t *params)</argsstring>
        <name>snd_pcm_hw_params_is_double</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Check if hardware does double buffering for start/stop for given configuration. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Hardware doesn&apos;t do double buffering for start/stop </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Hardware does double buffering for start/stop</para></parameterdescription>
</parameteritem>
</parameterlist>
This function should only be called when the configuration space contains a single configuration. Call <ref refid="group___p_c_m_1ga1ca0dc120a484965e26cabf966502330" kindref="member">snd_pcm_hw_params</ref> to choose a single configuration from the configuration space. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="680" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="3267" bodyend="3275"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga366395c87f811d8ab8df83dc8a8a8124" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_is_batch</definition>
        <argsstring>(const snd_pcm_hw_params_t *params)</argsstring>
        <name>snd_pcm_hw_params_is_batch</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Check if hardware does double buffering for data transfers for given configuration. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Hardware doesn&apos;t do double buffering for data transfers </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Hardware does double buffering for data transfers</para></parameterdescription>
</parameteritem>
</parameterlist>
This function should only be called when the configuration space contains a single configuration. Call <ref refid="group___p_c_m_1ga1ca0dc120a484965e26cabf966502330" kindref="member">snd_pcm_hw_params</ref> to choose a single configuration from the configuration space. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="681" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="3287" bodyend="3295"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1gac511eb0d4db6f1e8303161486061fe14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_is_block_transfer</definition>
        <argsstring>(const snd_pcm_hw_params_t *params)</argsstring>
        <name>snd_pcm_hw_params_is_block_transfer</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Check if hardware does block transfers for samples for given configuration. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Hardware doesn&apos;t block transfers </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Hardware does block transfers</para></parameterdescription>
</parameteritem>
</parameterlist>
This function should only be called when the configuration space contains a single configuration. Call <ref refid="group___p_c_m_1ga1ca0dc120a484965e26cabf966502330" kindref="member">snd_pcm_hw_params</ref> to choose a single configuration from the configuration space. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="682" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="3307" bodyend="3315"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga7a129f7671fee8c0ced42d64a6c2379d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_is_monotonic</definition>
        <argsstring>(const snd_pcm_hw_params_t *params)</argsstring>
        <name>snd_pcm_hw_params_is_monotonic</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Check if timestamps are monotonic for given configuration. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Device doesn&apos;t do monotomic timestamps </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Device does monotonic timestamps</para></parameterdescription>
</parameteritem>
</parameterlist>
This function should only be called when the configuration space contains a single configuration. Call <ref refid="group___p_c_m_1ga1ca0dc120a484965e26cabf966502330" kindref="member">snd_pcm_hw_params</ref> to choose a single configuration from the configuration space. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="683" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="3327" bodyend="3335"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1gacb214bcb2af7462195da73b060206800" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_can_overrange</definition>
        <argsstring>(const snd_pcm_hw_params_t *params)</argsstring>
        <name>snd_pcm_hw_params_can_overrange</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Check if hardware supports overrange detection. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Hardware doesn&apos;t support overrange detection </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Hardware supports overrange detection</para></parameterdescription>
</parameteritem>
</parameterlist>
This function should only be called when the configuration space contains a single configuration. Call <ref refid="group___p_c_m_1ga1ca0dc120a484965e26cabf966502330" kindref="member">snd_pcm_hw_params</ref> to choose a single configuration from the configuration space. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="684" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="3347" bodyend="3355"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1gaad4ba98b2f66baa5360b9a85f064a3e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_can_pause</definition>
        <argsstring>(const snd_pcm_hw_params_t *params)</argsstring>
        <name>snd_pcm_hw_params_can_pause</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Check if hardware supports pause. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Hardware doesn&apos;t support pause </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Hardware supports pause</para></parameterdescription>
</parameteritem>
</parameterlist>
This function should only be called when the configuration space contains a single configuration. Call <ref refid="group___p_c_m_1ga1ca0dc120a484965e26cabf966502330" kindref="member">snd_pcm_hw_params</ref> to choose a single configuration from the configuration space. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="685" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="3367" bodyend="3375"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga6b79539a34e6f51972f4c32b3296585a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_can_resume</definition>
        <argsstring>(const snd_pcm_hw_params_t *params)</argsstring>
        <name>snd_pcm_hw_params_can_resume</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Check if hardware supports resume. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Hardware doesn&apos;t support resume </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Hardware supports resume</para></parameterdescription>
</parameteritem>
</parameterlist>
This function should only be called when the configuration space contains a single configuration. Call <ref refid="group___p_c_m_1ga1ca0dc120a484965e26cabf966502330" kindref="member">snd_pcm_hw_params</ref> to choose a single configuration from the configuration space. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="686" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="3387" bodyend="3395"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1gabaf7b36cfb700973fe8d89971f0f967b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_is_half_duplex</definition>
        <argsstring>(const snd_pcm_hw_params_t *params)</argsstring>
        <name>snd_pcm_hw_params_is_half_duplex</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Check if hardware does half-duplex only. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Hardware doesn&apos;t do half-duplex </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Hardware does half-duplex</para></parameterdescription>
</parameteritem>
</parameterlist>
This function should only be called when the configuration space contains a single configuration. Call <ref refid="group___p_c_m_1ga1ca0dc120a484965e26cabf966502330" kindref="member">snd_pcm_hw_params</ref> to choose a single configuration from the configuration space. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="687" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="3407" bodyend="3415"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1gae8768da025e34e3c3c6b5a5dfdcd2ad4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_is_joint_duplex</definition>
        <argsstring>(const snd_pcm_hw_params_t *params)</argsstring>
        <name>snd_pcm_hw_params_is_joint_duplex</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Check if hardware does joint-duplex (playback and capture are somewhat correlated) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Hardware doesn&apos;t do joint-duplex </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Hardware does joint-duplex</para></parameterdescription>
</parameteritem>
</parameterlist>
This function should only be called when the configuration space contains a single configuration. Call <ref refid="group___p_c_m_1ga1ca0dc120a484965e26cabf966502330" kindref="member">snd_pcm_hw_params</ref> to choose a single configuration from the configuration space. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="688" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="3427" bodyend="3435"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1gafcea258e7d9b6094350699367f2ef9b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_can_sync_start</definition>
        <argsstring>(const snd_pcm_hw_params_t *params)</argsstring>
        <name>snd_pcm_hw_params_can_sync_start</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Check if hardware supports synchronized start with sample resolution. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Hardware doesn&apos;t support synchronized start </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Hardware supports synchronized start</para></parameterdescription>
</parameteritem>
</parameterlist>
This function should only be called when the configuration space contains a single configuration. Call <ref refid="group___p_c_m_1ga1ca0dc120a484965e26cabf966502330" kindref="member">snd_pcm_hw_params</ref> to choose a single configuration from the configuration space. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="689" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="3447" bodyend="3455"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1gad0f8922537619c70e41bf07eb740e54f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_can_disable_period_wakeup</definition>
        <argsstring>(const snd_pcm_hw_params_t *params)</argsstring>
        <name>snd_pcm_hw_params_can_disable_period_wakeup</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Check if hardware can disable period wakeups. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Hardware cannot disable period wakeups </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Hardware can disable period wakeups </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="690" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="3463" bodyend="3471"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1gafd935dde74ea0da6824b204eb78eb620" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_supports_audio_wallclock_ts</definition>
        <argsstring>(const snd_pcm_hw_params_t *params)</argsstring>
        <name>snd_pcm_hw_params_supports_audio_wallclock_ts</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Check if hardware supports audio wallclock timestamps. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Hardware doesn&apos;t support audio wallclock timestamps </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Hardware supports audio wallclock timestamps</para></parameterdescription>
</parameteritem>
</parameterlist>
This function should only be called when the configuration space contains a single configuration. Call <ref refid="group___p_c_m_1ga1ca0dc120a484965e26cabf966502330" kindref="member">snd_pcm_hw_params</ref> to choose a single configuration from the configuration space. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="691" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="3483" bodyend="3488"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1gaa2071d14dbb09232ecddf2e236bdfdf7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_supports_audio_ts_type</definition>
        <argsstring>(const snd_pcm_hw_params_t *params, int type)</argsstring>
        <name>snd_pcm_hw_params_supports_audio_ts_type</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Check if hardware supports type of audio timestamps. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Audio timestamp type </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Hardware doesn&apos;t support type of audio timestamps </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Hardware supports type of audio timestamps</para></parameterdescription>
</parameteritem>
</parameterlist>
This function should only be called when the configuration space contains a single configuration. Call <ref refid="group___p_c_m_1ga1ca0dc120a484965e26cabf966502330" kindref="member">snd_pcm_hw_params</ref> to choose a single configuration from the configuration space. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="692" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="3501" bodyend="3524"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga556ddf9731e184cb635994f739a6efe3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_get_rate_numden</definition>
        <argsstring>(const snd_pcm_hw_params_t *params, unsigned int *rate_num, unsigned int *rate_den)</argsstring>
        <name>snd_pcm_hw_params_get_rate_numden</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>rate_num</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>rate_den</declname>
        </param>
        <briefdescription>
<para>Get rate exact info from a configuration space. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rate_num</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to returned rate numerator </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rate_den</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to returned rate denominator </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code if the info is not available</para></simplesect>
This function should only be called when the configuration space contains a single configuration. Call <ref refid="group___p_c_m_1ga1ca0dc120a484965e26cabf966502330" kindref="member">snd_pcm_hw_params</ref> to choose a single configuration from the configuration space. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="693" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="3537" bodyend="3548"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga8bb1180b62a4225f0e094b95ac5d3674" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_get_sbits</definition>
        <argsstring>(const snd_pcm_hw_params_t *params)</argsstring>
        <name>snd_pcm_hw_params_get_sbits</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Get sample resolution info from a configuration space. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>signification bits in sample otherwise a negative error code if the info is not available</para></simplesect>
This function should only be called when the configuration space contains a single configuration. Call <ref refid="group___p_c_m_1ga1ca0dc120a484965e26cabf966502330" kindref="member">snd_pcm_hw_params</ref> to choose a single configuration from the configuration space. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="696" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="3559" bodyend="3567"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga12fe3e1ca110fd61cff685890366c743" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_get_fifo_size</definition>
        <argsstring>(const snd_pcm_hw_params_t *params)</argsstring>
        <name>snd_pcm_hw_params_get_fifo_size</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Get hardware FIFO size info from a configuration space. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>FIFO size in frames otherwise a negative error code if the info is not available</para></simplesect>
This function should only be called when the configuration space contains a single configuration. Call <ref refid="group___p_c_m_1ga1ca0dc120a484965e26cabf966502330" kindref="member">snd_pcm_hw_params</ref> to choose a single configuration from the configuration space. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="697" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="3578" bodyend="3586"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga092e6c110ad7b4e52855b9522e437ed9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t snd_pcm_hw_params_sizeof</definition>
        <argsstring>(void)</argsstring>
        <name>snd_pcm_hw_params_sizeof</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>get size of <ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>size in bytes </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="725" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="3914" bodyend="3917"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga6e53d09a9c7cc3f2a692c0af99886237" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_malloc</definition>
        <argsstring>(snd_pcm_hw_params_t **ptr)</argsstring>
        <name>snd_pcm_hw_params_malloc</name>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> **</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>allocate an invalid <ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> using standard malloc </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>returned pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="731" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="3924" bodyend="3931"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga8c094063e7a13be0b9a043be8616a181" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_pcm_hw_params_free</definition>
        <argsstring>(snd_pcm_hw_params_t *obj)</argsstring>
        <name>snd_pcm_hw_params_free</name>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>frees a previously allocated <ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to object to free </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="732" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="3937" bodyend="3940"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga9bcedf4bb4b21527a584846a5986a1f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_pcm_hw_params_copy</definition>
        <argsstring>(snd_pcm_hw_params_t *dst, const snd_pcm_hw_params_t *src)</argsstring>
        <name>snd_pcm_hw_params_copy</name>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>copy one <ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> to another </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to destination </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to source </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="733" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="3947" bodyend="3951"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga752e62bb419c7ebe151f8023f5eed1f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_get_access</definition>
        <argsstring>(const snd_pcm_hw_params_t *params, snd_pcm_access_t *_access)</argsstring>
        <name>snd_pcm_hw_params_get_access</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga661221ba5e8f1d6eaf4ab8e2da57cc1a" kindref="member">snd_pcm_access_t</ref> *</type>
          <declname>_access</declname>
          <defname>access</defname>
        </param>
        <briefdescription>
<para>Extract access type from a configuration space. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>access</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>access type otherwise a negative error code if the configuration space does not contain a single value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="737" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="3963" bodyend="3971"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1gab56553ff541e6e9ddae397f6faba840f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_test_access</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_access_t _access)</argsstring>
        <name>snd_pcm_hw_params_test_access</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga661221ba5e8f1d6eaf4ab8e2da57cc1a" kindref="member">snd_pcm_access_t</ref></type>
          <declname>_access</declname>
          <defname>access</defname>
        </param>
        <briefdescription>
<para>Verify if an access type is available inside a configuration space for a PCM. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>access</parametername>
</parameternamelist>
<parameterdescription>
<para>access type </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if available a negative error code otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="738" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="3980" bodyend="3983"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga4c8f1c632931923531ca68ee048a8de8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_access</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_access_t _access)</argsstring>
        <name>snd_pcm_hw_params_set_access</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga661221ba5e8f1d6eaf4ab8e2da57cc1a" kindref="member">snd_pcm_access_t</ref></type>
          <declname>_access</declname>
          <defname>access</defname>
        </param>
        <briefdescription>
<para>Restrict a configuration space to contain only one access type. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>access</parametername>
</parameternamelist>
<parameterdescription>
<para>access type </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code if configuration space would become empty </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="739" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="3992" bodyend="3995"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga2fd545bdf469d54cff6a038e31ce56ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_access_first</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_access_t *_access)</argsstring>
        <name>snd_pcm_hw_params_set_access_first</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga661221ba5e8f1d6eaf4ab8e2da57cc1a" kindref="member">snd_pcm_access_t</ref> *</type>
          <declname>_access</declname>
          <defname>access</defname>
        </param>
        <briefdescription>
<para>Restrict a configuration space to contain only its first access type. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>access</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned first access type </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="740" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4007" bodyend="4011"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga172b949e37f28da5a102e56b04f69be3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_access_last</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_access_t *_access)</argsstring>
        <name>snd_pcm_hw_params_set_access_last</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga661221ba5e8f1d6eaf4ab8e2da57cc1a" kindref="member">snd_pcm_access_t</ref> *</type>
          <declname>_access</declname>
          <defname>access</defname>
        </param>
        <briefdescription>
<para>Restrict a configuration space to contain only its last access type. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>access</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned last access type </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="741" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4023" bodyend="4027"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1gad54808a277db646cbc21be07efc31000" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_access_mask</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_access_mask_t *mask)</argsstring>
        <name>snd_pcm_hw_params_set_access_mask</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba" kindref="member">snd_pcm_access_mask_t</ref> *</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space to contain only a set of access types. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Access mask </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="742" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4036" bodyend="4039"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga20079e218c9307e4e683f0743f3af38c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_get_access_mask</definition>
        <argsstring>(snd_pcm_hw_params_t *params, snd_pcm_access_mask_t *mask)</argsstring>
        <name>snd_pcm_hw_params_get_access_mask</name>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba" kindref="member">snd_pcm_access_mask_t</ref> *</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Get access mask from a configuration space. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned Access mask </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="743" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4046" bodyend="4052"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga66b28dd4f26d603e923a3577d1a2e98f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_get_format</definition>
        <argsstring>(const snd_pcm_hw_params_t *params, snd_pcm_format_t *val)</argsstring>
        <name>snd_pcm_hw_params_get_format</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gaa14b7f26877a812acbb39811364177f8" kindref="member">snd_pcm_format_t</ref> *</type>
          <declname>val</declname>
          <defname>format</defname>
        </param>
        <briefdescription>
<para>Extract format from a configuration space. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>returned format </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>format otherwise a negative error code if the configuration space does not contain a single value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="745" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4064" bodyend="4068"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga64e1a5143bbd72c8f5cffca828d506ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_test_format</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_format_t val)</argsstring>
        <name>snd_pcm_hw_params_test_format</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gaa14b7f26877a812acbb39811364177f8" kindref="member">snd_pcm_format_t</ref></type>
          <declname>val</declname>
          <defname>format</defname>
        </param>
        <briefdescription>
<para>Verify if a format is available inside a configuration space for a PCM. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>format </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if available a negative error code otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="746" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4077" bodyend="4080"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga6014e0e1ec7934f8c745290e83e59199" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_format</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_format_t val)</argsstring>
        <name>snd_pcm_hw_params_set_format</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gaa14b7f26877a812acbb39811364177f8" kindref="member">snd_pcm_format_t</ref></type>
          <declname>val</declname>
          <defname>format</defname>
        </param>
        <briefdescription>
<para>Restrict a configuration space to contain only one format. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>format </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="747" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4089" bodyend="4092"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga762ee356cc687c81c206df3c18245e4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_format_first</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_format_t *format)</argsstring>
        <name>snd_pcm_hw_params_set_format_first</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gaa14b7f26877a812acbb39811364177f8" kindref="member">snd_pcm_format_t</ref> *</type>
          <declname>format</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space to contain only its first format. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned first format </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="748" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4104" bodyend="4108"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga4a643db96742a3da0287eda6cc3eafa2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_format_last</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_format_t *format)</argsstring>
        <name>snd_pcm_hw_params_set_format_last</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gaa14b7f26877a812acbb39811364177f8" kindref="member">snd_pcm_format_t</ref> *</type>
          <declname>format</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space to contain only its last format. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned last format </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="749" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4120" bodyend="4124"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga33261bd41636eb28fd42493e4ea4efba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_format_mask</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_format_mask_t *mask)</argsstring>
        <name>snd_pcm_hw_params_set_format_mask</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga0936aa9ac0051a3611583a2740915545" kindref="member">snd_pcm_format_mask_t</ref> *</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space to contain only a set of formats. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Format mask </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="750" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4133" bodyend="4136"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga43bdf7596f8722fb6b8edbeaf1aebd90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_pcm_hw_params_get_format_mask</definition>
        <argsstring>(snd_pcm_hw_params_t *params, snd_pcm_format_mask_t *mask)</argsstring>
        <name>snd_pcm_hw_params_get_format_mask</name>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga0936aa9ac0051a3611583a2740915545" kindref="member">snd_pcm_format_mask_t</ref> *</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Get format mask from a configuration space. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned Format mask </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="751" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4143" bodyend="4146"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga77a934515c24e17cfb0af21a8b2e0690" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_get_subformat</definition>
        <argsstring>(const snd_pcm_hw_params_t *params, snd_pcm_subformat_t *subformat)</argsstring>
        <name>snd_pcm_hw_params_get_subformat</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga1e5fe73a6bdf881e2f91921d5e5327c7" kindref="member">snd_pcm_subformat_t</ref> *</type>
          <declname>subformat</declname>
        </param>
        <briefdescription>
<para>Extract subformat from a configuration space. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>subformat</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned subformat value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>subformat otherwise a negative error code if the configuration space does not contain a single value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="753" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4158" bodyend="4162"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1gaf5062e723956551092db201f34c99495" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_test_subformat</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_subformat_t subformat)</argsstring>
        <name>snd_pcm_hw_params_test_subformat</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga1e5fe73a6bdf881e2f91921d5e5327c7" kindref="member">snd_pcm_subformat_t</ref></type>
          <declname>subformat</declname>
        </param>
        <briefdescription>
<para>Verify if a subformat is available inside a configuration space for a PCM. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>subformat</parametername>
</parameternamelist>
<parameterdescription>
<para>subformat value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if available a negative error code otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="754" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4171" bodyend="4174"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga08dfde7d1fc6a0a56609f3ec40ed26e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_subformat</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_subformat_t subformat)</argsstring>
        <name>snd_pcm_hw_params_set_subformat</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga1e5fe73a6bdf881e2f91921d5e5327c7" kindref="member">snd_pcm_subformat_t</ref></type>
          <declname>subformat</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space to contain only one subformat. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>subformat</parametername>
</parameternamelist>
<parameterdescription>
<para>subformat value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code if configuration space would become empty </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="755" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4183" bodyend="4186"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga12b745bdf119127f2216d61a2bd28688" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_subformat_first</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_subformat_t *subformat)</argsstring>
        <name>snd_pcm_hw_params_set_subformat_first</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga1e5fe73a6bdf881e2f91921d5e5327c7" kindref="member">snd_pcm_subformat_t</ref> *</type>
          <declname>subformat</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space to contain only its first subformat. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>subformat</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned subformat </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="756" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4198" bodyend="4202"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1gab1a02fff3ef394da274d2b2652df856d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_subformat_last</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_subformat_t *subformat)</argsstring>
        <name>snd_pcm_hw_params_set_subformat_last</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga1e5fe73a6bdf881e2f91921d5e5327c7" kindref="member">snd_pcm_subformat_t</ref> *</type>
          <declname>subformat</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space to contain only its last subformat. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>subformat</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned subformat </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="757" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4214" bodyend="4218"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga3ebc4625b258df82164dc9220a9f9117" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_subformat_mask</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_subformat_mask_t *mask)</argsstring>
        <name>snd_pcm_hw_params_set_subformat_mask</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga891b054202089747199bc3348b9d9630" kindref="member">snd_pcm_subformat_mask_t</ref> *</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space to contain only a set of subformats. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Subformat mask </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="758" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4227" bodyend="4230"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1gaafee81722f5bcba41e16e4c7a77059c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_pcm_hw_params_get_subformat_mask</definition>
        <argsstring>(snd_pcm_hw_params_t *params, snd_pcm_subformat_mask_t *mask)</argsstring>
        <name>snd_pcm_hw_params_get_subformat_mask</name>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga891b054202089747199bc3348b9d9630" kindref="member">snd_pcm_subformat_mask_t</ref> *</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Get subformat mask from a configuration space. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned Subformat mask </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="759" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4237" bodyend="4240"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1gae27e04757272070197e00c0dfec5dc97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_get_channels</definition>
        <argsstring>(const snd_pcm_hw_params_t *params, unsigned int *val)</argsstring>
        <name>snd_pcm_hw_params_get_channels</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Extract channels from a configuration space. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned channels count </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code if the configuration space does not contain a single value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="761" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4252" bodyend="4256"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga93326349bbb91840a3e0bafef0390cb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_get_channels_min</definition>
        <argsstring>(const snd_pcm_hw_params_t *params, unsigned int *val)</argsstring>
        <name>snd_pcm_hw_params_get_channels_min</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Extract minimum channels count from a configuration space. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum channels count </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="762" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4267" bodyend="4271"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1gac6c37a5da7dc8cb19fdd8e9cf1bd673d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_get_channels_max</definition>
        <argsstring>(const snd_pcm_hw_params_t *params, unsigned int *val)</argsstring>
        <name>snd_pcm_hw_params_get_channels_max</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Extract maximum channels count from a configuration space. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum channels count </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="763" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4282" bodyend="4286"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga8fabc38d770ad922e5b4e0338e7fb242" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_test_channels</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val)</argsstring>
        <name>snd_pcm_hw_params_test_channels</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Verify if a channels count is available inside a configuration space for a PCM. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>channels count </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if available a negative error code otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="764" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4295" bodyend="4298"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga3a5b2a05c5d9869cc743dac71c0d270a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_channels</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val)</argsstring>
        <name>snd_pcm_hw_params_set_channels</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space to contain only one channels count. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>channels count </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code if configuration space would become empty </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="765" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4307" bodyend="4310"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga155b8ac646b90560cd00f195086ff464" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_channels_min</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val)</argsstring>
        <name>snd_pcm_hw_params_set_channels_min</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space with a minimum channels count. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum channels count (on return filled with actual minimum) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code if configuration space would become empty </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="766" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4319" bodyend="4322"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga739d51d0822f182a6583a5436f410b34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_channels_max</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val)</argsstring>
        <name>snd_pcm_hw_params_set_channels_max</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space with a maximum channels count. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum channels count (on return filled with actual maximum) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code if configuration space would become empty </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="767" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4331" bodyend="4334"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga24e507c965aff4984aa4969cc896e830" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_channels_minmax</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *min, unsigned int *max)</argsstring>
        <name>snd_pcm_hw_params_set_channels_minmax</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>min</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>max</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space to have channels counts in a given range. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum channels count (on return filled with actual minimum) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum channels count (on return filled with actual maximum) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code if configuration space would become empty </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="768" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4344" bodyend="4347"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga59aa9e1a02f4ce616fe92c605a833f8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_channels_near</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val)</argsstring>
        <name>snd_pcm_hw_params_set_channels_near</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space to have channels count nearest to a target. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>target channels count, returned chosen channels count </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code if configuration space is empty </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="769" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4359" bodyend="4363"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1gae08e3371d3d2e8e512537630a59f9a55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_channels_first</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val)</argsstring>
        <name>snd_pcm_hw_params_set_channels_first</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space to contain only its minimum channels count. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum channels count </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="770" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4375" bodyend="4379"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga54846380c1dc99ee9124d45232931ebd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_channels_last</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val)</argsstring>
        <name>snd_pcm_hw_params_set_channels_last</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space to contain only its maximum channels count. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum channels count </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="771" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4391" bodyend="4395"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga4279c4b45a15f7e282e436e75d6ba13a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_get_rate</definition>
        <argsstring>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</argsstring>
        <name>snd_pcm_hw_params_get_rate</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Extract rate from a configuration space. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned approximate rate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code if the configuration space does not contain a single value</para></simplesect>
Actual exact value is &lt;,=,&gt; the approximate one following dir (-1, 0, 1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="773" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4410" bodyend="4414"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1gaf7801fdf88fa51ca96fe97d3211db3f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_get_rate_min</definition>
        <argsstring>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</argsstring>
        <name>snd_pcm_hw_params_get_rate_min</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Extract minimum rate from a configuration space. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned approximate minimum rate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code</para></simplesect>
Exact value is &lt;,=,&gt; the returned one following dir (-1,0,1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="774" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4428" bodyend="4432"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga6770c2b988c8dc91eb51893cc145aa2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_get_rate_max</definition>
        <argsstring>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</argsstring>
        <name>snd_pcm_hw_params_get_rate_max</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Extract maximum rate from a configuration space. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned approximate maximum rate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code</para></simplesect>
Exact value is &lt;,=,&gt; the returned one following dir (-1,0,1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="775" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4446" bodyend="4450"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga5f09b37dd6f4c213029f8f39e00137a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_test_rate</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir)</argsstring>
        <name>snd_pcm_hw_params_test_rate</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Verify if a rate is available inside a configuration space for a PCM. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate rate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if available a negative error code otherwise</para></simplesect>
Wanted exact value is &lt;,=,&gt; val following dir (-1,0,1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="776" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4462" bodyend="4465"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga29cd2571738847813af1489043d1af5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_rate</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir)</argsstring>
        <name>snd_pcm_hw_params_set_rate</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space to contain only one rate. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate rate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code if configuration space would become empty</para></simplesect>
Wanted exact value is &lt;,=,&gt; val following dir (-1,0,1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="777" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4477" bodyend="4480"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga89374ae29dd924915ada6f26cd9a3292" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_rate_min</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</argsstring>
        <name>snd_pcm_hw_params_set_rate_min</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space with a minimum rate. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate minimum rate (on return filled with actual minimum) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction (on return filled with actual direction) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code if configuration space would become empty</para></simplesect>
Wanted/actual exact minimum is &lt;,=,&gt; val following dir (-1,0,1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="778" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4492" bodyend="4495"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga8701776750b18b2dad19a4115791c2f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_rate_max</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</argsstring>
        <name>snd_pcm_hw_params_set_rate_max</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space with a maximum rate. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate maximum rate (on return filled with actual maximum) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction (on return filled with actual direction) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code if configuration space would become empty</para></simplesect>
Wanted/actual exact maximum is &lt;,=,&gt; val following dir (-1,0,1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="779" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4507" bodyend="4510"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga03795a2ee03be25a30185b26a1bc3e21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_rate_minmax</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *min, int *mindir, unsigned int *max, int *maxdir)</argsstring>
        <name>snd_pcm_hw_params_set_rate_minmax</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>min</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>mindir</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>max</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>maxdir</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space to have rates in a given range. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate minimum rate (on return filled with actual minimum) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mindir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction for minimum (on return filled with actual direction) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate maximum rate (on return filled with actual maximum) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxdir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction for maximum (on return filled with actual direction) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code if configuration space would become empty</para></simplesect>
Wanted/actual exact min/max is &lt;,=,&gt; val following dir (-1,0,1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="780" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4524" bodyend="4527"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga39124280d06ce63092a77e3f25ddd6ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_rate_near</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</argsstring>
        <name>snd_pcm_hw_params_set_rate_near</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space to have rate nearest to a target. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate target rate / returned approximate set rate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code if configuration space is empty</para></simplesect>
target/chosen exact value is &lt;,=,&gt; val following dir (-1,0,1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="781" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4542" bodyend="4546"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1gac0ded856c76459608fdd5ea0f254349e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_rate_first</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</argsstring>
        <name>snd_pcm_hw_params_set_rate_first</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space to contain only its minimum rate. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned minimum approximate rate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code</para></simplesect>
Actual exact value is &lt;,=,&gt; the approximate one following dir (-1, 0, 1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="782" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4561" bodyend="4565"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga5d90a5204061482be45ac4e0d2b10e49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_rate_last</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</argsstring>
        <name>snd_pcm_hw_params_set_rate_last</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space to contain only its maximum rate. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned maximum approximate rate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code</para></simplesect>
Actual exact value is &lt;,=,&gt; the approximate one following dir (-1, 0, 1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="783" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4580" bodyend="4584"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga82eecc0e27a94ce0caa195cc3765536c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_rate_resample</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val)</argsstring>
        <name>snd_pcm_hw_params_set_rate_resample</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space to contain only real hardware rates. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>0 = disable, 1 = enable (default) rate resampling </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="784" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4593" bodyend="4602"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1gacaa53b05cd5e4f55eeb4d5ea64129c21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_get_rate_resample</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val)</argsstring>
        <name>snd_pcm_hw_params_get_rate_resample</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Extract resample state from a configuration space. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>0 = disable, 1 = enable rate resampling </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="785" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4611" bodyend="4616"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga2c0b6b22bbeed5da06293608f3be844d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_export_buffer</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val)</argsstring>
        <name>snd_pcm_hw_params_set_export_buffer</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space to allow the buffer to be accessible from outside. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>0 = disable, 1 = enable (default) exporting buffer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="786" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4625" bodyend="4634"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1gafec078cf053a87339ba91c0f605dca54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_get_export_buffer</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val)</argsstring>
        <name>snd_pcm_hw_params_get_export_buffer</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Extract buffer accessibility from a configuration space. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>0 = disable, 1 = enable exporting buffer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="787" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4643" bodyend="4648"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1gac2761ded0a51cabc953beac44f65972b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_period_wakeup</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val)</argsstring>
        <name>snd_pcm_hw_params_set_period_wakeup</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space to settings without period wakeups. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>0 = disable, 1 = enable (default) period wakeup </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero on success, otherwise a negative error code.</para></simplesect>
This function must be called only on devices where non-blocking mode is enabled.</para><para>To check whether the hardware does support disabling period wakeups, call <ref refid="group___p_c_m___h_w___params_1gad0f8922537619c70e41bf07eb740e54f" kindref="member">snd_pcm_hw_params_can_disable_period_wakeup()</ref>. If the hardware does not support this mode, standard period wakeups will be generated.</para><para>Even with disabled period wakeups, the period size/time/count parameters are valid; it is suggested to use <ref refid="group___p_c_m___h_w___params_1gad0bce0ad23b3b708858bb20df81e09a2" kindref="member">snd_pcm_hw_params_set_period_size_last()</ref>.</para><para>When period wakeups are disabled, the application must not use any functions that could block on this device. The use of poll should be limited to error cases. The application needs to use an external event or a timer to check the state of the ring buffer and refill it apropriately. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="788" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4672" bodyend="4685"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga426a657640410a4c6a652ab15eb57acc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_get_period_wakeup</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val)</argsstring>
        <name>snd_pcm_hw_params_get_period_wakeup</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Extract period wakeup flag from a configuration space. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>0 = disabled, 1 = enabled period wakeups </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero on success, otherwise a negative error code. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="789" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4694" bodyend="4699"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga71f5d43bf63dc7292b8b58f17acccf89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_get_period_time</definition>
        <argsstring>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</argsstring>
        <name>snd_pcm_hw_params_get_period_time</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Extract period time from a configuration space. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned approximate period duration in us </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code if the configuration space does not contain a single value</para></simplesect>
Actual exact value is &lt;,=,&gt; the approximate one following dir (-1, 0, 1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="791" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4713" bodyend="4717"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1gae68d4b168ef5d40f644a1a4ed854689f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_get_period_time_min</definition>
        <argsstring>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</argsstring>
        <name>snd_pcm_hw_params_get_period_time_min</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Extract minimum period time from a configuration space. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate minimum period duration in us </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code</para></simplesect>
Exact value is &lt;,=,&gt; the returned one following dir (-1,0,1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="792" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4731" bodyend="4735"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga74b510f4958e90a83a631a1eeedf13e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_get_period_time_max</definition>
        <argsstring>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</argsstring>
        <name>snd_pcm_hw_params_get_period_time_max</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Extract maximum period time from a configuration space. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate maximum period duration in us </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code</para></simplesect>
Exact value is &lt;,=,&gt; the returned one following dir (-1,0,1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="793" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4749" bodyend="4753"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1gaf1f6452ad189be5c4e1ab3bd86f2f6d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_test_period_time</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir)</argsstring>
        <name>snd_pcm_hw_params_test_period_time</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Verify if a period time is available inside a configuration space for a PCM. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate period duration in us </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if available a negative error code otherwise</para></simplesect>
Wanted exact value is &lt;,=,&gt; val following dir (-1,0,1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="794" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4765" bodyend="4768"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1gaa2bc2a32d3971521064741a30e10c92f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_period_time</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir)</argsstring>
        <name>snd_pcm_hw_params_set_period_time</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space to contain only one period time. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate period duration in us </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code if configuration space would become empty</para></simplesect>
Wanted exact value is &lt;,=,&gt; val following dir (-1,0,1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="795" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4780" bodyend="4783"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga2dc9fcdb1b30126a20d96a65c7826d9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_period_time_min</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</argsstring>
        <name>snd_pcm_hw_params_set_period_time_min</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space with a minimum period time. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate minimum period duration in us (on return filled with actual minimum) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction (on return filled with actual direction) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code if configuration space would become empty</para></simplesect>
Wanted/actual exact minimum is &lt;,=,&gt; val following dir (-1,0,1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="796" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4796" bodyend="4799"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1gaad53e3af1f1fe522c3d902f5403954d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_period_time_max</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</argsstring>
        <name>snd_pcm_hw_params_set_period_time_max</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space with a maximum period time. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate maximum period duration in us (on return filled with actual maximum) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction (on return filled with actual direction) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code if configuration space would become empty</para></simplesect>
Wanted/actual exact maximum is &lt;,=,&gt; val following dir (-1,0,1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="797" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4811" bodyend="4814"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga993e05e43a31a6151427ba1f793c0b3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_period_time_minmax</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *min, int *mindir, unsigned int *max, int *maxdir)</argsstring>
        <name>snd_pcm_hw_params_set_period_time_minmax</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>min</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>mindir</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>max</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>maxdir</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space to have period times in a given range. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate minimum period duration in us (on return filled with actual minimum) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mindir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction for minimum (on return filled with actual direction) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate maximum period duration in us (on return filled with actual maximum) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxdir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction for maximum (on return filled with actual direction) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code if configuration space would become empty</para></simplesect>
Wanted/actual exact min/max is &lt;,=,&gt; val following dir (-1,0,1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="798" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4828" bodyend="4831"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1gaa22d4f917c300b0c1f47b348c23705a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_period_time_near</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</argsstring>
        <name>snd_pcm_hw_params_set_period_time_near</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space to have period time nearest to a target. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate target period duration in us / returned chosen approximate target period duration </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code if configuration space is empty</para></simplesect>
target/chosen exact value is &lt;,=,&gt; val following dir (-1,0,1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="799" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4846" bodyend="4850"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga478e50e1fa7395af70100b906c31cb67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_period_time_first</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</argsstring>
        <name>snd_pcm_hw_params_set_period_time_first</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space to contain only its minimum period time. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned approximate period duration in us </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code</para></simplesect>
Actual exact value is &lt;,=,&gt; the approximate one following dir (-1, 0, 1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="800" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4865" bodyend="4869"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga2d48b4bee369912b0fc9b245d6c7a52d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_period_time_last</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</argsstring>
        <name>snd_pcm_hw_params_set_period_time_last</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space to contain only its maximum period time. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned maximum approximate period time </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>approximate period duration in us </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="801" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4882" bodyend="4886"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1gaba48ea189171536f9793e0d99e6db5e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_get_period_size</definition>
        <argsstring>(const snd_pcm_hw_params_t *params, snd_pcm_uframes_t *frames, int *dir)</argsstring>
        <name>snd_pcm_hw_params_get_period_size</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref> *</type>
          <declname>frames</declname>
          <defname>val</defname>
        </param>
        <param>
          <type>int *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Extract period size from a configuration space. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned approximate period size in frames </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code if the configuration space does not contain a single value</para></simplesect>
Actual exact value is &lt;,=,&gt; the approximate one following dir (-1, 0, 1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="803" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4901" bodyend="4909"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga3f6fe37605b54d0a25e8bf1d10f71ae4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_get_period_size_min</definition>
        <argsstring>(const snd_pcm_hw_params_t *params, snd_pcm_uframes_t *frames, int *dir)</argsstring>
        <name>snd_pcm_hw_params_get_period_size_min</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref> *</type>
          <declname>frames</declname>
          <defname>val</defname>
        </param>
        <param>
          <type>int *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Extract minimum period size from a configuration space. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate minimum period size in frames </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code</para></simplesect>
Exact value is &lt;,=,&gt; the returned one following dir (-1,0,1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="804" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4923" bodyend="4931"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1gab5c16621ae697e5ee6f442ec7b7062c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_get_period_size_max</definition>
        <argsstring>(const snd_pcm_hw_params_t *params, snd_pcm_uframes_t *frames, int *dir)</argsstring>
        <name>snd_pcm_hw_params_get_period_size_max</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref> *</type>
          <declname>frames</declname>
          <defname>val</defname>
        </param>
        <param>
          <type>int *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Extract maximum period size from a configuration space. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate minimum period size in frames </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code</para></simplesect>
Exact value is &lt;,=,&gt; the returned one following dir (-1,0,1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="805" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4945" bodyend="4953"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1gabc8712dab6cb135176de77f374d7ee17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_test_period_size</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t val, int dir)</argsstring>
        <name>snd_pcm_hw_params_test_period_size</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref></type>
          <declname>val</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Verify if a period size is available inside a configuration space for a PCM. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate period size in frames </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if available a negative error code otherwise</para></simplesect>
Wanted exact value is &lt;,=,&gt; val following dir (-1,0,1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="806" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4965" bodyend="4968"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga874c977dd9aac275c87a7b1c33a0dec0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_period_size</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t val, int dir)</argsstring>
        <name>snd_pcm_hw_params_set_period_size</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref></type>
          <declname>val</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space to contain only one period size. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate period size in frames </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code if configuration space would become empty</para></simplesect>
Wanted exact value is &lt;,=,&gt; val following dir (-1,0,1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="807" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4980" bodyend="4983"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga58e0468994d935f08080d9654f1b48b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_period_size_min</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val, int *dir)</argsstring>
        <name>snd_pcm_hw_params_set_period_size_min</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref> *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space with a minimum period size. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate minimum period size in frames (on return filled with actual minimum) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction (on return filled with actual direction) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code if configuration space would become empty</para></simplesect>
Wanted/actual exact minimum is &lt;,=,&gt; val following dir (-1,0,1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="808" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="4995" bodyend="5002"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga909f442c3d8c20b79de2edf6cc5ded41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_period_size_max</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val, int *dir)</argsstring>
        <name>snd_pcm_hw_params_set_period_size_max</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref> *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space with a maximum period size. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate maximum period size in frames (on return filled with actual maximum) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction (on return filled with actual direction) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code if configuration space would become empty</para></simplesect>
Wanted/actual exact minimum is &lt;,=,&gt; val following dir (-1,0,1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="809" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="5014" bodyend="5021"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga33c901f8364cb2533d6cdeba732e0e4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_period_size_minmax</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *min, int *mindir, snd_pcm_uframes_t *max, int *maxdir)</argsstring>
        <name>snd_pcm_hw_params_set_period_size_minmax</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref> *</type>
          <declname>min</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>mindir</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref> *</type>
          <declname>max</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>maxdir</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space to have period sizes in a given range. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate minimum period size in frames (on return filled with actual minimum) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mindir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction for minimum (on return filled with actual direction) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate maximum period size in frames (on return filled with actual maximum) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxdir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction for maximum (on return filled with actual direction) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code if configuration space would become empty</para></simplesect>
Wanted/actual exact min/max is &lt;,=,&gt; val following dir (-1,0,1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="810" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="5035" bodyend="5043"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga9162045265f283c532634506456cab09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_period_size_near</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val, int *dir)</argsstring>
        <name>snd_pcm_hw_params_set_period_size_near</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref> *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space to have period size nearest to a target. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate target period size in frames / returned chosen approximate target period size </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code if configuration space is empty</para></simplesect>
target/chosen exact value is &lt;,=,&gt; val following dir (-1,0,1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="811" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="5058" bodyend="5066"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1gaf74bbb66a71ece8260be20502822335b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_period_size_first</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val, int *dir)</argsstring>
        <name>snd_pcm_hw_params_set_period_size_first</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref> *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space to contain only its minimum period size. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned maximum approximate period size in frames </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code</para></simplesect>
Actual exact value is &lt;,=,&gt; the approximate one following dir (-1, 0, 1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="812" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="5081" bodyend="5089"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1gad0bce0ad23b3b708858bb20df81e09a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_period_size_last</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val, int *dir)</argsstring>
        <name>snd_pcm_hw_params_set_period_size_last</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref> *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space to contain only its maximum period size. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned maximum approximate period size in frames </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code</para></simplesect>
Actual exact value is &lt;,=,&gt; the approximate one following dir (-1, 0, 1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="813" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="5104" bodyend="5112"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga13bc85ca5fe34b19112579a7e27cf41a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_period_size_integer</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)</argsstring>
        <name>snd_pcm_hw_params_set_period_size_integer</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space to contain only integer period sizes. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code if configuration space would become empty </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="814" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="5120" bodyend="5123"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga7242d7045ae23a9ae736c191030c25e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_get_periods</definition>
        <argsstring>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</argsstring>
        <name>snd_pcm_hw_params_get_periods</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Extract periods from a configuration space. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate periods per buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code if the configuration space does not contain a single value</para></simplesect>
Actual exact value is &lt;,=,&gt; the approximate one following dir (-1, 0, 1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="816" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="5138" bodyend="5142"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga17f3826360b0fe1f47c696388d25ac93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_get_periods_min</definition>
        <argsstring>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</argsstring>
        <name>snd_pcm_hw_params_get_periods_min</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Extract minimum periods count from a configuration space. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate minimum periods per buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code</para></simplesect>
Exact value is &lt;,=,&gt; the returned one following dir (-1,0,1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="817" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="5156" bodyend="5160"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga60417687267cd6ddc56a9c15179fe275" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_get_periods_max</definition>
        <argsstring>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</argsstring>
        <name>snd_pcm_hw_params_get_periods_max</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Extract maximum periods count from a configuration space. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate maximum periods per buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code</para></simplesect>
Exact value is &lt;,=,&gt; the returned one following dir (-1,0,1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="818" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="5174" bodyend="5178"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga0de7350f433935a995d439fe38f55088" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_test_periods</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir)</argsstring>
        <name>snd_pcm_hw_params_test_periods</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Verify if a periods count is available inside a configuration space for a PCM. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate periods per buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if available a negative error code otherwise</para></simplesect>
Wanted exact value is &lt;,=,&gt; val following dir (-1,0,1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="819" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="5190" bodyend="5193"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga472aa3f2d8ce4040caa874fe60aba961" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_periods</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir)</argsstring>
        <name>snd_pcm_hw_params_set_periods</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space to contain only one periods count. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate periods per buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code if configuration space would become empty</para></simplesect>
Wanted exact value is &lt;,=,&gt; val following dir (-1,0,1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="820" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="5205" bodyend="5208"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1gaa2642b54ed1c2e26e595ecf3d5b29edc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_periods_min</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</argsstring>
        <name>snd_pcm_hw_params_set_periods_min</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space with a minimum periods count. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate minimum periods per buffer (on return filled with actual minimum) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction (on return filled with actual direction) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code if configuration space would become empty</para></simplesect>
Wanted/actual exact minimum is &lt;,=,&gt; val following dir (-1,0,1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="821" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="5220" bodyend="5223"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga636d1d9a6333fb2acc8a6e84391ea0a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_periods_max</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</argsstring>
        <name>snd_pcm_hw_params_set_periods_max</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space with a maximum periods count. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate maximum periods per buffer (on return filled with actual maximum) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction (on return filled with actual direction) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code if configuration space would become empty</para></simplesect>
Wanted/actual exact maximum is &lt;,=,&gt; val following dir (-1,0,1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="822" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="5235" bodyend="5238"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1gaf638d94e53872415d3bb6d9169104891" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_periods_minmax</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *min, int *mindir, unsigned int *max, int *maxdir)</argsstring>
        <name>snd_pcm_hw_params_set_periods_minmax</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>min</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>mindir</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>max</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>maxdir</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space to have periods counts in a given range. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate minimum periods per buffer (on return filled with actual minimum) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mindir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction for minimum (on return filled with actual direction) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate maximum periods per buffer (on return filled with actual maximum) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxdir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction for maximum (on return filled with actual direction) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code if configuration space would become empty</para></simplesect>
Wanted/actual exact min/max is &lt;,=,&gt; val following dir (-1,0,1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="823" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="5252" bodyend="5255"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga2fadb73803f58b900ac34846c14894ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_periods_near</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</argsstring>
        <name>snd_pcm_hw_params_set_periods_near</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space to have periods count nearest to a target. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate target periods per buffer / returned chosen approximate target periods per buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code if configuration space is empty</para></simplesect>
target/chosen exact value is &lt;,=,&gt; val following dir (-1,0,1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="824" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="5270" bodyend="5274"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1gaa8fbd81ce54fac30f60768fb36210a6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_periods_first</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</argsstring>
        <name>snd_pcm_hw_params_set_periods_first</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space to contain only its minimum periods count. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned approximate minimum periods per buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code</para></simplesect>
Actual exact value is &lt;,=,&gt; the approximate one following dir (-1, 0, 1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="825" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="5289" bodyend="5293"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga1366dd00b920ef459d2dbf8a64408725" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_periods_last</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</argsstring>
        <name>snd_pcm_hw_params_set_periods_last</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space to contain only its maximum periods count. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned approximate maximum periods per buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code</para></simplesect>
Actual exact value is &lt;,=,&gt; the approximate one following dir (-1, 0, 1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="826" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="5308" bodyend="5312"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1gab7356d30758dfcf11ff5874fd033913b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_periods_integer</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)</argsstring>
        <name>snd_pcm_hw_params_set_periods_integer</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space to contain only integer periods counts. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code if configuration space would become empty </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="827" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="5320" bodyend="5323"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1gabdea994550dbf7ab176e3c90baa3a30b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_get_buffer_time</definition>
        <argsstring>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</argsstring>
        <name>snd_pcm_hw_params_get_buffer_time</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Extract buffer time from a configuration space. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned buffer time in us </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code if the configuration space does not contain a single value</para></simplesect>
Actual exact value is &lt;,=,&gt; the approximate one following dir (-1, 0, 1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="829" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="5338" bodyend="5342"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1gaa18c9999c27632f6c47e163b6af17fa9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_get_buffer_time_min</definition>
        <argsstring>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</argsstring>
        <name>snd_pcm_hw_params_get_buffer_time_min</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Extract minimum buffer time from a configuration space. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate minimum buffer duration in us </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code</para></simplesect>
Exact value is &lt;,=,&gt; the returned one following dir (-1,0,1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="830" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="5356" bodyend="5360"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga67a33176f4f05231863b37b09527c0e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_get_buffer_time_max</definition>
        <argsstring>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</argsstring>
        <name>snd_pcm_hw_params_get_buffer_time_max</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Extract maximum buffer time from a configuration space. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate maximum buffer duration in us </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code</para></simplesect>
Exact value is &lt;,=,&gt; the returned one following dir (-1,0,1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="831" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="5374" bodyend="5378"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga9b6bf73e2a0b7f887f3d7d85a988eb7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_test_buffer_time</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir)</argsstring>
        <name>snd_pcm_hw_params_test_buffer_time</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Verify if a buffer time is available inside a configuration space for a PCM. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate buffer duration in us </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if available a negative error code otherwise</para></simplesect>
Wanted exact value is &lt;,=,&gt; val following dir (-1,0,1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="832" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="5390" bodyend="5393"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1gacad42b93e31bca4c9b4074d6ec236d99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_buffer_time</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir)</argsstring>
        <name>snd_pcm_hw_params_set_buffer_time</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space to contain only one buffer time. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate buffer duration in us </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code if configuration space would become empty</para></simplesect>
Wanted exact value is &lt;,=,&gt; val following dir (-1,0,1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="833" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="5405" bodyend="5408"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga2a7cb8c29b2fb75b615366dd40a7dc13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_buffer_time_min</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</argsstring>
        <name>snd_pcm_hw_params_set_buffer_time_min</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space with a minimum buffer time. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate minimum buffer duration in us (on return filled with actual minimum) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction (on return filled with actual direction) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code if configuration space would become empty</para></simplesect>
Wanted/actual exact minimum is &lt;,=,&gt; val following dir (-1,0,1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="834" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="5420" bodyend="5423"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1gab80680ff70b72435addde58e88fc1d7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_buffer_time_max</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</argsstring>
        <name>snd_pcm_hw_params_set_buffer_time_max</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space with a maximum buffer time. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate maximum buffer duration in us (on return filled with actual maximum) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction (on return filled with actual direction) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code if configuration space would become empty</para></simplesect>
Wanted/actual exact maximum is &lt;,=,&gt; val following dir (-1,0,1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="835" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="5435" bodyend="5438"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga84964e55717a7db70b55f320b56f343f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_buffer_time_minmax</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *min, int *mindir, unsigned int *max, int *maxdir)</argsstring>
        <name>snd_pcm_hw_params_set_buffer_time_minmax</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>min</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>mindir</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>max</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>maxdir</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space to have buffer times in a given range. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate minimum buffer duration in us (on return filled with actual minimum) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mindir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction for minimum (on return filled with actual direction) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate maximum buffer duration in us (on return filled with actual maximum) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxdir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction for maximum (on return filled with actual direction) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code if configuration space would become empty</para></simplesect>
Wanted/actual exact min/max is &lt;,=,&gt; val following dir (-1,0,1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="836" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="5452" bodyend="5455"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga3bc1b188576d6d2daae9c56024813d10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_buffer_time_near</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</argsstring>
        <name>snd_pcm_hw_params_set_buffer_time_near</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space to have buffer time nearest to a target. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate target buffer duration in us / returned chosen approximate target buffer duration </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code if configuration space is empty</para></simplesect>
target/chosen exact value is &lt;,=,&gt; val following dir (-1,0,1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="837" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="5470" bodyend="5474"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga6a29e5f80671ca89d0c185416b5a6c2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_buffer_time_first</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</argsstring>
        <name>snd_pcm_hw_params_set_buffer_time_first</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space to contain only its minimum buffer time. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned approximate minimum buffer duration in us </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code</para></simplesect>
Actual exact value is &lt;,=,&gt; the approximate one following dir (-1, 0, 1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="838" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="5489" bodyend="5493"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1gaec8788f14a0c5452dada23a49cdd4b71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_buffer_time_last</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir)</argsstring>
        <name>snd_pcm_hw_params_set_buffer_time_last</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space to contain only its maximum buffered time. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned approximate maximum buffer duration in us </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code</para></simplesect>
Actual exact value is &lt;,=,&gt; the approximate one following dir (-1, 0, 1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="839" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="5508" bodyend="5512"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1gab6556fcaaf926360d2064044a6f6cfb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_get_buffer_size</definition>
        <argsstring>(const snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val)</argsstring>
        <name>snd_pcm_hw_params_get_buffer_size</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref> *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Extract buffer size from a configuration space. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned buffer size in frames </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code if the configuration space does not contain a single value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="841" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="5524" bodyend="5532"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga182adecca0ad204a34b27cdaa9d4f672" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_get_buffer_size_min</definition>
        <argsstring>(const snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val)</argsstring>
        <name>snd_pcm_hw_params_get_buffer_size_min</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref> *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Extract minimum buffer size from a configuration space. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned approximate minimum buffer size in frames </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="842" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="5543" bodyend="5551"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga3caf61ab086028067b602d48182df708" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_get_buffer_size_max</definition>
        <argsstring>(const snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val)</argsstring>
        <name>snd_pcm_hw_params_get_buffer_size_max</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref> *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Extract maximum buffer size from a configuration space. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned approximate maximum buffer size in frames </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code</para></simplesect>
Exact value is &lt;,=,&gt; the returned one following dir (-1,0,1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="843" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="5564" bodyend="5572"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga3ce81a7fe9f677849881f1cfd3b5cb7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_test_buffer_size</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t val)</argsstring>
        <name>snd_pcm_hw_params_test_buffer_size</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Verify if a buffer size is available inside a configuration space for a PCM. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer size in frames </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if available a negative error code otherwise</para></simplesect>
Wanted exact value is &lt;,=,&gt; val following dir (-1,0,1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="844" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="5583" bodyend="5586"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga828cf9e11fe84137c2c8d4938a6fca7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_buffer_size</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t val)</argsstring>
        <name>snd_pcm_hw_params_set_buffer_size</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space to contain only one buffer size. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer size in frames </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code if configuration space would become empty</para></simplesect>
Wanted exact value is &lt;,=,&gt; val following dir (-1,0,1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="845" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="5597" bodyend="5600"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1gacc0d26a23389470eae502a3c9f4a2980" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_buffer_size_min</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val)</argsstring>
        <name>snd_pcm_hw_params_set_buffer_size_min</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref> *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space with a minimum buffer size. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate minimum buffer size in frames (on return filled with actual minimum) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code if configuration space would become empty </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="846" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="5609" bodyend="5616"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1gac36099175c6a85db4a1e51053d5708af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_buffer_size_max</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val)</argsstring>
        <name>snd_pcm_hw_params_set_buffer_size_max</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref> *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space with a maximum buffer size. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate maximum buffer size in frames (on return filled with actual maximum) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code if configuration space would become empty </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="847" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="5625" bodyend="5632"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1gaec830be678524b0a6a173896bc9d2c67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_buffer_size_minmax</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *min, snd_pcm_uframes_t *max)</argsstring>
        <name>snd_pcm_hw_params_set_buffer_size_minmax</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref> *</type>
          <declname>min</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref> *</type>
          <declname>max</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space to have buffer sizes in a given range. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate minimum buffer size in frames (on return filled with actual minimum) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate maximum buffer size in frames (on return filled with actual maximum) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code if configuration space would become empty </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="848" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="5642" bodyend="5650"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga2c00cb635d374030595dbc27b7a983a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_buffer_size_near</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val)</argsstring>
        <name>snd_pcm_hw_params_set_buffer_size_near</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref> *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space to have buffer size nearest to a target. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate target buffer size in frames / returned chosen approximate target buffer size in frames </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code if configuration space is empty </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="849" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="5662" bodyend="5670"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1gaca09ba489988fe957fde43cb9dca56a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_buffer_size_first</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val)</argsstring>
        <name>snd_pcm_hw_params_set_buffer_size_first</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref> *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space to contain only its minimum buffer size. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned minimum buffer size in frames </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>buffer size in frames </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="850" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="5682" bodyend="5690"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1gade5604a3fe1de55c76942ee4f4e41219" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_buffer_size_last</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val)</argsstring>
        <name>snd_pcm_hw_params_set_buffer_size_last</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref> *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Restrict a configuration space to contain only its maximum buffer size. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned maximum buffer size in frames </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="851" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="5702" bodyend="5710"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___h_w___params_1ga254712953cb8abe8b1d8478233863217" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_get_min_align</definition>
        <argsstring>(const snd_pcm_hw_params_t *params, snd_pcm_uframes_t *val)</argsstring>
        <name>snd_pcm_hw_params_get_min_align</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref> *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Get the minimum transfer align value in samples. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned minimum align value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code if the configuration space does not contain a single value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="855" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="5910" bodyend="5931"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___p_c_m___h_w___params_1ga06b83cb9a788f99b7b09b570b4355cee" prot="public" static="no">
        <name>snd_pcm_hw_params_alloca</name>
        <param><defname>ptr</defname></param>
        <briefdescription>
<para>allocate an invalid <ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> using standard alloca </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>returned pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="730" column="9" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" bodystart="730" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>See the <ref refid="pcm" kindref="compound">PCM (digital audio) interface</ref> page for more details. </para>    </detaileddescription>
  </compounddef>
</doxygen>
