<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group___p_c_m___hook" kind="group">
    <compoundname>PCM_Hook</compoundname>
    <title>Hook Extension</title>
    <innerfile refid="pcm__hooks_8c">pcm_hooks.c</innerfile>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group___p_c_m___hook_1ga57b6ba407d293017e116fa1b462a2411" prot="public" static="no">
        <name>snd_pcm_hook_type_t</name>
        <enumvalue id="group___p_c_m___hook_1gga57b6ba407d293017e116fa1b462a2411a3423cebaf5c4c207e1764bf771d39173" prot="public">
          <name>SND_PCM_HOOK_TYPE_HW_PARAMS</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___p_c_m___hook_1gga57b6ba407d293017e116fa1b462a2411a1911e7b3a68fadf2f8486f4214e9034c" prot="public">
          <name>SND_PCM_HOOK_TYPE_HW_FREE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___p_c_m___hook_1gga57b6ba407d293017e116fa1b462a2411a0e368fb6edd6f221af14c6043064abb4" prot="public">
          <name>SND_PCM_HOOK_TYPE_CLOSE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___p_c_m___hook_1gga57b6ba407d293017e116fa1b462a2411af3887f3a9c71485c1b0444222cc1fc4b" prot="public">
          <name>SND_PCM_HOOK_TYPE_LAST</name>
          <initializer>= SND_PCM_HOOK_TYPE_CLOSE</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>type of pcm hook </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="1143" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" bodystart="1143" bodyend="1148"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group___p_c_m___hook_1gae6b33860eeaf4eca00bdbef9383c1911" prot="public" static="no">
        <type>struct _snd_pcm_hook</type>
        <definition>typedef struct _snd_pcm_hook snd_pcm_hook_t</definition>
        <argsstring></argsstring>
        <name>snd_pcm_hook_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>PCM hook container </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="1129" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" bodystart="1151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___p_c_m___hook_1ga1f6104443e129a88c5ac82bf398464a5" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* snd_pcm_hook_func_t) (snd_pcm_hook_t *hook)</definition>
        <argsstring>)(snd_pcm_hook_t *hook)</argsstring>
        <name>snd_pcm_hook_func_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>PCM hook callback function </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="1153" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" bodystart="1153" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___p_c_m___hook_1gacaec88e4b6cc2a45e7a805487acd64ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
        <definition>snd_pcm_t* snd_pcm_hook_get_pcm</definition>
        <argsstring>(snd_pcm_hook_t *hook)</argsstring>
        <name>snd_pcm_hook_get_pcm</name>
        <param>
          <type><ref refid="group___p_c_m___hook_1gae6b33860eeaf4eca00bdbef9383c1911" kindref="member">snd_pcm_hook_t</ref> *</type>
          <declname>hook</declname>
        </param>
        <briefdescription>
<para>Get PCM handle for a PCM hook. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hook</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM hook handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>PCM handle </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="1154" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_hooks.c" bodystart="560" bodyend="564"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___hook_1ga1eb467cd5ab11817edc2ed7df3608019" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* snd_pcm_hook_get_private</definition>
        <argsstring>(snd_pcm_hook_t *hook)</argsstring>
        <name>snd_pcm_hook_get_private</name>
        <param>
          <type><ref refid="group___p_c_m___hook_1gae6b33860eeaf4eca00bdbef9383c1911" kindref="member">snd_pcm_hook_t</ref> *</type>
          <declname>hook</declname>
        </param>
        <briefdescription>
<para>Get callback function private data for a PCM hook. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hook</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM hook handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>callback function private data </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="1155" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_hooks.c" bodystart="571" bodyend="575"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___hook_1ga6930df3b750b3f62dee6846fb3f6a576" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_pcm_hook_set_private</definition>
        <argsstring>(snd_pcm_hook_t *hook, void *private_data)</argsstring>
        <name>snd_pcm_hook_set_private</name>
        <param>
          <type><ref refid="group___p_c_m___hook_1gae6b33860eeaf4eca00bdbef9383c1911" kindref="member">snd_pcm_hook_t</ref> *</type>
          <declname>hook</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>private_data</declname>
        </param>
        <briefdescription>
<para>Set callback function private data for a PCM hook. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hook</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM hook handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>private_data</parametername>
</parameternamelist>
<parameterdescription>
<para>The private data value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="1156" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_hooks.c" bodystart="582" bodyend="586"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___hook_1ga89eed2fdcda68c1efae9180a3794d5ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hook_add</definition>
        <argsstring>(snd_pcm_hook_t **hookp, snd_pcm_t *pcm, snd_pcm_hook_type_t type, snd_pcm_hook_func_t func, void *private_data)</argsstring>
        <name>snd_pcm_hook_add</name>
        <param>
          <type><ref refid="group___p_c_m___hook_1gae6b33860eeaf4eca00bdbef9383c1911" kindref="member">snd_pcm_hook_t</ref> **</type>
          <declname>hookp</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m___hook_1ga57b6ba407d293017e116fa1b462a2411" kindref="member">snd_pcm_hook_type_t</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m___hook_1ga1f6104443e129a88c5ac82bf398464a5" kindref="member">snd_pcm_hook_func_t</ref></type>
          <declname>func</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>private_data</declname>
        </param>
        <briefdescription>
<para>Add a PCM hook at end of hooks chain. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hookp</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned PCM hook handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM hook type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>func</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM hook callback function </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>private_data</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM hook private data </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code</para></simplesect>
Warning: an hook callback function cannot remove an hook of the same type different from itself </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="1157" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_hooks.c" bodystart="600" bodyend="618"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___hook_1ga4c59ad440d2479f957b477b26b90e4b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hook_remove</definition>
        <argsstring>(snd_pcm_hook_t *hook)</argsstring>
        <name>snd_pcm_hook_remove</name>
        <param>
          <type><ref refid="group___p_c_m___hook_1gae6b33860eeaf4eca00bdbef9383c1911" kindref="member">snd_pcm_hook_t</ref> *</type>
          <declname>hook</declname>
        </param>
        <briefdescription>
<para>Remove a PCM hook. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hook</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM hook handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code</para></simplesect>
Warning: an hook callback cannot remove an hook of the same type different from itself </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="1160" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_hooks.c" bodystart="628" bodyend="634"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>See the <ref refid="pcm" kindref="compound">PCM (digital audio) interface</ref> page for more details. </para>    </detaileddescription>
  </compounddef>
</doxygen>
