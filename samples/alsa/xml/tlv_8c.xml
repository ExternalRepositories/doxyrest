<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="tlv_8c" kind="file" language="C++">
    <compoundname>tlv.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">math.h</includes>
    <includes local="yes">control_local.h</includes>
    <incdepgraph>
      <node id="218">
        <label>stdlib.h</label>
      </node>
      <node id="216">
        <label>/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/tlv.c</label>
        <link refid="tlv_8c"/>
        <childnode refid="217" relation="include">
        </childnode>
        <childnode refid="218" relation="include">
        </childnode>
        <childnode refid="219" relation="include">
        </childnode>
        <childnode refid="220" relation="include">
        </childnode>
        <childnode refid="221" relation="include">
        </childnode>
        <childnode refid="222" relation="include">
        </childnode>
      </node>
      <node id="220">
        <label>string.h</label>
      </node>
      <node id="219">
        <label>unistd.h</label>
      </node>
      <node id="222">
        <label>control_local.h</label>
      </node>
      <node id="221">
        <label>math.h</label>
      </node>
      <node id="217">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___control_1ga4fa0bc99458acc08a2c59e6ed84bc94e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_tlv_parse_dB_info</definition>
        <argsstring>(unsigned int *tlv, unsigned int tlv_size, unsigned int **db_tlvp)</argsstring>
        <name>snd_tlv_parse_dB_info</name>
        <param>
          <type>unsigned int *</type>
          <declname>tlv</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>tlv_size</declname>
        </param>
        <param>
          <type>unsigned int **</type>
          <declname>db_tlvp</declname>
        </param>
        <briefdescription>
<para>Parse TLV stream and retrieve dB information. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tlv</parametername>
</parameternamelist>
<parameterdescription>
<para>the TLV source </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tlv_size</parametername>
</parameternamelist>
<parameterdescription>
<para>the byte size of TLV source </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>db_tlvp</parametername>
</parameternamelist>
<parameterdescription>
<para>the pointer stored the dB TLV information </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the byte size of dB TLV information if found in the given TLV source, or a negative error code.</para></simplesect>
This function parses the given TLV source and stores the TLV start point if the TLV information regarding dB conversion is found. The stored TLV pointer can be passed to the convesion functions <ref refid="group___control_1ga625c16724bddbb21b18ae3b2cbaefcda" kindref="member">snd_tlv_convert_to_dB()</ref>, <ref refid="group___control_1ga0ef60f47c8c82dd84816ae66346359a6" kindref="member">snd_tlv_convert_from_dB()</ref> and <ref refid="group___control_1gad1feefed923fc08f309c4fec2b0973e2" kindref="member">snd_tlv_get_dB_range()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/tlv.c" line="59" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/tlv.c" bodystart="59" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="group___control_1gad1feefed923fc08f309c4fec2b0973e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_tlv_get_dB_range</definition>
        <argsstring>(unsigned int *tlv, long rangemin, long rangemax, long *min, long *max)</argsstring>
        <name>snd_tlv_get_dB_range</name>
        <param>
          <type>unsigned int *</type>
          <declname>tlv</declname>
        </param>
        <param>
          <type>long</type>
          <declname>rangemin</declname>
        </param>
        <param>
          <type>long</type>
          <declname>rangemax</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>min</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>max</declname>
        </param>
        <briefdescription>
<para>Get the dB min/max values. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tlv</parametername>
</parameternamelist>
<parameterdescription>
<para>the TLV source returned by <ref refid="group___control_1ga4fa0bc99458acc08a2c59e6ed84bc94e" kindref="member">snd_tlv_parse_dB_info()</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rangemin</parametername>
</parameternamelist>
<parameterdescription>
<para>the minimum value of the raw volume </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rangemax</parametername>
</parameternamelist>
<parameterdescription>
<para>the maximum value of the raw volume </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min</parametername>
</parameternamelist>
<parameterdescription>
<para>the pointer to store the minimum dB value (in 0.01dB unit) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>the pointer to store the maximum dB value (in 0.01dB unit) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, or a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/tlv.c" line="129" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/tlv.c" bodystart="129" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="group___control_1ga625c16724bddbb21b18ae3b2cbaefcda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_tlv_convert_to_dB</definition>
        <argsstring>(unsigned int *tlv, long rangemin, long rangemax, long volume, long *db_gain)</argsstring>
        <name>snd_tlv_convert_to_dB</name>
        <param>
          <type>unsigned int *</type>
          <declname>tlv</declname>
        </param>
        <param>
          <type>long</type>
          <declname>rangemin</declname>
        </param>
        <param>
          <type>long</type>
          <declname>rangemax</declname>
        </param>
        <param>
          <type>long</type>
          <declname>volume</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>db_gain</declname>
        </param>
        <briefdescription>
<para>Convert the given raw volume value to a dB gain. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tlv</parametername>
</parameternamelist>
<parameterdescription>
<para>the TLV source returned by <ref refid="group___control_1ga4fa0bc99458acc08a2c59e6ed84bc94e" kindref="member">snd_tlv_parse_dB_info()</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rangemin</parametername>
</parameternamelist>
<parameterdescription>
<para>the minimum value of the raw volume </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rangemax</parametername>
</parameternamelist>
<parameterdescription>
<para>the maximum value of the raw volume </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>volume</parametername>
</parameternamelist>
<parameterdescription>
<para>the raw volume value to convert </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>db_gain</parametername>
</parameternamelist>
<parameterdescription>
<para>the dB gain (in 0.01dB unit) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, or a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/tlv.c" line="200" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/tlv.c" bodystart="200" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="group___control_1ga0ef60f47c8c82dd84816ae66346359a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_tlv_convert_from_dB</definition>
        <argsstring>(unsigned int *tlv, long rangemin, long rangemax, long db_gain, long *value, int xdir)</argsstring>
        <name>snd_tlv_convert_from_dB</name>
        <param>
          <type>unsigned int *</type>
          <declname>tlv</declname>
        </param>
        <param>
          <type>long</type>
          <declname>rangemin</declname>
        </param>
        <param>
          <type>long</type>
          <declname>rangemax</declname>
        </param>
        <param>
          <type>long</type>
          <declname>db_gain</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>xdir</declname>
        </param>
        <briefdescription>
<para>Convert from dB gain to the corresponding raw value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tlv</parametername>
</parameternamelist>
<parameterdescription>
<para>the TLV source returned by <ref refid="group___control_1ga4fa0bc99458acc08a2c59e6ed84bc94e" kindref="member">snd_tlv_parse_dB_info()</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rangemin</parametername>
</parameternamelist>
<parameterdescription>
<para>the minimum value of the raw volume </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rangemax</parametername>
</parameternamelist>
<parameterdescription>
<para>the maximum value of the raw volume </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>db_gain</parametername>
</parameternamelist>
<parameterdescription>
<para>the dB gain to convert (in 0.01dB unit) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the pointer to store the converted raw volume value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xdir</parametername>
</parameternamelist>
<parameterdescription>
<para>the direction for round-up. The value is round up when this is positive. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, or a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/tlv.c" line="289" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/tlv.c" bodystart="289" bodyend="398"/>
      </memberdef>
      <memberdef kind="function" id="tlv_8c_1acde11a017360483a85debd28352e6a6d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int get_tlv_info</definition>
        <argsstring>(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id, struct tlv_info *rec)</argsstring>
        <name>get_tlv_info</name>
        <param>
          <type><ref refid="group___control_1ga06628f38def84a0fe3da74041db9d51f" kindref="member">snd_ctl_t</ref> *</type>
          <declname>ctl</declname>
        </param>
        <param>
          <type>const <ref refid="group___control_1gad6c3746f1925bfec6a4fd0e913430e55" kindref="member">snd_ctl_elem_id_t</ref> *</type>
          <declname>id</declname>
        </param>
        <param>
          <type>struct tlv_info *</type>
          <declname>rec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/tlv.c" line="409" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/tlv.c" bodystart="409" bodyend="432"/>
      </memberdef>
      <memberdef kind="function" id="group___control_1ga6ebf9a5917cdc2fee40245cdbc83a0c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_ctl_get_dB_range</definition>
        <argsstring>(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id, long *min, long *max)</argsstring>
        <name>snd_ctl_get_dB_range</name>
        <param>
          <type><ref refid="group___control_1ga06628f38def84a0fe3da74041db9d51f" kindref="member">snd_ctl_t</ref> *</type>
          <declname>ctl</declname>
        </param>
        <param>
          <type>const <ref refid="group___control_1gad6c3746f1925bfec6a4fd0e913430e55" kindref="member">snd_ctl_elem_id_t</ref> *</type>
          <declname>id</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>min</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>max</declname>
        </param>
        <briefdescription>
<para>Get the dB min/max values on the given control element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctl</parametername>
</parameternamelist>
<parameterdescription>
<para>the control handler </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>the element id </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min</parametername>
</parameternamelist>
<parameterdescription>
<para>the pointer to store the minimum dB value (in 0.01dB unit) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>the pointer to store the maximum dB value (in 0.01dB unit) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, or a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/tlv.c" line="442" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/tlv.c" bodystart="442" bodyend="453"/>
      </memberdef>
      <memberdef kind="function" id="group___control_1gab44202cf8247874df15212d684a2b6ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_ctl_convert_to_dB</definition>
        <argsstring>(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id, long volume, long *db_gain)</argsstring>
        <name>snd_ctl_convert_to_dB</name>
        <param>
          <type><ref refid="group___control_1ga06628f38def84a0fe3da74041db9d51f" kindref="member">snd_ctl_t</ref> *</type>
          <declname>ctl</declname>
        </param>
        <param>
          <type>const <ref refid="group___control_1gad6c3746f1925bfec6a4fd0e913430e55" kindref="member">snd_ctl_elem_id_t</ref> *</type>
          <declname>id</declname>
        </param>
        <param>
          <type>long</type>
          <declname>volume</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>db_gain</declname>
        </param>
        <briefdescription>
<para>Convert the volume value to dB on the given control element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctl</parametername>
</parameternamelist>
<parameterdescription>
<para>the control handler </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>the element id </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>volume</parametername>
</parameternamelist>
<parameterdescription>
<para>the raw volume value to convert </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>db_gain</parametername>
</parameternamelist>
<parameterdescription>
<para>the dB gain (in 0.01dB unit) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, or a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/tlv.c" line="463" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/tlv.c" bodystart="463" bodyend="474"/>
      </memberdef>
      <memberdef kind="function" id="group___control_1ga344c48d48be3f61d08ce911c462a3bf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_ctl_convert_from_dB</definition>
        <argsstring>(snd_ctl_t *ctl, const snd_ctl_elem_id_t *id, long db_gain, long *value, int xdir)</argsstring>
        <name>snd_ctl_convert_from_dB</name>
        <param>
          <type><ref refid="group___control_1ga06628f38def84a0fe3da74041db9d51f" kindref="member">snd_ctl_t</ref> *</type>
          <declname>ctl</declname>
        </param>
        <param>
          <type>const <ref refid="group___control_1gad6c3746f1925bfec6a4fd0e913430e55" kindref="member">snd_ctl_elem_id_t</ref> *</type>
          <declname>id</declname>
        </param>
        <param>
          <type>long</type>
          <declname>db_gain</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>xdir</declname>
        </param>
        <briefdescription>
<para>Convert from dB gain to the raw volume value on the given control element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctl</parametername>
</parameternamelist>
<parameterdescription>
<para>the control handler </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>the element id </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>db_gain</parametername>
</parameternamelist>
<parameterdescription>
<para>the dB gain to convert (in 0.01dB unit) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the pointer to store the converted raw volume value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xdir</parametername>
</parameternamelist>
<parameterdescription>
<para>the direction for round-up. The value is round up when this is positive. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, or a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/tlv.c" line="486" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/tlv.c" bodystart="486" bodyend="497"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>dB conversion functions from control TLV information </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Takashi Iwai <ulink url="mailto:tiwai@suse.de">tiwai@suse.de</ulink> </para></simplesect>
<simplesect kind="date"><para>2007 </para></simplesect>
</para>    </detaileddescription>
    <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/tlv.c"/>
  </compounddef>
</doxygen>
