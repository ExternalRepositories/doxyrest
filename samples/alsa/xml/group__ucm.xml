<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__ucm" kind="group">
    <compoundname>ucm</compoundname>
    <title>Use Case Interface</title>
    <innerpage refid="group__ucm_Usecase">ALSA Use Case Interface</innerpage>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__ucm_1gace35ebd33e632cba9441762f6633a20e" prot="public" static="no">
        <type>struct snd_use_case_mgr</type>
        <definition>typedef struct snd_use_case_mgr snd_use_case_mgr_t</definition>
        <argsstring></argsstring>
        <name>snd_use_case_mgr_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>use case container </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" line="215" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__ucm_1ga530159363360c3cae3c9816c034fbcc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* snd_use_case_identifier</definition>
        <argsstring>(const char *fmt,...)</argsstring>
        <name>snd_use_case_identifier</name>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>Create an identifier. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fmt</parametername>
</parameternamelist>
<parameterdescription>
<para>Format (sprintf like) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional arguments for sprintf like format </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Allocated string identifier or NULL on error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" line="177" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="105" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="group__ucm_1ga003553ee6fd13119fc9e08ffcdd959f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_use_case_free_list</definition>
        <argsstring>(const char *list[], int items)</argsstring>
        <name>snd_use_case_free_list</name>
        <param>
          <type>const char *</type>
          <declname>list</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>items</declname>
        </param>
        <briefdescription>
<para>Free a string list. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>The string list to free </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>items</parametername>
</parameternamelist>
<parameterdescription>
<para>Count of strings </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero if success, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" line="185" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="130" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="group__ucm_1gaa128bcb412f42247e561b81ec342c2e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_use_case_get_list</definition>
        <argsstring>(snd_use_case_mgr_t *uc_mgr, const char *identifier, const char **list[])</argsstring>
        <name>snd_use_case_get_list</name>
        <param>
          <type><ref refid="group__ucm_1gace35ebd33e632cba9441762f6633a20e" kindref="member">snd_use_case_mgr_t</ref> *</type>
          <declname>uc_mgr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>identifier</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>list</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Obtain a list of entries. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uc_mgr</parametername>
</parameternamelist>
<parameterdescription>
<para>Use case manager (may be NULL - card list) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>identifier</parametername>
</parameternamelist>
<parameterdescription>
<para>(may be NULL - card list) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned allocated list </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of list entries if success, otherwise a negative error code</para></simplesect>
Defined identifiers:<itemizedlist>
<listitem><para>NULL - get card list (in pair cardname+comment)</para></listitem><listitem><para>_verbs - get verb list (in pair verb+comment)</para></listitem><listitem><para>_devices[/{verb}] - get list of supported devices (in pair device+comment)</para></listitem><listitem><para>_modifiers[/{verb}] - get list of supported modifiers (in pair modifier+comment)</para></listitem><listitem><para>TQ[/{verb}] - get list of TQ identifiers</para></listitem><listitem><para>_enadevs - get list of enabled devices</para></listitem><listitem><para>_enamods - get list of enabled modifiers</para></listitem><listitem><para>_supporteddevs/{modifier}|{device}[/{verb}] - list of supported devices</para></listitem><listitem><para>_conflictingdevs/{modifier}|{device}[/{verb}] - list of conflicting devices</para></listitem></itemizedlist>
</para><para>Note that at most one of the supported/conflicting devs lists has any entries, and when neither is present, all devices are supported.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uc_mgr</parametername>
</parameternamelist>
<parameterdescription>
<para>Use case manager (may be NULL - card list) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>identifier</parametername>
</parameternamelist>
<parameterdescription>
<para>(may be NULL - card list) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned allocated list </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of list entries if success, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" line="214" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="1337" bodyend="1382"/>
      </memberdef>
      <memberdef kind="function" id="group__ucm_1ga9c13ae514eeebf918adcec0e4534aca5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_use_case_get</definition>
        <argsstring>(snd_use_case_mgr_t *uc_mgr, const char *identifier, const char **value)</argsstring>
        <name>snd_use_case_get</name>
        <param>
          <type><ref refid="group__ucm_1gace35ebd33e632cba9441762f6633a20e" kindref="member">snd_use_case_mgr_t</ref> *</type>
          <declname>uc_mgr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>identifier</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Get current - string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uc_mgr</parametername>
</parameternamelist>
<parameterdescription>
<para>Use case manager </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>identifier</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Value pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero if success, otherwise a negative error code</para></simplesect>
Note: The returned string is dynamically allocated, use free() to deallocate this string. (Yes, the value parameter shouldn&apos;t be marked as &quot;const&quot;, but it&apos;s too late to fix it, sorry about that.)</para><para>Known identifiers:<itemizedlist>
<listitem><para>NULL - return current card</para></listitem><listitem><para>_verb - return current verb</para></listitem><listitem><para>[=]{NAME}[/[{modifier}|{/device}][/{verb}]]<itemizedlist>
<listitem><para>value identifier {NAME}</para></listitem><listitem><para>Search starts at given modifier or device if any, else at a verb</para></listitem><listitem><para>Search starts at given verb if any, else current verb</para></listitem><listitem><para>Searches modifier/device, then verb, then defaults</para></listitem><listitem><para>Specify a leading &quot;=&quot; to search only the exact device/modifier/verb specified, and not search through each object in turn.</para></listitem><listitem><para>Examples:<itemizedlist>
<listitem><para>&quot;PlaybackPCM/Play Music&quot;</para></listitem><listitem><para>&quot;CapturePCM/SPDIF&quot;</para></listitem><listitem><para>From ValueDefaults only: &quot;=Variable&quot;</para></listitem><listitem><para>From current active verb: &quot;=Variable//&quot;</para></listitem><listitem><para>From verb &quot;Verb&quot;: &quot;=Variable//Verb&quot;</para></listitem><listitem><para>From &quot;Modifier&quot; in current active verb: &quot;=Variable/Modifier/&quot;</para></listitem><listitem><para>From &quot;Modifier&quot; in &quot;Verb&quot;: &quot;=Variable/Modifier/Verb&quot;</para></listitem></itemizedlist>
</para></listitem></itemizedlist>
</para></listitem></itemizedlist>
</para><para>Recommended names for values:<itemizedlist>
<listitem><para>TQ<itemizedlist>
<listitem><para>Tone Quality</para></listitem></itemizedlist>
</para></listitem><listitem><para>PlaybackPCM<itemizedlist>
<listitem><para>full PCM playback device name</para></listitem></itemizedlist>
</para></listitem><listitem><para>PlaybackPCMIsDummy<itemizedlist>
<listitem><para>Valid values: &quot;yes&quot; and &quot;no&quot;. If set to &quot;yes&quot;, the PCM named by the PlaybackPCM value is a dummy device, meaning that opening it enables an audio path in the hardware, but writing to the PCM device has no effect.</para></listitem></itemizedlist>
</para></listitem><listitem><para>CapturePCM<itemizedlist>
<listitem><para>full PCM capture device name</para></listitem></itemizedlist>
</para></listitem><listitem><para>CapturePCMIsDummy<itemizedlist>
<listitem><para>Valid values: &quot;yes&quot; and &quot;no&quot;. If set to &quot;yes&quot;, the PCM named by the CapturePCM value is a dummy device, meaning that opening it enables an audio path in the hardware, but reading from the PCM device has no effect.</para></listitem></itemizedlist>
</para></listitem><listitem><para>PlaybackRate<itemizedlist>
<listitem><para>playback device sample rate</para></listitem></itemizedlist>
</para></listitem><listitem><para>PlaybackChannels<itemizedlist>
<listitem><para>playback device channel count</para></listitem></itemizedlist>
</para></listitem><listitem><para>PlaybackCTL<itemizedlist>
<listitem><para>playback control device name</para></listitem></itemizedlist>
</para></listitem><listitem><para>PlaybackVolume<itemizedlist>
<listitem><para>playback control volume ID string</para></listitem></itemizedlist>
</para></listitem><listitem><para>PlaybackSwitch<itemizedlist>
<listitem><para>playback control switch ID string</para></listitem></itemizedlist>
</para></listitem><listitem><para>CaptureRate<itemizedlist>
<listitem><para>capture device sample rate</para></listitem></itemizedlist>
</para></listitem><listitem><para>CaptureChannels<itemizedlist>
<listitem><para>capture device channel count</para></listitem></itemizedlist>
</para></listitem><listitem><para>CaptureCTL<itemizedlist>
<listitem><para>capture control device name</para></listitem></itemizedlist>
</para></listitem><listitem><para>CaptureVolume<itemizedlist>
<listitem><para>capture control volume ID string</para></listitem></itemizedlist>
</para></listitem><listitem><para>CaptureSwitch<itemizedlist>
<listitem><para>capture control switch ID string</para></listitem></itemizedlist>
</para></listitem><listitem><para>PlaybackMixer<itemizedlist>
<listitem><para>name of playback mixer</para></listitem></itemizedlist>
</para></listitem><listitem><para>PlaybackMixerID<itemizedlist>
<listitem><para>mixer playback ID</para></listitem></itemizedlist>
</para></listitem><listitem><para>CaptureMixer<itemizedlist>
<listitem><para>name of capture mixer</para></listitem></itemizedlist>
</para></listitem><listitem><para>CaptureMixerID<itemizedlist>
<listitem><para>mixer capture ID</para></listitem></itemizedlist>
</para></listitem><listitem><para>JackControl, JackDev, JackHWMute<itemizedlist>
<listitem><para>Jack information for a device. The jack status can be reported via a kcontrol and/or via an input device. <bold>JackControl</bold> is the kcontrol name of the jack, and <bold>JackDev</bold> is the input device id of the jack (if the full input device path is /dev/input/by-id/foo, the JackDev value should be &quot;foo&quot;). UCM configuration files should contain both JackControl and JackDev when possible, because applications are likely to support only one or the other.</para><para>If <bold>JackHWMute</bold> is set, it indicates that when the jack is plugged in, the hardware automatically mutes some other device(s). The JackHWMute value is a space-separated list of device names (this isn&apos;t compatible with device names with spaces in them, so don&apos;t use such device names!). Note that JackHWMute should be used only when the hardware enforces the automatic muting. If the hardware doesn&apos;t enforce any muting, it may still be tempting to set JackHWMute to trick upper software layers to e.g. automatically mute speakers when headphones are plugged in, but that&apos;s application policy configuration that doesn&apos;t belong to UCM configuration files.</para></listitem></itemizedlist>
</para></listitem></itemizedlist>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uc_mgr</parametername>
</parameternamelist>
<parameterdescription>
<para>Use case manager </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>identifier</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Value pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero if success, otherwise a negative error code</para></simplesect>
Note: String is dynamically allocated, use free() to deallocate this string. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" line="323" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="1503" bodyend="1576"/>
      </memberdef>
      <memberdef kind="function" id="group__ucm_1ga66311429dfd62743089be3eb79f1d1f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_use_case_geti</definition>
        <argsstring>(snd_use_case_mgr_t *uc_mgr, const char *identifier, long *value)</argsstring>
        <name>snd_use_case_geti</name>
        <param>
          <type><ref refid="group__ucm_1gace35ebd33e632cba9441762f6633a20e" kindref="member">snd_use_case_mgr_t</ref> *</type>
          <declname>uc_mgr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>identifier</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Get current - integer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uc_mgr</parametername>
</parameternamelist>
<parameterdescription>
<para>Use case manager </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>identifier</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>result </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero if success, otherwise a negative error code</para></simplesect>
Known identifiers:<itemizedlist>
<listitem><para>_devstatus/{device} - return status for given device</para></listitem><listitem><para>_modstatus/{modifier} - return status for given modifier</para></listitem></itemizedlist>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uc_mgr</parametername>
</parameternamelist>
<parameterdescription>
<para>Use case manager </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>identifier</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Value if success, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" line="338" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="1585" bodyend="1642"/>
      </memberdef>
      <memberdef kind="function" id="group__ucm_1gae9ff2a06c955d40ad0204f21f8352831" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_use_case_set</definition>
        <argsstring>(snd_use_case_mgr_t *uc_mgr, const char *identifier, const char *value)</argsstring>
        <name>snd_use_case_set</name>
        <param>
          <type><ref refid="group__ucm_1gace35ebd33e632cba9441762f6633a20e" kindref="member">snd_use_case_mgr_t</ref> *</type>
          <declname>uc_mgr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>identifier</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set new. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uc_mgr</parametername>
</parameternamelist>
<parameterdescription>
<para>Use case manager </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>identifier</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero if success, otherwise a negative error code</para></simplesect>
Known identifiers:<itemizedlist>
<listitem><para>_verb - set current verb = value</para></listitem><listitem><para>_enadev - enable given device = value</para></listitem><listitem><para>_disdev - disable given device = value</para></listitem><listitem><para>_swdev/{old_device} - new_device = value<itemizedlist>
<listitem><para>disable old_device and then enable new_device</para></listitem><listitem><para>if old_device is not enabled just return</para></listitem><listitem><para>check transmit sequence firstly</para></listitem></itemizedlist>
</para></listitem><listitem><para>_enamod - enable given modifier = value</para></listitem><listitem><para>_dismod - disable given modifier = value</para></listitem><listitem><para>_swmod/{old_modifier} - new_modifier = value<itemizedlist>
<listitem><para>disable old_modifier and then enable new_modifier</para></listitem><listitem><para>if old_modifier is not enabled just return</para></listitem><listitem><para>check transmit sequence firstly</para></listitem></itemizedlist>
</para></listitem></itemizedlist>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uc_mgr</parametername>
</parameternamelist>
<parameterdescription>
<para>Use case manager </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>identifier</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero if success, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" line="364" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="1847" bodyend="1889"/>
      </memberdef>
      <memberdef kind="function" id="group__ucm_1ga74f0ef0116590fe8eec1edeaf1d88847" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_use_case_mgr_open</definition>
        <argsstring>(snd_use_case_mgr_t **uc_mgr, const char *card_name)</argsstring>
        <name>snd_use_case_mgr_open</name>
        <param>
          <type><ref refid="group__ucm_1gace35ebd33e632cba9441762f6633a20e" kindref="member">snd_use_case_mgr_t</ref> **</type>
          <declname>uc_mgr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>card_name</declname>
        </param>
        <briefdescription>
<para>Open and initialise use case core for sound card. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uc_mgr</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned use case manager pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>card_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Sound card name. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>zero if success, otherwise a negative error code</para></simplesect>
Open and initialise use case core for sound card.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uc_mgr</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned use case manager pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>card_name</parametername>
</parameternamelist>
<parameterdescription>
<para>name of card to open </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>zero on success, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" line="374" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="920" bodyend="957"/>
      </memberdef>
      <memberdef kind="function" id="group__ucm_1gafedd1fc74ce9086033f6f668348321b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_use_case_mgr_reload</definition>
        <argsstring>(snd_use_case_mgr_t *uc_mgr)</argsstring>
        <name>snd_use_case_mgr_reload</name>
        <param>
          <type><ref refid="group__ucm_1gace35ebd33e632cba9441762f6633a20e" kindref="member">snd_use_case_mgr_t</ref> *</type>
          <declname>uc_mgr</declname>
        </param>
        <briefdescription>
<para>Reload and re-parse use case configuration files for sound card. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uc_mgr</parametername>
</parameternamelist>
<parameterdescription>
<para>Use case manager </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>zero if success, otherwise a negative error code</para></simplesect>
Reload and re-parse use case configuration files for sound card.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uc_mgr</parametername>
</parameternamelist>
<parameterdescription>
<para>Use case manager </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>zero on success, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" line="382" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="964" bodyend="982"/>
      </memberdef>
      <memberdef kind="function" id="group__ucm_1gaac2bf25d233230d2d6a9e422795d716c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_use_case_mgr_close</definition>
        <argsstring>(snd_use_case_mgr_t *uc_mgr)</argsstring>
        <name>snd_use_case_mgr_close</name>
        <param>
          <type><ref refid="group__ucm_1gace35ebd33e632cba9441762f6633a20e" kindref="member">snd_use_case_mgr_t</ref> *</type>
          <declname>uc_mgr</declname>
        </param>
        <briefdescription>
<para>Close use case manager. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uc_mgr</parametername>
</parameternamelist>
<parameterdescription>
<para>Use case manager </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>zero if success, otherwise a negative error code</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uc_mgr</parametername>
</parameternamelist>
<parameterdescription>
<para>Use case manager </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>zero on success, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" line="389" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="989" bodyend="994"/>
      </memberdef>
      <memberdef kind="function" id="group__ucm_1ga1364dba503c216b2e46085a3f4abd20a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_use_case_mgr_reset</definition>
        <argsstring>(snd_use_case_mgr_t *uc_mgr)</argsstring>
        <name>snd_use_case_mgr_reset</name>
        <param>
          <type><ref refid="group__ucm_1gace35ebd33e632cba9441762f6633a20e" kindref="member">snd_use_case_mgr_t</ref> *</type>
          <declname>uc_mgr</declname>
        </param>
        <briefdescription>
<para>Reset use case manager verb, device, modifier to deafult settings. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uc_mgr</parametername>
</parameternamelist>
<parameterdescription>
<para>Use case manager </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>zero if success, otherwise a negative error code</para></simplesect>
Reset use case manager verb, device, modifier to deafult settings.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uc_mgr</parametername>
</parameternamelist>
<parameterdescription>
<para>Use case manager </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>zero on success, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" line="396" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="1042" bodyend="1054"/>
      </memberdef>
      <memberdef kind="function" id="group__ucm_1ga68b86cfb1ad188a691feaafe0cae65b8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__inline__ int</type>
        <definition>static __inline__ int snd_use_case_card_list</definition>
        <argsstring>(const char **list[])</argsstring>
        <name>snd_use_case_card_list</name>
        <param>
          <type>const char **</type>
          <declname>list</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Obtain a list of cards. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned allocated list </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of list entries if success, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" line="407" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" bodystart="407" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="group__ucm_1gab3ba95168d68096f7dfdd0919dc4b3bc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__inline__ int</type>
        <definition>static __inline__ int snd_use_case_verb_list</definition>
        <argsstring>(snd_use_case_mgr_t *uc_mgr, const char **list[])</argsstring>
        <name>snd_use_case_verb_list</name>
        <param>
          <type><ref refid="group__ucm_1gace35ebd33e632cba9441762f6633a20e" kindref="member">snd_use_case_mgr_t</ref> *</type>
          <declname>uc_mgr</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>list</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Obtain a list of verbs. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uc_mgr</parametername>
</parameternamelist>
<parameterdescription>
<para>Use case manager </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned list of verbs </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of list entries if success, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" line="418" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" bodystart="418" bodyend="422"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__ucm_1gaedcdfd09f499b753d8652772ef1a248f" prot="public" static="no">
        <name>SND_USE_CASE_VERB_INACTIVE</name>
        <initializer>&quot;Inactive&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Inactive Verb </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" line="98" column="9" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ucm_1ga71b24a1fcc4ce2cee555520ca546b348" prot="public" static="no">
        <name>SND_USE_CASE_VERB_HIFI</name>
        <initializer>&quot;HiFi&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>HiFi Verb </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" line="99" column="9" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ucm_1ga9a0739ade4ac574b31b4728c22280861" prot="public" static="no">
        <name>SND_USE_CASE_VERB_HIFI_LOW_POWER</name>
        <initializer>&quot;HiFi Low Power&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>HiFi Low Power Verb </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" line="100" column="9" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ucm_1gae496d33ac019caffae8dca584b04d09f" prot="public" static="no">
        <name>SND_USE_CASE_VERB_VOICE</name>
        <initializer>&quot;Voice&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Voice Verb </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" line="101" column="9" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ucm_1ga64b61825903d5ce88d3f4cfb12c7bd00" prot="public" static="no">
        <name>SND_USE_CASE_VERB_VOICE_LOW_POWER</name>
        <initializer>&quot;Voice Low Power&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Voice Low Power Verb </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" line="102" column="9" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ucm_1gaaa4aed51667887d194caae91362e8428" prot="public" static="no">
        <name>SND_USE_CASE_VERB_VOICECALL</name>
        <initializer>&quot;Voice Call&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Voice Call Verb </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" line="103" column="9" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ucm_1ga938754af309628dfc8bafe28018b8aab" prot="public" static="no">
        <name>SND_USE_CASE_VERB_IP_VOICECALL</name>
        <initializer>&quot;Voice Call IP&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Voice Call IP Verb </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" line="104" column="9" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ucm_1gab08fad02c1e8641016be957fc5ce3705" prot="public" static="no">
        <name>SND_USE_CASE_VERB_ANALOG_RADIO</name>
        <initializer>&quot;FM Analog Radio&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FM Analog Radio Verb </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" line="105" column="9" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ucm_1gac1fc6fc3c4f08b4de9e622d05b591cb2" prot="public" static="no">
        <name>SND_USE_CASE_VERB_DIGITAL_RADIO</name>
        <initializer>&quot;FM Digital Radio&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FM Digital Radio Verb </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" line="106" column="9" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ucm_1gaa7abb8ce3d21b584c621869f7ebed3e6" prot="public" static="no">
        <name>SND_USE_CASE_DEV_NONE</name>
        <initializer>&quot;None&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>None Device </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" line="116" column="9" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ucm_1ga515b2956d58485b27fb982965d067c55" prot="public" static="no">
        <name>SND_USE_CASE_DEV_SPEAKER</name>
        <initializer>&quot;Speaker&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Speaker Device </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" line="117" column="9" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ucm_1gaa5d03312d1990c0bd5c162f61fbfa4a0" prot="public" static="no">
        <name>SND_USE_CASE_DEV_LINE</name>
        <initializer>&quot;Line&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Line Device </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" line="118" column="9" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ucm_1gaf2c22989c5315abcee46713cde8693d2" prot="public" static="no">
        <name>SND_USE_CASE_DEV_HEADPHONES</name>
        <initializer>&quot;Headphones&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Headphones Device </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" line="119" column="9" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ucm_1ga72c3300fac357a2e22b52afc13547ce0" prot="public" static="no">
        <name>SND_USE_CASE_DEV_HEADSET</name>
        <initializer>&quot;Headset&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Headset Device </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" line="120" column="9" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ucm_1ga315d29bfbdf84cff8b7a593c34f6393b" prot="public" static="no">
        <name>SND_USE_CASE_DEV_HANDSET</name>
        <initializer>&quot;Handset&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Handset Device </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" line="121" column="9" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ucm_1ga4992d89d4ec8be51f19bec0a69ba1984" prot="public" static="no">
        <name>SND_USE_CASE_DEV_BLUETOOTH</name>
        <initializer>&quot;Bluetooth&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Bluetooth Device </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" line="122" column="9" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ucm_1ga6ca86620d080360f6e2a240efb334dec" prot="public" static="no">
        <name>SND_USE_CASE_DEV_EARPIECE</name>
        <initializer>&quot;Earpiece&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Earpiece Device </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" line="123" column="9" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ucm_1ga7f7f45feb440a49be3be9e52da98b242" prot="public" static="no">
        <name>SND_USE_CASE_DEV_SPDIF</name>
        <initializer>&quot;SPDIF&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SPDIF Device </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" line="124" column="9" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ucm_1gab4e4a2b3d44883b1ffb5406529746faf" prot="public" static="no">
        <name>SND_USE_CASE_DEV_HDMI</name>
        <initializer>&quot;HDMI&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>HDMI Device </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" line="125" column="9" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ucm_1gaec6b78d147824af1474fc914770a834c" prot="public" static="no">
        <name>SND_USE_CASE_MOD_CAPTURE_VOICE</name>
        <initializer>&quot;Capture Voice&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Capture Voice Modifier </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" line="147" column="9" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ucm_1gad685f6b4dcb9e37f0b5a1160425aec23" prot="public" static="no">
        <name>SND_USE_CASE_MOD_CAPTURE_MUSIC</name>
        <initializer>&quot;Capture Music&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Capture Music Modifier </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" line="148" column="9" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ucm_1gadee4d4dce15624e282ab1960113caf8b" prot="public" static="no">
        <name>SND_USE_CASE_MOD_PLAY_MUSIC</name>
        <initializer>&quot;Play Music&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Play Music Modifier </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" line="149" column="9" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ucm_1ga61c217f060e616d61a294ac5d5d2fac0" prot="public" static="no">
        <name>SND_USE_CASE_MOD_PLAY_VOICE</name>
        <initializer>&quot;Play Voice&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Play Voice Modifier </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" line="150" column="9" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ucm_1gaacc8e06e0c8fc0de5e26df6f20462484" prot="public" static="no">
        <name>SND_USE_CASE_MOD_PLAY_TONE</name>
        <initializer>&quot;Play Tone&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Play Tone Modifier </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" line="151" column="9" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ucm_1gae2a230a913142c17f30d7dc2ae416866" prot="public" static="no">
        <name>SND_USE_CASE_MOD_ECHO_REF</name>
        <initializer>&quot;Echo Reference&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Echo Reference Modifier </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" line="152" column="9" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ucm_1ga64dd2e9f8e4e800effc02d895e1bfdbb" prot="public" static="no">
        <name>SND_USE_CASE_TQ_MUSIC</name>
        <initializer>&quot;Music&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>TQ - Tone Quality</para><para>The interface allows clients to determine the audio TQ required for each use case verb and modifier. It&apos;s intended as an optional hint to the audio driver in order to lower power consumption.Music Tone Quality </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" line="164" column="9" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ucm_1gaa822e565021887e26c0eaec2cee97bbd" prot="public" static="no">
        <name>SND_USE_CASE_TQ_VOICE</name>
        <initializer>&quot;Voice&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Voice Tone Quality </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" line="165" column="9" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ucm_1ga022328b4bb0b0b14d358cb2155e5d184" prot="public" static="no">
        <name>SND_USE_CASE_TQ_TONES</name>
        <initializer>&quot;Tones&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Tones Tone Quality </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" line="166" column="9" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/use-case.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The ALSA Use Case manager interface. See <ref refid="group__ucm" kindref="compound">ALSA Use Case Interface</ref> page for more details. </para>    </detaileddescription>
  </compounddef>
</doxygen>
