<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="async_8c" kind="file" language="C++">
    <compoundname>async.c</compoundname>
    <includes local="yes">pcm/pcm_local.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">limits.h</includes>
    <includes local="no">sys/uio.h</includes>
    <includes local="no">time.h</includes>
    <includes local="no">sys/time.h</includes>
    <includes local="yes">local.h</includes>
    <includes local="yes">/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/interval.h</includes>
    <includes local="yes">/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/interval_inline.h</includes>
    <includes local="yes">/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/mask.h</includes>
    <includes local="yes">/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/mask_inline.h</includes>
    <includes local="no">sys/types.h</includes>
    <includes local="yes">control/control_local.h</includes>
    <includes local="no">signal.h</includes>
    <incdepgraph>
      <node id="96">
        <label>stdlib.h</label>
      </node>
      <node id="103">
        <label>/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/interval_inline.h</label>
      </node>
      <node id="104">
        <label>/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/mask.h</label>
      </node>
      <node id="107">
        <label>control/control_local.h</label>
      </node>
      <node id="97">
        <label>limits.h</label>
      </node>
      <node id="94">
        <label>pcm/pcm_local.h</label>
      </node>
      <node id="106">
        <label>sys/types.h</label>
      </node>
      <node id="102">
        <label>/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/interval.h</label>
      </node>
      <node id="98">
        <label>sys/uio.h</label>
      </node>
      <node id="108">
        <label>signal.h</label>
      </node>
      <node id="101">
        <label>local.h</label>
      </node>
      <node id="93">
        <label>/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/async.c</label>
        <link refid="async_8c"/>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
      </node>
      <node id="99">
        <label>time.h</label>
      </node>
      <node id="100">
        <label>sys/time.h</label>
      </node>
      <node id="105">
        <label>/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/mask_inline.h</label>
      </node>
      <node id="95">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="async_8c_1aff744d27d4a850570fe33b459928b3e3" prot="public" static="no">
        <name>MAX_SIG_FUNCTION_CODE</name>
        <initializer>10 /* i.e. SIG_DFL SIG_IGN SIG_HOLD et al */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/async.c" line="32" column="9" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/async.c" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="async_8c_1a746265aa05477c4024d57db078351449" prot="public" static="yes" mutable="no">
        <type>struct sigaction</type>
        <definition>struct sigaction previous_action</definition>
        <argsstring></argsstring>
        <name>previous_action</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/async.c" line="162" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/async.c" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="async_8c_1ad0835a6e4ccef8e42234d6d821692248" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int snd_async_signo</definition>
        <argsstring></argsstring>
        <name>snd_async_signo</name>
        <initializer>= SIGIO</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>async signal number </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/async.c" line="50" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/async.c" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="async_8c_1a28f965a3d583fc72d100a8661c8e64f1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static LIST_HEAD</definition>
        <argsstring>(snd_async_handlers)</argsstring>
        <name>LIST_HEAD</name>
        <param>
          <type>snd_async_handlers</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/async.c" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="async_8c_1abe4575a193ecd9a14a78cf2d89d6c747" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void snd_async_handler</definition>
        <argsstring>(int signo, siginfo_t *siginfo, void *context)</argsstring>
        <name>snd_async_handler</name>
        <param>
          <type>int</type>
          <declname>signo</declname>
        </param>
        <param>
          <type>siginfo_t *</type>
          <declname>siginfo</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/async.c" line="55" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/async.c" bodystart="55" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="group___global_1gafd936c40505997bb659b74bd368636b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_async_add_handler</definition>
        <argsstring>(snd_async_handler_t **handler, int fd, snd_async_callback_t callback, void *private_data)</argsstring>
        <name>snd_async_add_handler</name>
        <param>
          <type><ref refid="group___global_1ga8cd9a1d441e9219ca5f2ff04094c7c6d" kindref="member">snd_async_handler_t</ref> **</type>
          <declname>handler</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type><ref refid="group___global_1gaf8937eadd968df14b64e54f49c29821c" kindref="member">snd_async_callback_t</ref></type>
          <declname>callback</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>private_data</declname>
        </param>
        <briefdescription>
<para>Registers an async handler. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The function puts the pointer to the new async handler object at the address specified by <computeroutput>handler</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>The file descriptor to be associated with the callback. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>The async callback function. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>private_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Private data for the async callback function. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero if successful, otherwise a negative error code.</para></simplesect>
This function associates the callback function with the given file, and saves this association in a <computeroutput>snd_async_handler_t</computeroutput> object.</para><para>Whenever the <computeroutput>SIGIO</computeroutput> signal is raised for the file <computeroutput>fd</computeroutput>, the callback function will be called with its parameter pointing to the async handler object returned by this function.</para><para>The ALSA <computeroutput>sigaction</computeroutput> handler for the <computeroutput>SIGIO</computeroutput> signal automatically multiplexes the notifications to the registered async callbacks. However, the application is responsible for instructing the device driver to generate the <computeroutput>SIGIO</computeroutput> signal.</para><para>The <computeroutput>SIGIO</computeroutput> signal may have been replaced with another signal, see <ref refid="group___global_1gab32c9afe265784634c78e7a6b5d27abe" kindref="member">snd_async_handler_get_signo</ref>.</para><para>When the async handler isn&apos;t needed anymore, you must delete it with <ref refid="group___global_1ga1c0bd4d123e9581a749b80e2df48b4e1" kindref="member">snd_async_del_handler</ref>.</para><para><simplesect kind="see"><para><ref refid="group___p_c_m_1ga5a0c0da6d0d35a3ac9f6a97567ac3b63" kindref="member">snd_async_add_pcm_handler</ref>, <ref refid="group___control_1ga23813430fb81fecb0e95d1dfd688337d" kindref="member">snd_async_add_ctl_handler</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/async.c" line="100" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/async.c" bodystart="100" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="group___global_1ga1c0bd4d123e9581a749b80e2df48b4e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_async_del_handler</definition>
        <argsstring>(snd_async_handler_t *handler)</argsstring>
        <name>snd_async_del_handler</name>
        <param>
          <type><ref refid="group___global_1ga8cd9a1d441e9219ca5f2ff04094c7c6d" kindref="member">snd_async_handler_t</ref> *</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Deletes an async handler. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle of the async handler to delete. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero if successful, otherwise a negative error code. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/async.c" line="138" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/async.c" bodystart="138" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="group___global_1gab32c9afe265784634c78e7a6b5d27abe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_async_handler_get_signo</definition>
        <argsstring>(snd_async_handler_t *handler)</argsstring>
        <name>snd_async_handler_get_signo</name>
        <param>
          <type><ref refid="group___global_1ga8cd9a1d441e9219ca5f2ff04094c7c6d" kindref="member">snd_async_handler_t</ref> *</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Returns the signal number assigned to an async handler. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to an async handler. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The signal number if successful, otherwise a negative error code.</para></simplesect>
The signal number for async handlers usually is <computeroutput>SIGIO</computeroutput>, but wizards can redefine it to a realtime signal when compiling the ALSA library. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/async.c" line="185" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/async.c" bodystart="185" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="group___global_1gad601f70e0405a8522860edb15db6350c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_async_handler_get_fd</definition>
        <argsstring>(snd_async_handler_t *handler)</argsstring>
        <name>snd_async_handler_get_fd</name>
        <param>
          <type><ref refid="group___global_1ga8cd9a1d441e9219ca5f2ff04094c7c6d" kindref="member">snd_async_handler_t</ref> *</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Returns the file descriptor assigned to an async handler. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to an async handler. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The file descriptor if successful, otherwise a negative error code. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/async.c" line="196" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/async.c" bodystart="196" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="group___global_1gad9c76588a87918901c6273e6bc98a1bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* snd_async_handler_get_callback_private</definition>
        <argsstring>(snd_async_handler_t *handler)</argsstring>
        <name>snd_async_handler_get_callback_private</name>
        <param>
          <type><ref refid="group___global_1ga8cd9a1d441e9219ca5f2ff04094c7c6d" kindref="member">snd_async_handler_t</ref> *</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Returns the private data assigned to an async handler. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to an async handler. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The <computeroutput>private_data</computeroutput> value registered with the async handler. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/async.c" line="207" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/async.c" bodystart="207" bodyend="211"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Async notification helpers. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Abramo Bagnara <ulink url="mailto:abramo@alsa-project.org">abramo@alsa-project.org</ulink> </para></simplesect>
<simplesect kind="date"><para>2001 </para></simplesect>
</para>    </detaileddescription>
    <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/async.c"/>
  </compounddef>
</doxygen>
