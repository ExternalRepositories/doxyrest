<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="cards_8c" kind="file" language="C++">
    <compoundname>cards.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">ctype.h</includes>
    <includes local="no">fcntl.h</includes>
    <includes local="no">sys/ioctl.h</includes>
    <includes local="yes">control_local.h</includes>
    <incdepgraph>
      <node id="127">
        <label>stdlib.h</label>
      </node>
      <node id="131">
        <label>fcntl.h</label>
      </node>
      <node id="132">
        <label>sys/ioctl.h</label>
      </node>
      <node id="129">
        <label>string.h</label>
      </node>
      <node id="128">
        <label>unistd.h</label>
      </node>
      <node id="133">
        <label>control_local.h</label>
      </node>
      <node id="130">
        <label>ctype.h</label>
      </node>
      <node id="126">
        <label>stdio.h</label>
      </node>
      <node id="125">
        <label>/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/cards.c</label>
        <link refid="cards_8c"/>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="cards_8c_1ae0a45a3df45f471a21ac0f40b5472f2c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_card_load2</definition>
        <argsstring>(const char *control)</argsstring>
        <name>snd_card_load2</name>
        <param>
          <type>const char *</type>
          <declname>control</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/cards.c" line="42" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/cards.c" bodystart="42" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="cards_8c_1a93eed0c6921a2cc5bf854622efe60a24" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_card_load1</definition>
        <argsstring>(int card)</argsstring>
        <name>snd_card_load1</name>
        <param>
          <type>int</type>
          <declname>card</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/cards.c" line="61" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/cards.c" bodystart="61" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="group___control_1gabb7a76fa905fbae6481f78d1eea4feb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_card_load</definition>
        <argsstring>(int card)</argsstring>
        <name>snd_card_load</name>
        <param>
          <type>int</type>
          <declname>card</declname>
        </param>
        <briefdescription>
<para>Try to load the driver for a card. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>card</parametername>
</parameternamelist>
<parameterdescription>
<para>Card number. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if driver is present, zero if driver is not present </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/cards.c" line="83" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/cards.c" bodystart="83" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="group___control_1ga6fccc8a2d7d5ebd072a552a05855c145" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_card_next</definition>
        <argsstring>(int *rcard)</argsstring>
        <name>snd_card_next</name>
        <param>
          <type>int *</type>
          <declname>rcard</declname>
        </param>
        <briefdescription>
<para>Try to determine the next card. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rcard</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to card number </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>zero if success, otherwise a negative error code</para></simplesect>
Tries to determine the next card from given card number. If card number is -1, then the first available card is returned. If the result card number is -1, no more cards are available. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/cards.c" line="98" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/cards.c" bodystart="98" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="group___control_1ga1881c5c04a532f5b9397745731ce7730" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_card_get_index</definition>
        <argsstring>(const char *string)</argsstring>
        <name>snd_card_get_index</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
<para>Convert card string to an integer value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>string</parametername>
</parameternamelist>
<parameterdescription>
<para>String containing card identifier </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>zero if success, otherwise a negative error code</para></simplesect>
The accepted format is an integer value in ASCII representation or the card identifier (the id parameter for sound-card drivers). The control device name like /dev/snd/controlC0 is accepted, too. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/cards.c" line="125" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/cards.c" bodystart="125" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="group___control_1gad48d44da8e3bfe150e928267008b8ff5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_card_get_name</definition>
        <argsstring>(int card, char **name)</argsstring>
        <name>snd_card_get_name</name>
        <param>
          <type>int</type>
          <declname>card</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Obtain the card name. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>card</parametername>
</parameternamelist>
<parameterdescription>
<para>Card number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Result - card name corresponding to card number </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>zero if success, otherwise a negative error code</para></simplesect>
The value returned in name is allocated with strdup and should be freed when no longer used. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/cards.c" line="173" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/cards.c" bodystart="173" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="group___control_1ga547dcead4a72f24db4a0f9f530f75228" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_card_get_longname</definition>
        <argsstring>(int card, char **name)</argsstring>
        <name>snd_card_get_longname</name>
        <param>
          <type>int</type>
          <declname>card</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Obtain the card long name. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>card</parametername>
</parameternamelist>
<parameterdescription>
<para>Card number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Result - card long name corresponding to card number </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>zero if success, otherwise a negative error code</para></simplesect>
The value returned in name is allocated with strdup and should be freed when no longer used. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/cards.c" line="203" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/cards.c" bodystart="203" bodyend="222"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Basic Soundcard Operations. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Jaroslav Kysela <ulink url="mailto:perex@perex.cz">perex@perex.cz</ulink> </para></simplesect>
<simplesect kind="date"><para>1998-2001 </para></simplesect>
</para>    </detaileddescription>
    <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/cards.c"/>
  </compounddef>
</doxygen>
