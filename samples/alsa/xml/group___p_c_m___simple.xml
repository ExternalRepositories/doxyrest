<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group___p_c_m___simple" kind="group">
    <compoundname>PCM_Simple</compoundname>
    <title>Simple setup functions</title>
    <innerfile refid="pcm__simple_8c">pcm_simple.c</innerfile>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group___p_c_m___simple_1ga0c8bcbf9cc83e8b0edaa501b15ff8ba9" prot="public" static="no">
        <name>snd_spcm_latency_t</name>
        <enumvalue id="group___p_c_m___simple_1gga0c8bcbf9cc83e8b0edaa501b15ff8ba9a51386f1133cba0e74aad6fbd8f6cf714" prot="public">
          <name>SND_SPCM_LATENCY_STANDARD</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>standard latency - for standard playback or capture (estimated latency in one direction 350ms) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___p_c_m___simple_1gga0c8bcbf9cc83e8b0edaa501b15ff8ba9ad392df38379992a4474f24fa2d0a7146" prot="public">
          <name>SND_SPCM_LATENCY_MEDIUM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>medium latency - software phones etc. (estimated latency in one direction maximally 25ms </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___p_c_m___simple_1gga0c8bcbf9cc83e8b0edaa501b15ff8ba9aa29ff6c1b58c9b050df6ae575229cd9c" prot="public">
          <name>SND_SPCM_LATENCY_REALTIME</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>realtime latency - realtime applications (effect processors etc.) (estimated latency in one direction 5ms and better) </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Simple PCM latency type </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="1232" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" bodystart="1232" bodyend="1242"/>
      </memberdef>
      <memberdef kind="enum" id="group___p_c_m___simple_1gaf89aba8106b8cc46e9f18d91268ec5ba" prot="public" static="no">
        <name>snd_spcm_xrun_type_t</name>
        <enumvalue id="group___p_c_m___simple_1ggaf89aba8106b8cc46e9f18d91268ec5baa7ef0dcc10a5e328bc78aa472d882f1f8" prot="public">
          <name>SND_SPCM_XRUN_IGNORE</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>driver / library will ignore all xruns, the stream runs forever </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___p_c_m___simple_1ggaf89aba8106b8cc46e9f18d91268ec5baa716f9883b17fe11b35d162a6ff14a96a" prot="public">
          <name>SND_SPCM_XRUN_STOP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>driver / library stops the stream when an xrun occurs </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Simple PCM xrun type </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="1245" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" bodystart="1245" bodyend="1250"/>
      </memberdef>
      <memberdef kind="enum" id="group___p_c_m___simple_1ga6ed7a5a0762c198cb90ee48fb477b092" prot="public" static="no">
        <name>snd_spcm_duplex_type_t</name>
        <enumvalue id="group___p_c_m___simple_1gga6ed7a5a0762c198cb90ee48fb477b092a1baaaad19888ceeaf728364362274e0b" prot="public">
          <name>SND_SPCM_DUPLEX_LIBERAL</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>liberal duplex - the buffer and period sizes might not match </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___p_c_m___simple_1gga6ed7a5a0762c198cb90ee48fb477b092a3efcb3f575fd6b86c0198dc87484f7c9" prot="public">
          <name>SND_SPCM_DUPLEX_PEDANTIC</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>pedantic duplex - the buffer and period sizes MUST match </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Simple PCM duplex type </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="1253" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" bodystart="1253" bodyend="1258"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___p_c_m___simple_1ga5c55688bfe990821798936c20cd11ca5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_spcm_init</definition>
        <argsstring>(snd_pcm_t *pcm, unsigned int rate, unsigned int channels, snd_pcm_format_t format, snd_pcm_subformat_t subformat, snd_spcm_latency_t latency, snd_pcm_access_t _access, snd_spcm_xrun_type_t xrun_type)</argsstring>
        <name>snd_spcm_init</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>rate</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>channels</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gaa14b7f26877a812acbb39811364177f8" kindref="member">snd_pcm_format_t</ref></type>
          <declname>format</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga1e5fe73a6bdf881e2f91921d5e5327c7" kindref="member">snd_pcm_subformat_t</ref></type>
          <declname>subformat</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m___simple_1ga0c8bcbf9cc83e8b0edaa501b15ff8ba9" kindref="member">snd_spcm_latency_t</ref></type>
          <declname>latency</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga661221ba5e8f1d6eaf4ab8e2da57cc1a" kindref="member">snd_pcm_access_t</ref></type>
          <declname>_access</declname>
          <defname>access</defname>
        </param>
        <param>
          <type><ref refid="group___p_c_m___simple_1gaf89aba8106b8cc46e9f18d91268ec5ba" kindref="member">snd_spcm_xrun_type_t</ref></type>
          <declname>xrun_type</declname>
        </param>
        <briefdescription>
<para>Set up a simple PCM. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rate</parametername>
</parameternamelist>
<parameterdescription>
<para>Sample rate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channels</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of channels </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM format </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>subformat</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM subformat </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>latency</parametername>
</parameternamelist>
<parameterdescription>
<para>Latency type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>access</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM acceess type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xrun_type</parametername>
</parameternamelist>
<parameterdescription>
<para>XRUN type </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, or a negative error code</para></simplesect>
<simplesect kind="warning"><para>The simple PCM API may be broken in the current release. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="1260" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_simple.c" bodystart="157" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___simple_1ga148a05b14b083d9c6ded79dd6bfd7fdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_spcm_init_duplex</definition>
        <argsstring>(snd_pcm_t *playback_pcm, snd_pcm_t *capture_pcm, unsigned int rate, unsigned int channels, snd_pcm_format_t format, snd_pcm_subformat_t subformat, snd_spcm_latency_t latency, snd_pcm_access_t _access, snd_spcm_xrun_type_t xrun_type, snd_spcm_duplex_type_t duplex_type)</argsstring>
        <name>snd_spcm_init_duplex</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>playback_pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>capture_pcm</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>rate</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>channels</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gaa14b7f26877a812acbb39811364177f8" kindref="member">snd_pcm_format_t</ref></type>
          <declname>format</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga1e5fe73a6bdf881e2f91921d5e5327c7" kindref="member">snd_pcm_subformat_t</ref></type>
          <declname>subformat</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m___simple_1ga0c8bcbf9cc83e8b0edaa501b15ff8ba9" kindref="member">snd_spcm_latency_t</ref></type>
          <declname>latency</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga661221ba5e8f1d6eaf4ab8e2da57cc1a" kindref="member">snd_pcm_access_t</ref></type>
          <declname>_access</declname>
          <defname>access</defname>
        </param>
        <param>
          <type><ref refid="group___p_c_m___simple_1gaf89aba8106b8cc46e9f18d91268ec5ba" kindref="member">snd_spcm_xrun_type_t</ref></type>
          <declname>xrun_type</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m___simple_1ga6ed7a5a0762c198cb90ee48fb477b092" kindref="member">snd_spcm_duplex_type_t</ref></type>
          <declname>duplex_type</declname>
        </param>
        <briefdescription>
<para>Initialize simple PCMs in the duplex mode. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>playback_pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle for playback </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>capture_pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle for capture </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rate</parametername>
</parameternamelist>
<parameterdescription>
<para>Sample rate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channels</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of channels </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM format </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>subformat</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM subformat </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>latency</parametername>
</parameternamelist>
<parameterdescription>
<para>Latency type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>access</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM acceess type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xrun_type</parametername>
</parameternamelist>
<parameterdescription>
<para>XRUN type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>duplex_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Duplex mode </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, or a negative error code</para></simplesect>
<simplesect kind="warning"><para>The simple PCM API may be broken in the current release. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="1269" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_simple.c" bodystart="209" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___simple_1gab6ee6daf2b83bdebf6cf6355c0365885" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_spcm_init_get_params</definition>
        <argsstring>(snd_pcm_t *pcm, unsigned int *rate, snd_pcm_uframes_t *buffer_size, snd_pcm_uframes_t *period_size)</argsstring>
        <name>snd_spcm_init_get_params</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>rate</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref> *</type>
          <declname>buffer_size</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref> *</type>
          <declname>period_size</declname>
        </param>
        <briefdescription>
<para>Get the set up of simple PCM. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rate</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to store the current sample rate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to store the current buffer size </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>period_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to store the current period size </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, or a negative error code</para></simplesect>
<simplesect kind="warning"><para>The simple PCM API may be broken in the current release. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="1280" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_simple.c" bodystart="284" bodyend="299"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>See the <ref refid="pcm" kindref="compound">PCM (digital audio) interface</ref> page for more details. </para>    </detaileddescription>
  </compounddef>
</doxygen>
