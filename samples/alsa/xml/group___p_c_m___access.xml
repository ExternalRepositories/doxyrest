<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group___p_c_m___access" kind="group">
    <compoundname>PCM_Access</compoundname>
    <title>Access Mask Functions</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___p_c_m___access_1ga963ead3f1169f4b5e03a2968adc9cb0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t snd_pcm_access_mask_sizeof</definition>
        <argsstring>(void)</argsstring>
        <name>snd_pcm_access_mask_sizeof</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>get size of <ref refid="group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba" kindref="member">snd_pcm_access_mask_t</ref> </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>size in bytes </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="914" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="3606" bodyend="3609"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___access_1gafedd1f9c96aa8a93ab7f2c0135de3780" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_access_mask_malloc</definition>
        <argsstring>(snd_pcm_access_mask_t **ptr)</argsstring>
        <name>snd_pcm_access_mask_malloc</name>
        <param>
          <type><ref refid="group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba" kindref="member">snd_pcm_access_mask_t</ref> **</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>allocate an empty <ref refid="group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba" kindref="member">snd_pcm_access_mask_t</ref> using standard malloc </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>returned pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="920" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="3616" bodyend="3623"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___access_1ga965129493161fae3ab534209b7e6b2bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_pcm_access_mask_free</definition>
        <argsstring>(snd_pcm_access_mask_t *obj)</argsstring>
        <name>snd_pcm_access_mask_free</name>
        <param>
          <type><ref refid="group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba" kindref="member">snd_pcm_access_mask_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>frees a previously allocated <ref refid="group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba" kindref="member">snd_pcm_access_mask_t</ref> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to object to free </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="921" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="3629" bodyend="3632"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___access_1ga4fc7338c7c0cd715ea384d4e308d5925" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_pcm_access_mask_copy</definition>
        <argsstring>(snd_pcm_access_mask_t *dst, const snd_pcm_access_mask_t *src)</argsstring>
        <name>snd_pcm_access_mask_copy</name>
        <param>
          <type><ref refid="group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba" kindref="member">snd_pcm_access_mask_t</ref> *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba" kindref="member">snd_pcm_access_mask_t</ref> *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>copy one <ref refid="group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba" kindref="member">snd_pcm_access_mask_t</ref> to another </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to destination </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to source </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="922" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="3639" bodyend="3643"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___access_1gaa8202ce90275d6dfe2623cbacbc93708" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_pcm_access_mask_none</definition>
        <argsstring>(snd_pcm_access_mask_t *mask)</argsstring>
        <name>snd_pcm_access_mask_none</name>
        <param>
          <type><ref refid="group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba" kindref="member">snd_pcm_access_mask_t</ref> *</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>reset all bits in a <ref refid="group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba" kindref="member">snd_pcm_access_mask_t</ref> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to mask </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="923" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="3649" bodyend="3652"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___access_1ga76b2575826977951a862c5e78e81993c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_pcm_access_mask_any</definition>
        <argsstring>(snd_pcm_access_mask_t *mask)</argsstring>
        <name>snd_pcm_access_mask_any</name>
        <param>
          <type><ref refid="group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba" kindref="member">snd_pcm_access_mask_t</ref> *</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>set all bits in a <ref refid="group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba" kindref="member">snd_pcm_access_mask_t</ref> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to mask </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="924" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="3658" bodyend="3661"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___access_1ga381ade7f78d8614b38dde36ba0393f74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_access_mask_test</definition>
        <argsstring>(const snd_pcm_access_mask_t *mask, snd_pcm_access_t val)</argsstring>
        <name>snd_pcm_access_mask_test</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba" kindref="member">snd_pcm_access_mask_t</ref> *</type>
          <declname>mask</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga661221ba5e8f1d6eaf4ab8e2da57cc1a" kindref="member">snd_pcm_access_t</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>test the presence of an access type in a <ref refid="group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba" kindref="member">snd_pcm_access_mask_t</ref> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to mask </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>access type </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="925" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="3668" bodyend="3671"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___access_1ga224e84b7b1362aea503b0595512bac77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_access_mask_empty</definition>
        <argsstring>(const snd_pcm_access_mask_t *mask)</argsstring>
        <name>snd_pcm_access_mask_empty</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba" kindref="member">snd_pcm_access_mask_t</ref> *</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>test, if given a <ref refid="group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba" kindref="member">snd_pcm_access_mask_t</ref> is empty </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to mask </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>not empty </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>empty </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="926" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="3679" bodyend="3682"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___access_1gadc0a0f989a9faca8b25b2c35d4b14e14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_pcm_access_mask_set</definition>
        <argsstring>(snd_pcm_access_mask_t *mask, snd_pcm_access_t val)</argsstring>
        <name>snd_pcm_access_mask_set</name>
        <param>
          <type><ref refid="group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba" kindref="member">snd_pcm_access_mask_t</ref> *</type>
          <declname>mask</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga661221ba5e8f1d6eaf4ab8e2da57cc1a" kindref="member">snd_pcm_access_t</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>make an access type present in a <ref refid="group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba" kindref="member">snd_pcm_access_mask_t</ref> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to mask </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>access type </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="927" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="3689" bodyend="3692"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___access_1ga35c6aaf5b55ef8dd1c4939467869db86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_pcm_access_mask_reset</definition>
        <argsstring>(snd_pcm_access_mask_t *mask, snd_pcm_access_t val)</argsstring>
        <name>snd_pcm_access_mask_reset</name>
        <param>
          <type><ref refid="group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba" kindref="member">snd_pcm_access_mask_t</ref> *</type>
          <declname>mask</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga661221ba5e8f1d6eaf4ab8e2da57cc1a" kindref="member">snd_pcm_access_t</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>make an access type missing from a <ref refid="group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba" kindref="member">snd_pcm_access_mask_t</ref> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to mask </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>access type </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="928" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="3699" bodyend="3702"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___p_c_m___access_1ga8097b3ae42fa4a2e5bece2ca95b515b7" prot="public" static="no">
        <name>snd_pcm_access_mask_alloca</name>
        <param><defname>ptr</defname></param>
        <briefdescription>
<para>allocate an empty <ref refid="group___p_c_m_1ga7f9575bcc94c7c2cf5d688a45c16ffba" kindref="member">snd_pcm_access_mask_t</ref> using standard alloca </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>returned pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="919" column="9" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" bodystart="919" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>See the <ref refid="pcm" kindref="compound">PCM (digital audio) interface</ref> page for more details. </para>    </detaileddescription>
  </compounddef>
</doxygen>
