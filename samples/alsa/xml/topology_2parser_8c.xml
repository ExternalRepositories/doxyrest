<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="topology_2parser_8c" kind="file" language="C++">
    <compoundname>parser.c</compoundname>
    <includes local="no">sys/stat.h</includes>
    <includes local="yes">list.h</includes>
    <includes local="yes">tplg_local.h</includes>
    <incdepgraph>
      <node id="804">
        <label>sys/stat.h</label>
      </node>
      <node id="805">
        <label>list.h</label>
      </node>
      <node id="806">
        <label>tplg_local.h</label>
      </node>
      <node id="803">
        <label>/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/parser.c</label>
        <link refid="topology_2parser_8c"/>
        <childnode refid="804" relation="include">
        </childnode>
        <childnode refid="805" relation="include">
        </childnode>
        <childnode refid="806" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="topology_2parser_8c_1a1f6e60d7a002da925f6fa791af6d0ab0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tplg_parse_compound</definition>
        <argsstring>(snd_tplg_t *tplg, snd_config_t *cfg, int(*fcn)(snd_tplg_t *, snd_config_t *, void *), void *private)</argsstring>
        <name>tplg_parse_compound</name>
        <param>
          <type><ref refid="group__topology_1ga85fcf522a65a5da8f57d83eec2eea98e" kindref="member">snd_tplg_t</ref> *</type>
          <declname>tplg</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>int(*)(<ref refid="group__topology_1ga85fcf522a65a5da8f57d83eec2eea98e" kindref="member">snd_tplg_t</ref> *, <ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *, void *)</type>
          <declname>fcn</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>private</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/parser.c" line="26" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/parser.c" bodystart="26" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="topology_2parser_8c_1a5ee64a76df4eb06124b9144745f4804d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int tplg_parse_config</definition>
        <argsstring>(snd_tplg_t *tplg, snd_config_t *cfg)</argsstring>
        <name>tplg_parse_config</name>
        <param>
          <type><ref refid="group__topology_1ga85fcf522a65a5da8f57d83eec2eea98e" kindref="member">snd_tplg_t</ref> *</type>
          <declname>tplg</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/parser.c" line="61" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/parser.c" bodystart="61" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="topology_2parser_8c_1a7927614360489a7b386372f3206a29bb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int tplg_load_config</definition>
        <argsstring>(const char *file, snd_config_t **cfg)</argsstring>
        <name>tplg_load_config</name>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> **</type>
          <declname>cfg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/parser.c" line="223" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/parser.c" bodystart="223" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="topology_2parser_8c_1a076874c4d9c1259aae341792ee1f6769" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int tplg_build_integ</definition>
        <argsstring>(snd_tplg_t *tplg)</argsstring>
        <name>tplg_build_integ</name>
        <param>
          <type><ref refid="group__topology_1ga85fcf522a65a5da8f57d83eec2eea98e" kindref="member">snd_tplg_t</ref> *</type>
          <declname>tplg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/parser.c" line="267" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/parser.c" bodystart="267" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="group__topology_1ga32610ecd4d4d3d8b298ed6eea9ee19cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_tplg_build_file</definition>
        <argsstring>(snd_tplg_t *tplg, const char *infile, const char *outfile)</argsstring>
        <name>snd_tplg_build_file</name>
        <param>
          <type><ref refid="group__topology_1ga85fcf522a65a5da8f57d83eec2eea98e" kindref="member">snd_tplg_t</ref> *</type>
          <declname>tplg</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>infile</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>outfile</declname>
        </param>
        <briefdescription>
<para>Parse and build topology text file into binary file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tplg</parametername>
</parameternamelist>
<parameterdescription>
<para>Topology instance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>infile</parametername>
</parameternamelist>
<parameterdescription>
<para>Topology text input file to be parsed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outfile</parametername>
</parameternamelist>
<parameterdescription>
<para>Binary topology output file. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero on success, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/parser.c" line="310" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/parser.c" bodystart="310" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="group__topology_1ga05ff9c8d200b65c8511ef498443e0f5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_tplg_add_object</definition>
        <argsstring>(snd_tplg_t *tplg, snd_tplg_obj_template_t *t)</argsstring>
        <name>snd_tplg_add_object</name>
        <param>
          <type><ref refid="group__topology_1ga85fcf522a65a5da8f57d83eec2eea98e" kindref="member">snd_tplg_t</ref> *</type>
          <declname>tplg</declname>
        </param>
        <param>
          <type><ref refid="structsnd__tplg__obj__template__t" kindref="compound">snd_tplg_obj_template_t</ref> *</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Register topology template object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tplg</parametername>
</parameternamelist>
<parameterdescription>
<para>Topology instance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>Template object. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero on success, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/parser.c" line="356" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/parser.c" bodystart="356" bodyend="381"/>
      </memberdef>
      <memberdef kind="function" id="group__topology_1ga537e8f4fa495e40f8fc9a8d7c4ea8840" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_tplg_build</definition>
        <argsstring>(snd_tplg_t *tplg, const char *outfile)</argsstring>
        <name>snd_tplg_build</name>
        <param>
          <type><ref refid="group__topology_1ga85fcf522a65a5da8f57d83eec2eea98e" kindref="member">snd_tplg_t</ref> *</type>
          <declname>tplg</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>outfile</declname>
        </param>
        <briefdescription>
<para>Build all registered topology data into binary file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tplg</parametername>
</parameternamelist>
<parameterdescription>
<para>Topology instance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outfile</parametername>
</parameternamelist>
<parameterdescription>
<para>Binary topology output file. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero on success, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/parser.c" line="383" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/parser.c" bodystart="383" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="group__topology_1gabbb1cc2f7389e77d2d31919296e7e896" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_tplg_set_manifest_data</definition>
        <argsstring>(snd_tplg_t *tplg, const void *data, int len)</argsstring>
        <name>snd_tplg_set_manifest_data</name>
        <param>
          <type><ref refid="group__topology_1ga85fcf522a65a5da8f57d83eec2eea98e" kindref="member">snd_tplg_t</ref> *</type>
          <declname>tplg</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Attach private data to topology manifest. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tplg</parametername>
</parameternamelist>
<parameterdescription>
<para>Topology instance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Private data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of data in bytes. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero on success, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/parser.c" line="412" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/parser.c" bodystart="412" bodyend="425"/>
      </memberdef>
      <memberdef kind="function" id="group__topology_1ga389e200fa8c0b4b2c4c7352486874620" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_tplg_set_version</definition>
        <argsstring>(snd_tplg_t *tplg, unsigned int version)</argsstring>
        <name>snd_tplg_set_version</name>
        <param>
          <type><ref refid="group__topology_1ga85fcf522a65a5da8f57d83eec2eea98e" kindref="member">snd_tplg_t</ref> *</type>
          <declname>tplg</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>version</declname>
        </param>
        <briefdescription>
<para>Set an optional vendor specific version number. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tplg</parametername>
</parameternamelist>
<parameterdescription>
<para>Topology instance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>version</parametername>
</parameternamelist>
<parameterdescription>
<para>Vendor specific version number. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero on success, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/parser.c" line="427" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/parser.c" bodystart="427" bodyend="432"/>
      </memberdef>
      <memberdef kind="function" id="group__topology_1gac4682edcfc48f7f4c90c238ebffc0260" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_tplg_verbose</definition>
        <argsstring>(snd_tplg_t *tplg, int verbose)</argsstring>
        <name>snd_tplg_verbose</name>
        <param>
          <type><ref refid="group__topology_1ga85fcf522a65a5da8f57d83eec2eea98e" kindref="member">snd_tplg_t</ref> *</type>
          <declname>tplg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>verbose</declname>
        </param>
        <briefdescription>
<para>Enable verbose reporting of binary file output. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tplg</parametername>
</parameternamelist>
<parameterdescription>
<para>Topology Instance </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>verbose</parametername>
</parameternamelist>
<parameterdescription>
<para>Enable verbose output level if non zero </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/parser.c" line="434" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/parser.c" bodystart="434" bodyend="437"/>
      </memberdef>
      <memberdef kind="function" id="topology_2parser_8c_1a59f2a3caa8aac6aaa3975360553c4cd9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool is_little_endian</definition>
        <argsstring>(void)</argsstring>
        <name>is_little_endian</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/parser.c" line="439" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/parser.c" bodystart="439" bodyend="447"/>
      </memberdef>
      <memberdef kind="function" id="group__topology_1ga33eea73f6e3a5a1cdb4af78482fd007b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__topology_1ga85fcf522a65a5da8f57d83eec2eea98e" kindref="member">snd_tplg_t</ref> *</type>
        <definition>snd_tplg_t* snd_tplg_new</definition>
        <argsstring>(void)</argsstring>
        <name>snd_tplg_new</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Create a new topology parser instance. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>New topology parser instance </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/parser.c" line="449" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/parser.c" bodystart="449" bodyend="484"/>
      </memberdef>
      <memberdef kind="function" id="group__topology_1gad0311f45ec180cced72c0500f42b14f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_tplg_free</definition>
        <argsstring>(snd_tplg_t *tplg)</argsstring>
        <name>snd_tplg_free</name>
        <param>
          <type><ref refid="group__topology_1ga85fcf522a65a5da8f57d83eec2eea98e" kindref="member">snd_tplg_t</ref> *</type>
          <declname>tplg</declname>
        </param>
        <briefdescription>
<para>Free a topology parser instance. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tplg</parametername>
</parameternamelist>
<parameterdescription>
<para>Topology parser instance </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/parser.c" line="486" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/parser.c" bodystart="486" bodyend="511"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/parser.c"/>
  </compounddef>
</doxygen>
