<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group___plugin___s_d_k" kind="group">
    <compoundname>Plugin_SDK</compoundname>
    <title>External PCM plugin SDK</title>
    <innerfile refid="pcm__extplug_8c">pcm_extplug.c</innerfile>
    <innerfile refid="pcm__ioplug_8c">pcm_ioplug.c</innerfile>
    <innergroup refid="group___p_c_m___ext_plug">External Filter plugin SDK</innergroup>
    <innergroup refid="group___p_c_m___i_o_plug">External I/O plugin SDK</innergroup>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___plugin___s_d_k_1ga6cc0e84dc2822458b4ed163071a51ecd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_parse_control_id</definition>
        <argsstring>(snd_config_t *conf, snd_ctl_elem_id_t *ctl_id, int *cardp, int *cchannelsp, int *hwctlp)</argsstring>
        <name>snd_pcm_parse_control_id</name>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>conf</declname>
        </param>
        <param>
          <type><ref refid="group___control_1gad6c3746f1925bfec6a4fd0e913430e55" kindref="member">snd_ctl_elem_id_t</ref> *</type>
          <declname>ctl_id</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>cardp</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>cchannelsp</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>hwctlp</declname>
        </param>
        <briefdescription>
<para>Parse control element id from the config. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conf</parametername>
</parameternamelist>
<parameterdescription>
<para>the config tree to parse </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ctl_id</parametername>
</parameternamelist>
<parameterdescription>
<para>the pointer to store the resultant control element id </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cardp</parametername>
</parameternamelist>
<parameterdescription>
<para>the pointer to store the card index </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cchannelsp</parametername>
</parameternamelist>
<parameterdescription>
<para>the pointer to store the number of channels (optional) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hwctlp</parametername>
</parameternamelist>
<parameterdescription>
<para>the pointer to store the h/w control flag (optional) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, or a negative error code</para></simplesect>
This function parses the given config tree to retrieve the control element id and the card index. It&apos;s used by softvol. External PCM plugins can use this function for creating or assigining their controls.</para><para>cchannelsp and hwctlp arguments are optional. Set NULL if not necessary. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_external.h" line="61" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_misc.c" bodystart="737" bodyend="863"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___plugin___s_d_k_1gaf1fae79f689774a0bdb72a5e15f5978c" prot="public" static="no">
        <name>SND_PCM_PLUGIN_ENTRY</name>
        <param><defname>name</defname></param>
        <initializer>_snd_pcm_##name##_open</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Define the object entry for external PCM plugins </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_external.h" line="43" column="9" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_external.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___plugin___s_d_k_1ga73a613cc5b7b3642f53bbd5a1d78004b" prot="public" static="no">
        <name>SND_PCM_PLUGIN_SYMBOL</name>
        <param><defname>name</defname></param>
        <initializer><ref refid="group___global_1ga355c462c8c5dee0aeadae17d096ba531" kindref="member">SND_DLSYM_BUILD_VERSION</ref>(<ref refid="group___plugin___s_d_k_1gaf1fae79f689774a0bdb72a5e15f5978c" kindref="member">SND_PCM_PLUGIN_ENTRY</ref>(name), <ref refid="group___p_c_m_1ga32ccf47736036e86b0d787dc43e64d4a" kindref="member">SND_PCM_DLSYM_VERSION</ref>);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Define the symbols of the given plugin with versions </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_external.h" line="48" column="9" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_external.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___plugin___s_d_k_1ga3fd72ea47a7a921943b26c580b9d6c41" prot="public" static="no">
        <name>SND_PCM_PLUGIN_DEFINE_FUNC</name>
        <param><defname>plugin</defname></param>
        <initializer>int <ref refid="group___plugin___s_d_k_1gaf1fae79f689774a0bdb72a5e15f5978c" kindref="member">SND_PCM_PLUGIN_ENTRY</ref>(plugin) (<ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> **pcmp, const char *name,\
				  <ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *root, <ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *conf, \
				  <ref refid="group___p_c_m_1gac23b43ff55add78638e503b9cc892c24" kindref="member">snd_pcm_stream_t</ref> stream, int mode)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Define the plugin </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_external.h" line="53" column="9" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_external.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
