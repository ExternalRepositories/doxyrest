<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group___raw_midi" kind="group">
    <compoundname>RawMidi</compoundname>
    <title>RawMidi Interface</title>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group___raw_midi_1gac3d11365c928cdfd3176ffede3e6f8c5" prot="public" static="no">
        <name>snd_rawmidi_stream_t</name>
        <enumvalue id="group___raw_midi_1ggac3d11365c928cdfd3176ffede3e6f8c5a6a57199496cb5a0fa2c635c94fbd2d05" prot="public">
          <name>SND_RAWMIDI_STREAM_OUTPUT</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Output stream </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___raw_midi_1ggac3d11365c928cdfd3176ffede3e6f8c5a3707a884c8eec9b11bc2c30127d1c4c9" prot="public">
          <name>SND_RAWMIDI_STREAM_INPUT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Input stream </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___raw_midi_1ggac3d11365c928cdfd3176ffede3e6f8c5a16ddc56368d85eb702b35e1671dd8404" prot="public">
          <name>SND_RAWMIDI_STREAM_LAST</name>
          <initializer>= SND_RAWMIDI_STREAM_INPUT</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>RawMidi stream (direction) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="52" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" bodystart="52" bodyend="58"/>
      </memberdef>
      <memberdef kind="enum" id="group___raw_midi_1ga271ccd508f221ec7c99a27b150c657ba" prot="public" static="no">
        <name>snd_rawmidi_type_t</name>
        <enumvalue id="group___raw_midi_1gga271ccd508f221ec7c99a27b150c657baa77f1b4650305a5d52e686c9ee2768c9e" prot="public">
          <name>SND_RAWMIDI_TYPE_HW</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Kernel level RawMidi </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___raw_midi_1gga271ccd508f221ec7c99a27b150c657baa3f2311c1769989c17c5949ef01d4e233" prot="public">
          <name>SND_RAWMIDI_TYPE_SHM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Shared memory client RawMidi (not yet implemented) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___raw_midi_1gga271ccd508f221ec7c99a27b150c657baab2e654ca9c1a7bc4253bc5a2d97211bc" prot="public">
          <name>SND_RAWMIDI_TYPE_INET</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>INET client RawMidi (not yet implemented) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___raw_midi_1gga271ccd508f221ec7c99a27b150c657baae1144b9e6ffe7729d853705687bb3324" prot="public">
          <name>SND_RAWMIDI_TYPE_VIRTUAL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Virtual (sequencer) RawMidi </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>RawMidi type </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="71" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" bodystart="71" bodyend="80"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group___raw_midi_1gab0f0f325ab812941e9b81addf0b941d3" prot="public" static="no">
        <type>struct _snd_rawmidi_info</type>
        <definition>typedef struct _snd_rawmidi_info snd_rawmidi_info_t</definition>
        <argsstring></argsstring>
        <name>snd_rawmidi_info_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>RawMidi information container </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="1200" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___raw_midi_1ga98ad06bccfabc646530241d3a0eef5a1" prot="public" static="no">
        <type>struct _snd_rawmidi_params</type>
        <definition>typedef struct _snd_rawmidi_params snd_rawmidi_params_t</definition>
        <argsstring></argsstring>
        <name>snd_rawmidi_params_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>RawMidi settings container </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="1200" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___raw_midi_1ga10a44a41000ef7dfe61f712466237aff" prot="public" static="no">
        <type>struct _snd_rawmidi_status</type>
        <definition>typedef struct _snd_rawmidi_status snd_rawmidi_status_t</definition>
        <argsstring></argsstring>
        <name>snd_rawmidi_status_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>RawMidi status container </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="1200" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___raw_midi_1gaa21972df6ca3ebde0f7225b2472d0095" prot="public" static="no">
        <type>struct _snd_rawmidi</type>
        <definition>typedef struct _snd_rawmidi snd_rawmidi_t</definition>
        <argsstring></argsstring>
        <name>snd_rawmidi_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>RawMidi handle </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="1200" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___raw_midi_1ga2ab783051deeb7eb37eb568b76448889" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_rawmidi_open</definition>
        <argsstring>(snd_rawmidi_t **in_rmidi, snd_rawmidi_t **out_rmidi, const char *name, int mode)</argsstring>
        <name>snd_rawmidi_open</name>
        <param>
          <type><ref refid="group___raw_midi_1gaa21972df6ca3ebde0f7225b2472d0095" kindref="member">snd_rawmidi_t</ref> **</type>
          <declname>in_rmidi</declname>
          <defname>inputp</defname>
        </param>
        <param>
          <type><ref refid="group___raw_midi_1gaa21972df6ca3ebde0f7225b2472d0095" kindref="member">snd_rawmidi_t</ref> **</type>
          <declname>out_rmidi</declname>
          <defname>outputp</defname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Opens a new connection to the RawMidi interface. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputp</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned input handle (NULL if not wanted) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outputp</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned output handle (NULL if not wanted) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>ASCII identifier of the RawMidi handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Open mode </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code</para></simplesect>
Opens a new connection to the RawMidi interface specified with an ASCII identifier and mode. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="82" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="305" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1gaa7e3daf5cf4dd36b2534d2f1d6309477" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_rawmidi_open_lconf</definition>
        <argsstring>(snd_rawmidi_t **in_rmidi, snd_rawmidi_t **out_rmidi, const char *name, int mode, snd_config_t *lconf)</argsstring>
        <name>snd_rawmidi_open_lconf</name>
        <param>
          <type><ref refid="group___raw_midi_1gaa21972df6ca3ebde0f7225b2472d0095" kindref="member">snd_rawmidi_t</ref> **</type>
          <declname>in_rmidi</declname>
          <defname>inputp</defname>
        </param>
        <param>
          <type><ref refid="group___raw_midi_1gaa21972df6ca3ebde0f7225b2472d0095" kindref="member">snd_rawmidi_t</ref> **</type>
          <declname>out_rmidi</declname>
          <defname>outputp</defname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>lconf</declname>
        </param>
        <briefdescription>
<para>Opens a new connection to the RawMidi interface using local configuration. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputp</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned input handle (NULL if not wanted) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outputp</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned output handle (NULL if not wanted) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>ASCII identifier of the RawMidi handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Open mode </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lconf</parametername>
</parameternamelist>
<parameterdescription>
<para>Local configuration </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code</para></simplesect>
Opens a new connection to the RawMidi interface specified with an ASCII identifier and mode. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="84" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="332" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1gabc6bd5922151fb50196f62b9a4ab9f56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_rawmidi_close</definition>
        <argsstring>(snd_rawmidi_t *rmidi)</argsstring>
        <name>snd_rawmidi_close</name>
        <param>
          <type><ref refid="group___raw_midi_1gaa21972df6ca3ebde0f7225b2472d0095" kindref="member">snd_rawmidi_t</ref> *</type>
          <declname>rmidi</declname>
          <defname>rawmidi</defname>
        </param>
        <briefdescription>
<para>close RawMidi handle </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rawmidi</parametername>
</parameternamelist>
<parameterdescription>
<para>RawMidi handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code</para></simplesect>
Closes the specified RawMidi handle and frees all associated resources. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="86" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="347" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1ga39ac11df7e520e753b26ab4eceabe6de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_rawmidi_poll_descriptors_count</definition>
        <argsstring>(snd_rawmidi_t *rmidi)</argsstring>
        <name>snd_rawmidi_poll_descriptors_count</name>
        <param>
          <type><ref refid="group___raw_midi_1gaa21972df6ca3ebde0f7225b2472d0095" kindref="member">snd_rawmidi_t</ref> *</type>
          <declname>rmidi</declname>
          <defname>rawmidi</defname>
        </param>
        <briefdescription>
<para>get count of poll descriptors for RawMidi handle </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rawmidi</parametername>
</parameternamelist>
<parameterdescription>
<para>RawMidi handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>count of poll descriptors </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="87" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="404" bodyend="408"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1ga22fcc3fc5c62c9db88d79a0b91e3a75f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_rawmidi_poll_descriptors</definition>
        <argsstring>(snd_rawmidi_t *rmidi, struct pollfd *pfds, unsigned int space)</argsstring>
        <name>snd_rawmidi_poll_descriptors</name>
        <param>
          <type><ref refid="group___raw_midi_1gaa21972df6ca3ebde0f7225b2472d0095" kindref="member">snd_rawmidi_t</ref> *</type>
          <declname>rmidi</declname>
          <defname>rawmidi</defname>
        </param>
        <param>
          <type>struct pollfd *</type>
          <declname>pfds</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>space</declname>
        </param>
        <briefdescription>
<para>get poll descriptors </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rawmidi</parametername>
</parameternamelist>
<parameterdescription>
<para>RawMidi handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pfds</parametername>
</parameternamelist>
<parameterdescription>
<para>array of poll descriptors </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>space</parametername>
</parameternamelist>
<parameterdescription>
<para>space in the poll descriptor array </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>count of filled descriptors </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="88" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="417" bodyend="426"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1ga38f15766f77c0bb50fec6cdcd87254b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_rawmidi_poll_descriptors_revents</definition>
        <argsstring>(snd_rawmidi_t *rawmidi, struct pollfd *pfds, unsigned int nfds, unsigned short *revent)</argsstring>
        <name>snd_rawmidi_poll_descriptors_revents</name>
        <param>
          <type><ref refid="group___raw_midi_1gaa21972df6ca3ebde0f7225b2472d0095" kindref="member">snd_rawmidi_t</ref> *</type>
          <declname>rawmidi</declname>
        </param>
        <param>
          <type>struct pollfd *</type>
          <declname>pfds</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>nfds</declname>
        </param>
        <param>
          <type>unsigned short *</type>
          <declname>revent</declname>
          <defname>revents</defname>
        </param>
        <briefdescription>
<para>get returned events from poll descriptors </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rawmidi</parametername>
</parameternamelist>
<parameterdescription>
<para>rawmidi RawMidi handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pfds</parametername>
</parameternamelist>
<parameterdescription>
<para>array of poll descriptors </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nfds</parametername>
</parameternamelist>
<parameterdescription>
<para>count of poll descriptors </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>revents</parametername>
</parameternamelist>
<parameterdescription>
<para>returned events </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>zero if success, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="89" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="436" bodyend="444"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1gafe714a54fdb6083eb003bcc21da89553" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_rawmidi_nonblock</definition>
        <argsstring>(snd_rawmidi_t *rmidi, int nonblock)</argsstring>
        <name>snd_rawmidi_nonblock</name>
        <param>
          <type><ref refid="group___raw_midi_1gaa21972df6ca3ebde0f7225b2472d0095" kindref="member">snd_rawmidi_t</ref> *</type>
          <declname>rmidi</declname>
          <defname>rawmidi</defname>
        </param>
        <param>
          <type>int</type>
          <declname>nonblock</declname>
        </param>
        <briefdescription>
<para>set nonblock mode </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rawmidi</parametername>
</parameternamelist>
<parameterdescription>
<para>RawMidi handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nonblock</parametername>
</parameternamelist>
<parameterdescription>
<para>0 = block, 1 = nonblock mode </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code</para></simplesect>
The nonblock mode cannot be used when the stream is in <ref refid="group___raw_midi_1ga7060640f32abcd337239bde2c8749d23" kindref="member">SND_RAWMIDI_APPEND</ref> state. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="90" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="455" bodyend="467"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1ga383592eddf099559822357678fbe7d8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t snd_rawmidi_info_sizeof</definition>
        <argsstring>(void)</argsstring>
        <name>snd_rawmidi_info_sizeof</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>get size of the snd_rawmidi_info_t structure in bytes </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>size of the snd_rawmidi_info_t structure in bytes </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="91" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="473" bodyend="476"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1ga11f8d3832ec7ea7fd6e8445338704528" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_rawmidi_info_malloc</definition>
        <argsstring>(snd_rawmidi_info_t **ptr)</argsstring>
        <name>snd_rawmidi_info_malloc</name>
        <param>
          <type><ref refid="group___raw_midi_1gab0f0f325ab812941e9b81addf0b941d3" kindref="member">snd_rawmidi_info_t</ref> **</type>
          <declname>ptr</declname>
          <defname>info</defname>
        </param>
        <briefdescription>
<para>allocate a new snd_rawmidi_info_t structure </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>returned pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code if fails</para></simplesect>
Allocates a new snd_rawmidi_params_t structure using the standard malloc C library function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="97" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="486" bodyend="493"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1gaa84495bee993f34fb9bac33b5a9cf65f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_rawmidi_info_free</definition>
        <argsstring>(snd_rawmidi_info_t *obj)</argsstring>
        <name>snd_rawmidi_info_free</name>
        <param>
          <type><ref refid="group___raw_midi_1gab0f0f325ab812941e9b81addf0b941d3" kindref="member">snd_rawmidi_info_t</ref> *</type>
          <declname>obj</declname>
          <defname>info</defname>
        </param>
        <briefdescription>
<para>frees the snd_rawmidi_info_t structure </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the snd_rawmidi_info_t structure to free</para></parameterdescription>
</parameteritem>
</parameterlist>
Frees the given snd_rawmidi_params_t structure using the standard free C library function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="98" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="502" bodyend="506"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1gabfb769e2aaf0a6b8274b5e0c3e9141d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_rawmidi_info_copy</definition>
        <argsstring>(snd_rawmidi_info_t *dst, const snd_rawmidi_info_t *src)</argsstring>
        <name>snd_rawmidi_info_copy</name>
        <param>
          <type><ref refid="group___raw_midi_1gab0f0f325ab812941e9b81addf0b941d3" kindref="member">snd_rawmidi_info_t</ref> *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="group___raw_midi_1gab0f0f325ab812941e9b81addf0b941d3" kindref="member">snd_rawmidi_info_t</ref> *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>copy one snd_rawmidi_info_t structure to another </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>destination snd_rawmidi_info_t structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>source snd_rawmidi_info_t structure </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="99" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="513" bodyend="517"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1gacfb2e65475c314f5f1dde0c5d7a05a7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int snd_rawmidi_info_get_device</definition>
        <argsstring>(const snd_rawmidi_info_t *obj)</argsstring>
        <name>snd_rawmidi_info_get_device</name>
        <param>
          <type>const <ref refid="group___raw_midi_1gab0f0f325ab812941e9b81addf0b941d3" kindref="member">snd_rawmidi_info_t</ref> *</type>
          <declname>obj</declname>
          <defname>info</defname>
        </param>
        <briefdescription>
<para>get rawmidi device number </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_rawmidi_info_t structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>rawmidi device number </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="100" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="524" bodyend="528"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1ga3fea97d5bff26c54831e95b2200f857c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int snd_rawmidi_info_get_subdevice</definition>
        <argsstring>(const snd_rawmidi_info_t *obj)</argsstring>
        <name>snd_rawmidi_info_get_subdevice</name>
        <param>
          <type>const <ref refid="group___raw_midi_1gab0f0f325ab812941e9b81addf0b941d3" kindref="member">snd_rawmidi_info_t</ref> *</type>
          <declname>obj</declname>
          <defname>info</defname>
        </param>
        <briefdescription>
<para>get rawmidi subdevice number </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_rawmidi_info_t structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>rawmidi subdevice number </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="101" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="535" bodyend="539"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1ga760552af30a089ddacc3af79985e24f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___raw_midi_1gac3d11365c928cdfd3176ffede3e6f8c5" kindref="member">snd_rawmidi_stream_t</ref></type>
        <definition>snd_rawmidi_stream_t snd_rawmidi_info_get_stream</definition>
        <argsstring>(const snd_rawmidi_info_t *obj)</argsstring>
        <name>snd_rawmidi_info_get_stream</name>
        <param>
          <type>const <ref refid="group___raw_midi_1gab0f0f325ab812941e9b81addf0b941d3" kindref="member">snd_rawmidi_info_t</ref> *</type>
          <declname>obj</declname>
          <defname>info</defname>
        </param>
        <briefdescription>
<para>get rawmidi stream identification </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_rawmidi_info_t structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>rawmidi stream identification </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="102" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="546" bodyend="550"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1ga463916bd78a0ab5a96a053edca05a8d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_rawmidi_info_get_card</definition>
        <argsstring>(const snd_rawmidi_info_t *obj)</argsstring>
        <name>snd_rawmidi_info_get_card</name>
        <param>
          <type>const <ref refid="group___raw_midi_1gab0f0f325ab812941e9b81addf0b941d3" kindref="member">snd_rawmidi_info_t</ref> *</type>
          <declname>obj</declname>
          <defname>info</defname>
        </param>
        <briefdescription>
<para>get rawmidi card number </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_rawmidi_info_t structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>rawmidi card number </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="103" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="557" bodyend="561"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1gaf9ede5bbc9abc9124910c2612363de30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int snd_rawmidi_info_get_flags</definition>
        <argsstring>(const snd_rawmidi_info_t *obj)</argsstring>
        <name>snd_rawmidi_info_get_flags</name>
        <param>
          <type>const <ref refid="group___raw_midi_1gab0f0f325ab812941e9b81addf0b941d3" kindref="member">snd_rawmidi_info_t</ref> *</type>
          <declname>obj</declname>
          <defname>info</defname>
        </param>
        <briefdescription>
<para>get rawmidi flags </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_rawmidi_info_t structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>rawmidi flags </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="104" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="568" bodyend="572"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1gac7ac90e99759ee7b2dddd3613219c798" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* snd_rawmidi_info_get_id</definition>
        <argsstring>(const snd_rawmidi_info_t *obj)</argsstring>
        <name>snd_rawmidi_info_get_id</name>
        <param>
          <type>const <ref refid="group___raw_midi_1gab0f0f325ab812941e9b81addf0b941d3" kindref="member">snd_rawmidi_info_t</ref> *</type>
          <declname>obj</declname>
          <defname>info</defname>
        </param>
        <briefdescription>
<para>get rawmidi hardware driver identifier </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_rawmidi_info_t structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>rawmidi hardware driver identifier </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="105" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="579" bodyend="583"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1gafd809c976c1dab23957e338b5af2a353" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* snd_rawmidi_info_get_name</definition>
        <argsstring>(const snd_rawmidi_info_t *obj)</argsstring>
        <name>snd_rawmidi_info_get_name</name>
        <param>
          <type>const <ref refid="group___raw_midi_1gab0f0f325ab812941e9b81addf0b941d3" kindref="member">snd_rawmidi_info_t</ref> *</type>
          <declname>obj</declname>
          <defname>info</defname>
        </param>
        <briefdescription>
<para>get rawmidi hardware driver name </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_rawmidi_info_t structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>rawmidi hardware driver name </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="106" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="590" bodyend="594"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1ga428398f23118575aa4f62eed860132cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* snd_rawmidi_info_get_subdevice_name</definition>
        <argsstring>(const snd_rawmidi_info_t *obj)</argsstring>
        <name>snd_rawmidi_info_get_subdevice_name</name>
        <param>
          <type>const <ref refid="group___raw_midi_1gab0f0f325ab812941e9b81addf0b941d3" kindref="member">snd_rawmidi_info_t</ref> *</type>
          <declname>obj</declname>
          <defname>info</defname>
        </param>
        <briefdescription>
<para>get rawmidi subdevice name </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_rawmidi_info_t structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>rawmidi subdevice name </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="107" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="601" bodyend="605"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1gac0b33eb2f54cd6fc9b34002fe28ca9fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int snd_rawmidi_info_get_subdevices_count</definition>
        <argsstring>(const snd_rawmidi_info_t *obj)</argsstring>
        <name>snd_rawmidi_info_get_subdevices_count</name>
        <param>
          <type>const <ref refid="group___raw_midi_1gab0f0f325ab812941e9b81addf0b941d3" kindref="member">snd_rawmidi_info_t</ref> *</type>
          <declname>obj</declname>
          <defname>info</defname>
        </param>
        <briefdescription>
<para>get rawmidi count of subdevices </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_rawmidi_info_t structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>rawmidi count of subdevices </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="108" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="612" bodyend="616"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1ga71717ea1f35bf2a59548d3d106278336" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int snd_rawmidi_info_get_subdevices_avail</definition>
        <argsstring>(const snd_rawmidi_info_t *obj)</argsstring>
        <name>snd_rawmidi_info_get_subdevices_avail</name>
        <param>
          <type>const <ref refid="group___raw_midi_1gab0f0f325ab812941e9b81addf0b941d3" kindref="member">snd_rawmidi_info_t</ref> *</type>
          <declname>obj</declname>
          <defname>info</defname>
        </param>
        <briefdescription>
<para>get rawmidi available count of subdevices </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_rawmidi_info_t structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>rawmidi available count of subdevices </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="109" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="623" bodyend="627"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1ga98fcdcb94c12baf65dd0ec8f9d52ef59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_rawmidi_info_set_device</definition>
        <argsstring>(snd_rawmidi_info_t *obj, unsigned int val)</argsstring>
        <name>snd_rawmidi_info_set_device</name>
        <param>
          <type><ref refid="group___raw_midi_1gab0f0f325ab812941e9b81addf0b941d3" kindref="member">snd_rawmidi_info_t</ref> *</type>
          <declname>obj</declname>
          <defname>info</defname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>set rawmidi device number </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_rawmidi_info_t structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>device number </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="110" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="634" bodyend="638"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1ga49eff1cd1b62e0399826740863cdcce3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_rawmidi_info_set_subdevice</definition>
        <argsstring>(snd_rawmidi_info_t *obj, unsigned int val)</argsstring>
        <name>snd_rawmidi_info_set_subdevice</name>
        <param>
          <type><ref refid="group___raw_midi_1gab0f0f325ab812941e9b81addf0b941d3" kindref="member">snd_rawmidi_info_t</ref> *</type>
          <declname>obj</declname>
          <defname>info</defname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>set rawmidi subdevice number </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_rawmidi_info_t structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>subdevice number </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="111" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="645" bodyend="649"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1gad704ac98c8313235c73c23d374bf6831" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_rawmidi_info_set_stream</definition>
        <argsstring>(snd_rawmidi_info_t *obj, snd_rawmidi_stream_t val)</argsstring>
        <name>snd_rawmidi_info_set_stream</name>
        <param>
          <type><ref refid="group___raw_midi_1gab0f0f325ab812941e9b81addf0b941d3" kindref="member">snd_rawmidi_info_t</ref> *</type>
          <declname>obj</declname>
          <defname>info</defname>
        </param>
        <param>
          <type><ref refid="group___raw_midi_1gac3d11365c928cdfd3176ffede3e6f8c5" kindref="member">snd_rawmidi_stream_t</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>set rawmidi stream identifier </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_rawmidi_info_t structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>rawmidi stream identifier </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="112" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="656" bodyend="660"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1ga3c3595d2907ee30754f6a1d5ceb2d97f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_rawmidi_info</definition>
        <argsstring>(snd_rawmidi_t *rmidi, snd_rawmidi_info_t *info)</argsstring>
        <name>snd_rawmidi_info</name>
        <param>
          <type><ref refid="group___raw_midi_1gaa21972df6ca3ebde0f7225b2472d0095" kindref="member">snd_rawmidi_t</ref> *</type>
          <declname>rmidi</declname>
          <defname>rawmidi</defname>
        </param>
        <param>
          <type><ref refid="group___raw_midi_1gab0f0f325ab812941e9b81addf0b941d3" kindref="member">snd_rawmidi_info_t</ref> *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>get information about RawMidi handle </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rawmidi</parametername>
</parameternamelist>
<parameterdescription>
<para>RawMidi handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_rawmidi_info_t structure to be filled </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="113" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="668" bodyend="673"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1gaeb5767a318d349a4d2a100191c3cf8d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t snd_rawmidi_params_sizeof</definition>
        <argsstring>(void)</argsstring>
        <name>snd_rawmidi_params_sizeof</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>get size of the snd_rawmidi_params_t structure in bytes </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>size of the snd_rawmidi_params_t structure in bytes </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="114" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="679" bodyend="682"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1gaedc01312384764d02b6bc946cb1e79a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_rawmidi_params_malloc</definition>
        <argsstring>(snd_rawmidi_params_t **ptr)</argsstring>
        <name>snd_rawmidi_params_malloc</name>
        <param>
          <type><ref refid="group___raw_midi_1ga98ad06bccfabc646530241d3a0eef5a1" kindref="member">snd_rawmidi_params_t</ref> **</type>
          <declname>ptr</declname>
          <defname>params</defname>
        </param>
        <briefdescription>
<para>allocate the snd_rawmidi_params_t structure </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>returned pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code if fails</para></simplesect>
Allocates a new snd_rawmidi_params_t structure using the standard malloc C library function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="120" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="692" bodyend="699"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1gad8c735ed6a8533655dabd7318f25a6fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_rawmidi_params_free</definition>
        <argsstring>(snd_rawmidi_params_t *obj)</argsstring>
        <name>snd_rawmidi_params_free</name>
        <param>
          <type><ref refid="group___raw_midi_1ga98ad06bccfabc646530241d3a0eef5a1" kindref="member">snd_rawmidi_params_t</ref> *</type>
          <declname>obj</declname>
          <defname>params</defname>
        </param>
        <briefdescription>
<para>frees the snd_rawmidi_params_t structure </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the <ref refid="group___raw_midi_1ga98ad06bccfabc646530241d3a0eef5a1" kindref="member">snd_rawmidi_params_t</ref> structure to free</para></parameterdescription>
</parameteritem>
</parameterlist>
Frees the given snd_rawmidi_params_t structure using the standard free C library function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="121" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="708" bodyend="712"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1ga533710a31f6b6b4f6791baa27e69089f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_rawmidi_params_copy</definition>
        <argsstring>(snd_rawmidi_params_t *dst, const snd_rawmidi_params_t *src)</argsstring>
        <name>snd_rawmidi_params_copy</name>
        <param>
          <type><ref refid="group___raw_midi_1ga98ad06bccfabc646530241d3a0eef5a1" kindref="member">snd_rawmidi_params_t</ref> *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="group___raw_midi_1ga98ad06bccfabc646530241d3a0eef5a1" kindref="member">snd_rawmidi_params_t</ref> *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>copy one snd_rawmidi_params_t structure to another </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>destination snd_rawmidi_params_t structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>source snd_rawmidi_params_t structure </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="122" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="719" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1ga612c96757e2f81fda5b6cd6dec826de1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_rawmidi_params_set_buffer_size</definition>
        <argsstring>(snd_rawmidi_t *rmidi, snd_rawmidi_params_t *params, size_t val)</argsstring>
        <name>snd_rawmidi_params_set_buffer_size</name>
        <param>
          <type><ref refid="group___raw_midi_1gaa21972df6ca3ebde0f7225b2472d0095" kindref="member">snd_rawmidi_t</ref> *</type>
          <declname>rmidi</declname>
          <defname>rawmidi</defname>
        </param>
        <param>
          <type><ref refid="group___raw_midi_1ga98ad06bccfabc646530241d3a0eef5a1" kindref="member">snd_rawmidi_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>set rawmidi I/O ring buffer size </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rawmidi</parametername>
</parameternamelist>
<parameterdescription>
<para>RawMidi handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_rawmidi_params_t structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>size in bytes </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="123" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="735" bodyend="742"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1ga0bd9629686062562b88bfd2a3eadc1bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t snd_rawmidi_params_get_buffer_size</definition>
        <argsstring>(const snd_rawmidi_params_t *params)</argsstring>
        <name>snd_rawmidi_params_get_buffer_size</name>
        <param>
          <type>const <ref refid="group___raw_midi_1ga98ad06bccfabc646530241d3a0eef5a1" kindref="member">snd_rawmidi_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>get rawmidi I/O ring buffer size </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_rawmidi_params_t structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>size of rawmidi I/O ring buffer in bytes </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="124" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="749" bodyend="753"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1ga89782681ce86b3d5cbebb5136d25439f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_rawmidi_params_set_avail_min</definition>
        <argsstring>(snd_rawmidi_t *rmidi, snd_rawmidi_params_t *params, size_t val)</argsstring>
        <name>snd_rawmidi_params_set_avail_min</name>
        <param>
          <type><ref refid="group___raw_midi_1gaa21972df6ca3ebde0f7225b2472d0095" kindref="member">snd_rawmidi_t</ref> *</type>
          <declname>rmidi</declname>
          <defname>rawmidi</defname>
        </param>
        <param>
          <type><ref refid="group___raw_midi_1ga98ad06bccfabc646530241d3a0eef5a1" kindref="member">snd_rawmidi_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>set minimum available bytes in rawmidi I/O ring buffer for wakeup </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rawmidi</parametername>
</parameternamelist>
<parameterdescription>
<para>RawMidi handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_rawmidi_params_t structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>desired value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="125" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="764" bodyend="771"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1gae629f2ef814eda39dc081dff65bf7d20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t snd_rawmidi_params_get_avail_min</definition>
        <argsstring>(const snd_rawmidi_params_t *params)</argsstring>
        <name>snd_rawmidi_params_get_avail_min</name>
        <param>
          <type>const <ref refid="group___raw_midi_1ga98ad06bccfabc646530241d3a0eef5a1" kindref="member">snd_rawmidi_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>get minimum available bytes in rawmidi I/O ring buffer for wakeup </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to snd_rawmidi_params_t structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>minimum available bytes </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="126" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="778" bodyend="782"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1gab717719be70fe4396dc84f3f895d6e12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_rawmidi_params_set_no_active_sensing</definition>
        <argsstring>(snd_rawmidi_t *rmidi, snd_rawmidi_params_t *params, int val)</argsstring>
        <name>snd_rawmidi_params_set_no_active_sensing</name>
        <param>
          <type><ref refid="group___raw_midi_1gaa21972df6ca3ebde0f7225b2472d0095" kindref="member">snd_rawmidi_t</ref> *</type>
          <declname>rmidi</declname>
          <defname>rawmidi</defname>
        </param>
        <param>
          <type><ref refid="group___raw_midi_1ga98ad06bccfabc646530241d3a0eef5a1" kindref="member">snd_rawmidi_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>set no-active-sensing action on <ref refid="group___raw_midi_1gabc6bd5922151fb50196f62b9a4ab9f56" kindref="member">snd_rawmidi_close()</ref> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rawmidi</parametername>
</parameternamelist>
<parameterdescription>
<para>RawMidi handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to snd_rawmidi_params_t structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>value: 0 = enable to send the active sensing message, 1 = disable </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="127" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="794" bodyend="800"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1ga6a057d467faa2b65ddace364fde985fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_rawmidi_params_get_no_active_sensing</definition>
        <argsstring>(const snd_rawmidi_params_t *params)</argsstring>
        <name>snd_rawmidi_params_get_no_active_sensing</name>
        <param>
          <type>const <ref refid="group___raw_midi_1ga98ad06bccfabc646530241d3a0eef5a1" kindref="member">snd_rawmidi_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>get no-active-sensing action status </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to snd_rawmidi_params_t structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the current status (0 = enable, 1 = disable the active sensing message) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="128" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="807" bodyend="811"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1ga458d8ad22277645d9b65fa47c011465c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_rawmidi_params</definition>
        <argsstring>(snd_rawmidi_t *rmidi, snd_rawmidi_params_t *params)</argsstring>
        <name>snd_rawmidi_params</name>
        <param>
          <type><ref refid="group___raw_midi_1gaa21972df6ca3ebde0f7225b2472d0095" kindref="member">snd_rawmidi_t</ref> *</type>
          <declname>rmidi</declname>
          <defname>rawmidi</defname>
        </param>
        <param>
          <type><ref refid="group___raw_midi_1ga98ad06bccfabc646530241d3a0eef5a1" kindref="member">snd_rawmidi_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>set parameters about rawmidi stream </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rawmidi</parametername>
</parameternamelist>
<parameterdescription>
<para>RawMidi handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_rawmidi_params_t structure to be filled </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="129" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="819" bodyend="831"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1ga86eabf81acd7c43fc100c67fbda5085d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_rawmidi_params_current</definition>
        <argsstring>(snd_rawmidi_t *rmidi, snd_rawmidi_params_t *params)</argsstring>
        <name>snd_rawmidi_params_current</name>
        <param>
          <type><ref refid="group___raw_midi_1gaa21972df6ca3ebde0f7225b2472d0095" kindref="member">snd_rawmidi_t</ref> *</type>
          <declname>rmidi</declname>
          <defname>rawmidi</defname>
        </param>
        <param>
          <type><ref refid="group___raw_midi_1ga98ad06bccfabc646530241d3a0eef5a1" kindref="member">snd_rawmidi_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>get current parameters about rawmidi stream </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rawmidi</parametername>
</parameternamelist>
<parameterdescription>
<para>RawMidi handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_rawmidi_params_t structure to be filled </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="130" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="839" bodyend="847"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1ga7933bdb7eea04815be0bba98261865e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t snd_rawmidi_status_sizeof</definition>
        <argsstring>(void)</argsstring>
        <name>snd_rawmidi_status_sizeof</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>get size of the snd_rawmidi_status_t structure in bytes </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>size of the snd_rawmidi_status_t structure in bytes </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="131" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="853" bodyend="856"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1gac1035208bbdf81852dbcf2e14ce4a8dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_rawmidi_status_malloc</definition>
        <argsstring>(snd_rawmidi_status_t **ptr)</argsstring>
        <name>snd_rawmidi_status_malloc</name>
        <param>
          <type><ref refid="group___raw_midi_1ga10a44a41000ef7dfe61f712466237aff" kindref="member">snd_rawmidi_status_t</ref> **</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>allocate the snd_rawmidi_status_t structure </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>returned pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code if fails</para></simplesect>
Allocates a new snd_rawmidi_status_t structure using the standard malloc C library function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="137" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="866" bodyend="873"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1gac9852f68911bbb8aef21d2e20c3ff2c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_rawmidi_status_free</definition>
        <argsstring>(snd_rawmidi_status_t *obj)</argsstring>
        <name>snd_rawmidi_status_free</name>
        <param>
          <type><ref refid="group___raw_midi_1ga10a44a41000ef7dfe61f712466237aff" kindref="member">snd_rawmidi_status_t</ref> *</type>
          <declname>obj</declname>
          <defname>status</defname>
        </param>
        <briefdescription>
<para>frees the snd_rawmidi_status_t structure </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the snd_rawmidi_status_t structure to free</para></parameterdescription>
</parameteritem>
</parameterlist>
Frees the given snd_rawmidi_status_t structure using the standard free C library function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="138" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="882" bodyend="886"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1gab62e8a4ca0033166f906a969048d935c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_rawmidi_status_copy</definition>
        <argsstring>(snd_rawmidi_status_t *dst, const snd_rawmidi_status_t *src)</argsstring>
        <name>snd_rawmidi_status_copy</name>
        <param>
          <type><ref refid="group___raw_midi_1ga10a44a41000ef7dfe61f712466237aff" kindref="member">snd_rawmidi_status_t</ref> *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="group___raw_midi_1ga10a44a41000ef7dfe61f712466237aff" kindref="member">snd_rawmidi_status_t</ref> *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>copy one snd_rawmidi_status_t structure to another </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>destination snd_rawmidi_status_t structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>source snd_rawmidi_status_t structure </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="139" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="893" bodyend="897"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1gaeb867dbf1d4d5fb3bdcad36a86565837" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_rawmidi_status_get_tstamp</definition>
        <argsstring>(const snd_rawmidi_status_t *obj, snd_htimestamp_t *ptr)</argsstring>
        <name>snd_rawmidi_status_get_tstamp</name>
        <param>
          <type>const <ref refid="group___raw_midi_1ga10a44a41000ef7dfe61f712466237aff" kindref="member">snd_rawmidi_status_t</ref> *</type>
          <declname>obj</declname>
          <defname>status</defname>
        </param>
        <param>
          <type><ref refid="group___global_1ga3a3f5b65c40f498cdbc26944bd9855cf" kindref="member">snd_htimestamp_t</ref> *</type>
          <declname>ptr</declname>
          <defname>tstamp</defname>
        </param>
        <briefdescription>
<para>get the start timestamp </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_rawmidi_status_t structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tstamp</parametername>
</parameternamelist>
<parameterdescription>
<para>returned timestamp value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="140" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="904" bodyend="908"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1ga7ff63a2376b2df549698296d37b532ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t snd_rawmidi_status_get_avail</definition>
        <argsstring>(const snd_rawmidi_status_t *obj)</argsstring>
        <name>snd_rawmidi_status_get_avail</name>
        <param>
          <type>const <ref refid="group___raw_midi_1ga10a44a41000ef7dfe61f712466237aff" kindref="member">snd_rawmidi_status_t</ref> *</type>
          <declname>obj</declname>
          <defname>status</defname>
        </param>
        <briefdescription>
<para>get current available bytes in the rawmidi I/O ring buffer </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_rawmidi_status_t structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>current available bytes in the rawmidi I/O ring buffer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="141" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="915" bodyend="919"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1gae4f69ac10574cfc2cd5c848628e75f9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t snd_rawmidi_status_get_xruns</definition>
        <argsstring>(const snd_rawmidi_status_t *obj)</argsstring>
        <name>snd_rawmidi_status_get_xruns</name>
        <param>
          <type>const <ref refid="group___raw_midi_1ga10a44a41000ef7dfe61f712466237aff" kindref="member">snd_rawmidi_status_t</ref> *</type>
          <declname>obj</declname>
          <defname>status</defname>
        </param>
        <briefdescription>
<para>get count of xruns </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_rawmidi_status_t structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>count of xruns </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="142" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="926" bodyend="930"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1gab888bce923769882931f77603327231d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_rawmidi_status</definition>
        <argsstring>(snd_rawmidi_t *rmidi, snd_rawmidi_status_t *status)</argsstring>
        <name>snd_rawmidi_status</name>
        <param>
          <type><ref refid="group___raw_midi_1gaa21972df6ca3ebde0f7225b2472d0095" kindref="member">snd_rawmidi_t</ref> *</type>
          <declname>rmidi</declname>
          <defname>rawmidi</defname>
        </param>
        <param>
          <type><ref refid="group___raw_midi_1ga10a44a41000ef7dfe61f712466237aff" kindref="member">snd_rawmidi_status_t</ref> *</type>
          <declname>status</declname>
        </param>
        <briefdescription>
<para>get status of rawmidi stream </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rawmidi</parametername>
</parameternamelist>
<parameterdescription>
<para>RawMidi handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_rawmidi_status_t structure to be filled </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="143" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="938" bodyend="943"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1gabfff7417ec957b7ee07882f91d73d7be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_rawmidi_drain</definition>
        <argsstring>(snd_rawmidi_t *rmidi)</argsstring>
        <name>snd_rawmidi_drain</name>
        <param>
          <type><ref refid="group___raw_midi_1gaa21972df6ca3ebde0f7225b2472d0095" kindref="member">snd_rawmidi_t</ref> *</type>
          <declname>rmidi</declname>
          <defname>rawmidi</defname>
        </param>
        <briefdescription>
<para>drain all bytes in the rawmidi I/O ring buffer </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rawmidi</parametername>
</parameternamelist>
<parameterdescription>
<para>RawMidi handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code</para></simplesect>
Waits until all MIDI bytes are not drained (sent) to the hardware device. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="144" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="964" bodyend="968"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1ga01076c87d169cf77334d35bd094abd0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_rawmidi_drop</definition>
        <argsstring>(snd_rawmidi_t *rmidi)</argsstring>
        <name>snd_rawmidi_drop</name>
        <param>
          <type><ref refid="group___raw_midi_1gaa21972df6ca3ebde0f7225b2472d0095" kindref="member">snd_rawmidi_t</ref> *</type>
          <declname>rmidi</declname>
          <defname>rawmidi</defname>
        </param>
        <briefdescription>
<para>drop all bytes in the rawmidi I/O ring buffer immediately </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rawmidi</parametername>
</parameternamelist>
<parameterdescription>
<para>RawMidi handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="145" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="950" bodyend="954"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1ga0a30e482efec57f4ea74c533a0f9b134" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssize_t</type>
        <definition>ssize_t snd_rawmidi_write</definition>
        <argsstring>(snd_rawmidi_t *rmidi, const void *buffer, size_t size)</argsstring>
        <name>snd_rawmidi_write</name>
        <param>
          <type><ref refid="group___raw_midi_1gaa21972df6ca3ebde0f7225b2472d0095" kindref="member">snd_rawmidi_t</ref> *</type>
          <declname>rmidi</declname>
          <defname>rawmidi</defname>
        </param>
        <param>
          <type>const void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>write MIDI bytes to MIDI stream </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rawmidi</parametername>
</parameternamelist>
<parameterdescription>
<para>RawMidi handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer containing MIDI bytes </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>output buffer size in bytes </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="146" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="976" bodyend="982"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1ga9b0952fc04facda83cdf1521325ca475" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssize_t</type>
        <definition>ssize_t snd_rawmidi_read</definition>
        <argsstring>(snd_rawmidi_t *rmidi, void *buffer, size_t size)</argsstring>
        <name>snd_rawmidi_read</name>
        <param>
          <type><ref refid="group___raw_midi_1gaa21972df6ca3ebde0f7225b2472d0095" kindref="member">snd_rawmidi_t</ref> *</type>
          <declname>rmidi</declname>
          <defname>rawmidi</defname>
        </param>
        <param>
          <type>void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>read MIDI bytes from MIDI stream </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rawmidi</parametername>
</parameternamelist>
<parameterdescription>
<para>RawMidi handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer to store the input MIDI bytes </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>input buffer size in bytes </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="147" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="990" bodyend="996"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1gaa4bf6540f3f36c5878d31abd34a341d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* snd_rawmidi_name</definition>
        <argsstring>(snd_rawmidi_t *rmidi)</argsstring>
        <name>snd_rawmidi_name</name>
        <param>
          <type><ref refid="group___raw_midi_1gaa21972df6ca3ebde0f7225b2472d0095" kindref="member">snd_rawmidi_t</ref> *</type>
          <declname>rmidi</declname>
          <defname>rawmidi</defname>
        </param>
        <briefdescription>
<para>get identifier of RawMidi handle </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rawmidi</parametername>
</parameternamelist>
<parameterdescription>
<para>a RawMidi handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ascii identifier of RawMidi handle</para></simplesect>
Returns the ASCII identifier of given RawMidi handle. It&apos;s the same identifier specified in <ref refid="group___raw_midi_1ga2ab783051deeb7eb37eb568b76448889" kindref="member">snd_rawmidi_open()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="148" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="367" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1ga5984e0c61995c8184a0e6e0a68a6faaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___raw_midi_1ga271ccd508f221ec7c99a27b150c657ba" kindref="member">snd_rawmidi_type_t</ref></type>
        <definition>snd_rawmidi_type_t snd_rawmidi_type</definition>
        <argsstring>(snd_rawmidi_t *rmidi)</argsstring>
        <name>snd_rawmidi_type</name>
        <param>
          <type><ref refid="group___raw_midi_1gaa21972df6ca3ebde0f7225b2472d0095" kindref="member">snd_rawmidi_t</ref> *</type>
          <declname>rmidi</declname>
          <defname>rawmidi</defname>
        </param>
        <briefdescription>
<para>get type of RawMidi handle </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rawmidi</parametername>
</parameternamelist>
<parameterdescription>
<para>a RawMidi handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>type of RawMidi handle</para></simplesect>
Returns the type <ref refid="group___raw_midi_1ga271ccd508f221ec7c99a27b150c657ba" kindref="member">snd_rawmidi_type_t</ref> of given RawMidi handle. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="149" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="380" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1ga295d2f3ce9e992919f205b929fcb83ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___raw_midi_1gac3d11365c928cdfd3176ffede3e6f8c5" kindref="member">snd_rawmidi_stream_t</ref></type>
        <definition>snd_rawmidi_stream_t snd_rawmidi_stream</definition>
        <argsstring>(snd_rawmidi_t *rawmidi)</argsstring>
        <name>snd_rawmidi_stream</name>
        <param>
          <type><ref refid="group___raw_midi_1gaa21972df6ca3ebde0f7225b2472d0095" kindref="member">snd_rawmidi_t</ref> *</type>
          <declname>rawmidi</declname>
        </param>
        <briefdescription>
<para>get stream (direction) of RawMidi handle </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rawmidi</parametername>
</parameternamelist>
<parameterdescription>
<para>a RawMidi handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>stream of RawMidi handle</para></simplesect>
Returns the stream <ref refid="group___raw_midi_1gac3d11365c928cdfd3176ffede3e6f8c5" kindref="member">snd_rawmidi_stream_t</ref> of given RawMidi handle. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="150" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="393" bodyend="397"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___raw_midi_1ga2b1694b5b3e98514d6b2bc5b824e9adc" prot="public" static="no">
        <name>SND_RAWMIDI_DLSYM_VERSION</name>
        <initializer>_dlsym_rawmidi_001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>dlsym version for interface entry callback </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="42" column="9" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___raw_midi_1ga7060640f32abcd337239bde2c8749d23" prot="public" static="no">
        <name>SND_RAWMIDI_APPEND</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Append (flag to open mode) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="61" column="9" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___raw_midi_1ga31ee35659c82272382ccc3014c8a73f8" prot="public" static="no">
        <name>SND_RAWMIDI_NONBLOCK</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Non blocking mode (flag to open mode) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="63" column="9" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___raw_midi_1gab1a659b38e5174d790d5671739995894" prot="public" static="no">
        <name>SND_RAWMIDI_SYNC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write sync mode (Flag to open mode) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="65" column="9" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___raw_midi_1gaaa4c7257d03c396293cffaef02818c35" prot="public" static="no">
        <name>snd_rawmidi_info_alloca</name>
        <param><defname>ptr</defname></param>
        <briefdescription>
<para>allocate an invalid <ref refid="group___raw_midi_1gab0f0f325ab812941e9b81addf0b941d3" kindref="member">snd_rawmidi_info_t</ref> using standard alloca </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>returned pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="96" column="9" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___raw_midi_1ga0a7ab61af3880409ccd9adee0e756210" prot="public" static="no">
        <name>snd_rawmidi_params_alloca</name>
        <param><defname>ptr</defname></param>
        <briefdescription>
<para>allocate an invalid <ref refid="group___raw_midi_1ga98ad06bccfabc646530241d3a0eef5a1" kindref="member">snd_rawmidi_params_t</ref> using standard alloca </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>returned pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="119" column="9" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___raw_midi_1gaa83c6963d341b0c067764dd1ba2c3d76" prot="public" static="no">
        <name>snd_rawmidi_status_alloca</name>
        <param><defname>ptr</defname></param>
        <briefdescription>
<para>allocate an invalid <ref refid="group___raw_midi_1ga10a44a41000ef7dfe61f712466237aff" kindref="member">snd_rawmidi_status_t</ref> using standard alloca </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>returned pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" line="136" column="9" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/rawmidi.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The RawMidi Interface. See <ref refid="rawmidi" kindref="compound">RawMidi interface</ref> page for more details. </para>    </detaileddescription>
  </compounddef>
</doxygen>
