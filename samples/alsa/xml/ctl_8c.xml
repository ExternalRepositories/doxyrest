<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="ctl_8c" kind="file" language="C++">
    <compoundname>ctl.c</compoundname>
    <includes local="yes">list.h</includes>
    <includes local="yes">tplg_local.h</includes>
    <incdepgraph>
      <node id="765">
        <label>list.h</label>
      </node>
      <node id="766">
        <label>tplg_local.h</label>
      </node>
      <node id="764">
        <label>/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ctl.c</label>
        <link refid="ctl_8c"/>
        <childnode refid="765" relation="include">
        </childnode>
        <childnode refid="766" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structctl__access__elem" prot="public">ctl_access_elem</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="ctl_8c_1a99328c56613c7b3fbc4e1f40c8d4a1dc" prot="public" static="no">
        <name>ENUM_VAL_SIZE</name>
        <initializer>(SNDRV_CTL_ELEM_ID_NAME_MAXLEN &gt;&gt; 2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ctl.c" line="22" column="9" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ctl.c" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="ctl_8c_1ad0b8768d780f41f277c00b3a3376a215" prot="public" static="yes" mutable="no">
        <type>const struct <ref refid="structctl__access__elem" kindref="compound">ctl_access_elem</ref></type>
        <definition>const struct ctl_access_elem ctl_access[]</definition>
        <argsstring>[]</argsstring>
        <name>ctl_access</name>
        <initializer>= {
	{&quot;read&quot;, SNDRV_CTL_ELEM_ACCESS_READ},
	{&quot;write&quot;, SNDRV_CTL_ELEM_ACCESS_WRITE},
	{&quot;read_write&quot;, SNDRV_CTL_ELEM_ACCESS_READWRITE},
	{&quot;volatile&quot;, SNDRV_CTL_ELEM_ACCESS_VOLATILE},
	{&quot;timestamp&quot;, SNDRV_CTL_ELEM_ACCESS_TIMESTAMP},
	{&quot;tlv_read&quot;, SNDRV_CTL_ELEM_ACCESS_TLV_READ},
	{&quot;tlv_write&quot;, SNDRV_CTL_ELEM_ACCESS_TLV_WRITE},
	{&quot;tlv_read_write&quot;, SNDRV_CTL_ELEM_ACCESS_TLV_READWRITE},
	{&quot;tlv_command&quot;, SNDRV_CTL_ELEM_ACCESS_TLV_COMMAND},
	{&quot;inactive&quot;, SNDRV_CTL_ELEM_ACCESS_INACTIVE},
	{&quot;lock&quot;, SNDRV_CTL_ELEM_ACCESS_LOCK},
	{&quot;owner&quot;, SNDRV_CTL_ELEM_ACCESS_OWNER},
	{&quot;tlv_callback&quot;, SNDRV_CTL_ELEM_ACCESS_TLV_CALLBACK},
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ctl.c" line="76" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ctl.c" bodystart="30" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="ctl_8c_1abecf8c1beef7b3fba7b3e126ac1b31cb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int parse_access_values</definition>
        <argsstring>(snd_config_t *cfg, struct snd_soc_tplg_ctl_hdr *hdr)</argsstring>
        <name>parse_access_values</name>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>struct snd_soc_tplg_ctl_hdr *</type>
          <declname>hdr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ctl.c" line="47" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ctl.c" bodystart="47" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="ctl_8c_1a93b07728013e370904351fa9b0ce5f9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int parse_access</definition>
        <argsstring>(snd_config_t *cfg, struct snd_soc_tplg_ctl_hdr *hdr)</argsstring>
        <name>parse_access</name>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>struct snd_soc_tplg_ctl_hdr *</type>
          <declname>hdr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ctl.c" line="78" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ctl.c" bodystart="78" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="ctl_8c_1a5a3c04745d22df43b599c88ab7cd8005" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int copy_tlv</definition>
        <argsstring>(struct tplg_elem *elem, struct tplg_elem *ref)</argsstring>
        <name>copy_tlv</name>
        <param>
          <type>struct tplg_elem *</type>
          <declname>elem</declname>
        </param>
        <param>
          <type>struct tplg_elem *</type>
          <declname>ref</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ctl.c" line="106" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ctl.c" bodystart="106" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="ctl_8c_1a05ecce080d80a5f524592388a8e1b4b7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int tplg_build_mixer_control</definition>
        <argsstring>(snd_tplg_t *tplg, struct tplg_elem *elem)</argsstring>
        <name>tplg_build_mixer_control</name>
        <param>
          <type><ref refid="group__topology_1ga85fcf522a65a5da8f57d83eec2eea98e" kindref="member">snd_tplg_t</ref> *</type>
          <declname>tplg</declname>
        </param>
        <param>
          <type>struct tplg_elem *</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ctl.c" line="119" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ctl.c" bodystart="119" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="ctl_8c_1a1b5a1043daf6aa8b36e24d62bc21517c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void copy_enum_texts</definition>
        <argsstring>(struct tplg_elem *enum_elem, struct tplg_elem *ref_elem)</argsstring>
        <name>copy_enum_texts</name>
        <param>
          <type>struct tplg_elem *</type>
          <declname>enum_elem</declname>
        </param>
        <param>
          <type>struct tplg_elem *</type>
          <declname>ref_elem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ctl.c" line="158" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ctl.c" bodystart="158" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="ctl_8c_1aa0ad84da64f6f1d4774962b5d2abe065" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int tplg_build_enum_control</definition>
        <argsstring>(snd_tplg_t *tplg, struct tplg_elem *elem)</argsstring>
        <name>tplg_build_enum_control</name>
        <param>
          <type><ref refid="group__topology_1ga85fcf522a65a5da8f57d83eec2eea98e" kindref="member">snd_tplg_t</ref> *</type>
          <declname>tplg</declname>
        </param>
        <param>
          <type>struct tplg_elem *</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ctl.c" line="170" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ctl.c" bodystart="170" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="ctl_8c_1a191f723fb1e8c5496b6fb92313ef601d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int tplg_build_bytes_control</definition>
        <argsstring>(snd_tplg_t *tplg, struct tplg_elem *elem)</argsstring>
        <name>tplg_build_bytes_control</name>
        <param>
          <type><ref refid="group__topology_1ga85fcf522a65a5da8f57d83eec2eea98e" kindref="member">snd_tplg_t</ref> *</type>
          <declname>tplg</declname>
        </param>
        <param>
          <type>struct tplg_elem *</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ctl.c" line="208" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ctl.c" bodystart="208" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="ctl_8c_1a282c4390f204dd2d83e666997da5f29b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tplg_build_controls</definition>
        <argsstring>(snd_tplg_t *tplg)</argsstring>
        <name>tplg_build_controls</name>
        <param>
          <type><ref refid="group__topology_1ga85fcf522a65a5da8f57d83eec2eea98e" kindref="member">snd_tplg_t</ref> *</type>
          <declname>tplg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ctl.c" line="232" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ctl.c" bodystart="232" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="ctl_8c_1a12bfe68db56b8fff6693c06d8231b4f4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int tplg_parse_tlv_dbscale</definition>
        <argsstring>(snd_config_t *cfg, struct tplg_elem *elem)</argsstring>
        <name>tplg_parse_tlv_dbscale</name>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>struct tplg_elem *</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ctl.c" line="283" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ctl.c" bodystart="283" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="ctl_8c_1a9dad68203367d0b90105dae07ba24b44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tplg_parse_tlv</definition>
        <argsstring>(snd_tplg_t *tplg, snd_config_t *cfg, void *private)</argsstring>
        <name>tplg_parse_tlv</name>
        <param>
          <type><ref refid="group__topology_1ga85fcf522a65a5da8f57d83eec2eea98e" kindref="member">snd_tplg_t</ref> *</type>
          <declname>tplg</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>private</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ctl.c" line="333" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ctl.c" bodystart="333" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="ctl_8c_1a19e45914b768489c0c23dda576cf9b40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tplg_parse_control_bytes</definition>
        <argsstring>(snd_tplg_t *tplg, snd_config_t *cfg, void *private)</argsstring>
        <name>tplg_parse_control_bytes</name>
        <param>
          <type><ref refid="group__topology_1ga85fcf522a65a5da8f57d83eec2eea98e" kindref="member">snd_tplg_t</ref> *</type>
          <declname>tplg</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>private</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ctl.c" line="366" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ctl.c" bodystart="366" bodyend="498"/>
      </memberdef>
      <memberdef kind="function" id="ctl_8c_1a4e48cab331c476dae492b3bc0892a43a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tplg_parse_control_enum</definition>
        <argsstring>(snd_tplg_t *tplg, snd_config_t *cfg, void *private)</argsstring>
        <name>tplg_parse_control_enum</name>
        <param>
          <type><ref refid="group__topology_1ga85fcf522a65a5da8f57d83eec2eea98e" kindref="member">snd_tplg_t</ref> *</type>
          <declname>tplg</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>private</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ctl.c" line="501" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ctl.c" bodystart="501" bodyend="604"/>
      </memberdef>
      <memberdef kind="function" id="ctl_8c_1a916bb1b499836c2c24e9592c7c312039" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tplg_parse_control_mixer</definition>
        <argsstring>(snd_tplg_t *tplg, snd_config_t *cfg, void *private)</argsstring>
        <name>tplg_parse_control_mixer</name>
        <param>
          <type><ref refid="group__topology_1ga85fcf522a65a5da8f57d83eec2eea98e" kindref="member">snd_tplg_t</ref> *</type>
          <declname>tplg</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>private</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ctl.c" line="610" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ctl.c" bodystart="610" bodyend="743"/>
      </memberdef>
      <memberdef kind="function" id="ctl_8c_1a564288c4dc158beb381185e37596ab23" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int init_ctl_hdr</definition>
        <argsstring>(struct snd_soc_tplg_ctl_hdr *hdr, struct snd_tplg_ctl_template *t)</argsstring>
        <name>init_ctl_hdr</name>
        <param>
          <type>struct snd_soc_tplg_ctl_hdr *</type>
          <declname>hdr</declname>
        </param>
        <param>
          <type>struct <ref refid="structsnd__tplg__ctl__template" kindref="compound">snd_tplg_ctl_template</ref> *</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ctl.c" line="745" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ctl.c" bodystart="745" bodyend="804"/>
      </memberdef>
      <memberdef kind="function" id="ctl_8c_1a47a6be0847bbbf44f0dab85ecc507cae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tplg_add_mixer</definition>
        <argsstring>(snd_tplg_t *tplg, struct snd_tplg_mixer_template *mixer, struct tplg_elem **e)</argsstring>
        <name>tplg_add_mixer</name>
        <param>
          <type><ref refid="group__topology_1ga85fcf522a65a5da8f57d83eec2eea98e" kindref="member">snd_tplg_t</ref> *</type>
          <declname>tplg</declname>
        </param>
        <param>
          <type>struct <ref refid="structsnd__tplg__mixer__template" kindref="compound">snd_tplg_mixer_template</ref> *</type>
          <declname>mixer</declname>
        </param>
        <param>
          <type>struct tplg_elem **</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ctl.c" line="806" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ctl.c" bodystart="806" bodyend="873"/>
      </memberdef>
      <memberdef kind="function" id="ctl_8c_1a7e582fb953dc34a65526ea41baf009a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tplg_add_enum</definition>
        <argsstring>(snd_tplg_t *tplg, struct snd_tplg_enum_template *enum_ctl, struct tplg_elem **e)</argsstring>
        <name>tplg_add_enum</name>
        <param>
          <type><ref refid="group__topology_1ga85fcf522a65a5da8f57d83eec2eea98e" kindref="member">snd_tplg_t</ref> *</type>
          <declname>tplg</declname>
        </param>
        <param>
          <type>struct <ref refid="structsnd__tplg__enum__template" kindref="compound">snd_tplg_enum_template</ref> *</type>
          <declname>enum_ctl</declname>
        </param>
        <param>
          <type>struct tplg_elem **</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ctl.c" line="875" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ctl.c" bodystart="875" bodyend="947"/>
      </memberdef>
      <memberdef kind="function" id="ctl_8c_1aa062d9c6f3895a092e985d04a0fe5c47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tplg_add_bytes</definition>
        <argsstring>(snd_tplg_t *tplg, struct snd_tplg_bytes_template *bytes_ctl, struct tplg_elem **e)</argsstring>
        <name>tplg_add_bytes</name>
        <param>
          <type><ref refid="group__topology_1ga85fcf522a65a5da8f57d83eec2eea98e" kindref="member">snd_tplg_t</ref> *</type>
          <declname>tplg</declname>
        </param>
        <param>
          <type>struct <ref refid="structsnd__tplg__bytes__template" kindref="compound">snd_tplg_bytes_template</ref> *</type>
          <declname>bytes_ctl</declname>
        </param>
        <param>
          <type>struct tplg_elem **</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ctl.c" line="949" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ctl.c" bodystart="949" bodyend="1018"/>
      </memberdef>
      <memberdef kind="function" id="ctl_8c_1ad964dc15ae56ecbadd5a64c0fa4c001d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tplg_add_mixer_object</definition>
        <argsstring>(snd_tplg_t *tplg, snd_tplg_obj_template_t *t)</argsstring>
        <name>tplg_add_mixer_object</name>
        <param>
          <type><ref refid="group__topology_1ga85fcf522a65a5da8f57d83eec2eea98e" kindref="member">snd_tplg_t</ref> *</type>
          <declname>tplg</declname>
        </param>
        <param>
          <type><ref refid="structsnd__tplg__obj__template__t" kindref="compound">snd_tplg_obj_template_t</ref> *</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ctl.c" line="1020" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ctl.c" bodystart="1020" bodyend="1023"/>
      </memberdef>
      <memberdef kind="function" id="ctl_8c_1a2b50677e76628fbe191910922c66a2cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tplg_add_enum_object</definition>
        <argsstring>(snd_tplg_t *tplg, snd_tplg_obj_template_t *t)</argsstring>
        <name>tplg_add_enum_object</name>
        <param>
          <type><ref refid="group__topology_1ga85fcf522a65a5da8f57d83eec2eea98e" kindref="member">snd_tplg_t</ref> *</type>
          <declname>tplg</declname>
        </param>
        <param>
          <type><ref refid="structsnd__tplg__obj__template__t" kindref="compound">snd_tplg_obj_template_t</ref> *</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ctl.c" line="1025" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ctl.c" bodystart="1025" bodyend="1028"/>
      </memberdef>
      <memberdef kind="function" id="ctl_8c_1a7671669cfc154f4bad55ccfaaf1588f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tplg_add_bytes_object</definition>
        <argsstring>(snd_tplg_t *tplg, snd_tplg_obj_template_t *t)</argsstring>
        <name>tplg_add_bytes_object</name>
        <param>
          <type><ref refid="group__topology_1ga85fcf522a65a5da8f57d83eec2eea98e" kindref="member">snd_tplg_t</ref> *</type>
          <declname>tplg</declname>
        </param>
        <param>
          <type><ref refid="structsnd__tplg__obj__template__t" kindref="compound">snd_tplg_obj_template_t</ref> *</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ctl.c" line="1030" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ctl.c" bodystart="1030" bodyend="1033"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ctl.c"/>
  </compounddef>
</doxygen>
