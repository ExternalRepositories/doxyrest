<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structsnd__pcm__extplug__callback" kind="struct" language="C++" prot="public">
    <compoundname>snd_pcm_extplug_callback</compoundname>
    <includes refid="pcm__extplug_8h" local="no">pcm_extplug.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structsnd__pcm__extplug__callback_1a05d30fcfe8fa57535c6eeadfb062ad8f" prot="public" static="no" mutable="no">
        <type><ref refid="group___p_c_m_1ga71cdfa37e258d2210b8bd0216bf0c36c" kindref="member">snd_pcm_sframes_t</ref>(*</type>
        <definition>snd_pcm_sframes_t(* snd_pcm_extplug_callback_t::transfer) (snd_pcm_extplug_t *ext, const snd_pcm_channel_area_t *dst_areas, snd_pcm_uframes_t dst_offset, const snd_pcm_channel_area_t *src_areas, snd_pcm_uframes_t src_offset, snd_pcm_uframes_t size)</definition>
        <argsstring>)(snd_pcm_extplug_t *ext, const snd_pcm_channel_area_t *dst_areas, snd_pcm_uframes_t dst_offset, const snd_pcm_channel_area_t *src_areas, snd_pcm_uframes_t src_offset, snd_pcm_uframes_t size)</argsstring>
        <name>transfer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>transfer between source and destination; this is a required callback </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_extplug.h" line="133" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_extplug.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsnd__pcm__extplug__callback_1a06f994b29889eae8f00b74248eb254cf" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* snd_pcm_extplug_callback_t::close) (snd_pcm_extplug_t *ext)</definition>
        <argsstring>)(snd_pcm_extplug_t *ext)</argsstring>
        <name>close</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>close the PCM; optional </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_extplug.h" line="142" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_extplug.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsnd__pcm__extplug__callback_1ab25bf52043d5e06885b6edcdb8269776" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* snd_pcm_extplug_callback_t::hw_params) (snd_pcm_extplug_t *ext, snd_pcm_hw_params_t *params)</definition>
        <argsstring>)(snd_pcm_extplug_t *ext, snd_pcm_hw_params_t *params)</argsstring>
        <name>hw_params</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>hw_params; optional </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_extplug.h" line="146" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_extplug.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsnd__pcm__extplug__callback_1ad4d8fe041ed09e8b855c5ca45cb6899e" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* snd_pcm_extplug_callback_t::hw_free) (snd_pcm_extplug_t *ext)</definition>
        <argsstring>)(snd_pcm_extplug_t *ext)</argsstring>
        <name>hw_free</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>hw_free; optional </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_extplug.h" line="150" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_extplug.h" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsnd__pcm__extplug__callback_1a14901a03219c050a7980b18fe62265ed" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* snd_pcm_extplug_callback_t::dump) (snd_pcm_extplug_t *ext, snd_output_t *out)</definition>
        <argsstring>)(snd_pcm_extplug_t *ext, snd_output_t *out)</argsstring>
        <name>dump</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>dump; optional </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_extplug.h" line="154" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_extplug.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsnd__pcm__extplug__callback_1a7a12bd150cd2a09922c14e885f5c058b" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* snd_pcm_extplug_callback_t::init) (snd_pcm_extplug_t *ext)</definition>
        <argsstring>)(snd_pcm_extplug_t *ext)</argsstring>
        <name>init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>init; optional initialization called at prepare or reset </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_extplug.h" line="158" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_extplug.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsnd__pcm__extplug__callback_1a433980d04f76d65305f119915f1f2cc6" prot="public" static="no" mutable="no">
        <type><ref refid="structsnd__pcm__chmap__query__t" kindref="compound">snd_pcm_chmap_query_t</ref> **(*</type>
        <definition>snd_pcm_chmap_query_t**(* snd_pcm_extplug_callback_t::query_chmaps) (snd_pcm_extplug_t *ext)</definition>
        <argsstring>)(snd_pcm_extplug_t *ext)</argsstring>
        <name>query_chmaps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>query the channel maps; optional; since v1.0.2 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_extplug.h" line="162" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_extplug.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsnd__pcm__extplug__callback_1a6b4c18d63bea69970d88af52ea205f6e" prot="public" static="no" mutable="no">
        <type><ref refid="structsnd__pcm__chmap__t" kindref="compound">snd_pcm_chmap_t</ref> *(*</type>
        <definition>snd_pcm_chmap_t*(* snd_pcm_extplug_callback_t::get_chmap) (snd_pcm_extplug_t *ext)</definition>
        <argsstring>)(snd_pcm_extplug_t *ext)</argsstring>
        <name>get_chmap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get the channel map; optional; since v1.0.2 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_extplug.h" line="166" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_extplug.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsnd__pcm__extplug__callback_1a6865a675c9aa9632afa8889bd01a578a" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* snd_pcm_extplug_callback_t::set_chmap) (snd_pcm_extplug_t *ext, const snd_pcm_chmap_t *map)</definition>
        <argsstring>)(snd_pcm_extplug_t *ext, const snd_pcm_chmap_t *map)</argsstring>
        <name>set_chmap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>set the channel map; optional; since v1.0.2 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_extplug.h" line="170" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_extplug.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Callback table of extplug </para>    </detaileddescription>
    <collaborationgraph>
      <node id="27">
        <label>snd_pcm_chmap_query_t</label>
        <link refid="structsnd__pcm__chmap__query__t"/>
        <childnode refid="26" relation="usage">
          <edgelabel>map</edgelabel>
        </childnode>
      </node>
      <node id="26">
        <label>snd_pcm_chmap_t</label>
        <link refid="structsnd__pcm__chmap__t"/>
      </node>
      <node id="25">
        <label>snd_pcm_extplug_callback_t</label>
        <link refid="structsnd__pcm__extplug__callback"/>
        <childnode refid="26" relation="usage">
          <edgelabel>get_chmap</edgelabel>
        </childnode>
        <childnode refid="27" relation="usage">
          <edgelabel>query_chmaps</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_extplug.h" line="129" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_extplug.h" bodystart="129" bodyend="171"/>
    <listofallmembers>
      <member refid="structsnd__pcm__extplug__callback_1a06f994b29889eae8f00b74248eb254cf" prot="public" virt="non-virtual"><scope>snd_pcm_extplug_callback</scope><name>close</name></member>
      <member refid="structsnd__pcm__extplug__callback_1a14901a03219c050a7980b18fe62265ed" prot="public" virt="non-virtual"><scope>snd_pcm_extplug_callback</scope><name>dump</name></member>
      <member refid="structsnd__pcm__extplug__callback_1a6b4c18d63bea69970d88af52ea205f6e" prot="public" virt="non-virtual"><scope>snd_pcm_extplug_callback</scope><name>get_chmap</name></member>
      <member refid="structsnd__pcm__extplug__callback_1ad4d8fe041ed09e8b855c5ca45cb6899e" prot="public" virt="non-virtual"><scope>snd_pcm_extplug_callback</scope><name>hw_free</name></member>
      <member refid="structsnd__pcm__extplug__callback_1ab25bf52043d5e06885b6edcdb8269776" prot="public" virt="non-virtual"><scope>snd_pcm_extplug_callback</scope><name>hw_params</name></member>
      <member refid="structsnd__pcm__extplug__callback_1a7a12bd150cd2a09922c14e885f5c058b" prot="public" virt="non-virtual"><scope>snd_pcm_extplug_callback</scope><name>init</name></member>
      <member refid="structsnd__pcm__extplug__callback_1a433980d04f76d65305f119915f1f2cc6" prot="public" virt="non-virtual"><scope>snd_pcm_extplug_callback</scope><name>query_chmaps</name></member>
      <member refid="structsnd__pcm__extplug__callback_1a6865a675c9aa9632afa8889bd01a578a" prot="public" virt="non-virtual"><scope>snd_pcm_extplug_callback</scope><name>set_chmap</name></member>
      <member refid="structsnd__pcm__extplug__callback_1a05d30fcfe8fa57535c6eeadfb062ad8f" prot="public" virt="non-virtual"><scope>snd_pcm_extplug_callback</scope><name>transfer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
