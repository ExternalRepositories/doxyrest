<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group___p_c_m___deprecated" kind="group">
    <compoundname>PCM_Deprecated</compoundname>
    <title>Deprecated Functions</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___p_c_m___deprecated_1ga92ee6cf89b3ed71d47b7051f92699045" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* snd_pcm_start_mode_name</definition>
        <argsstring>(snd_pcm_start_t mode) __attribute__((deprecated))</argsstring>
        <name>snd_pcm_start_mode_name</name>
        <param>
          <type><ref refid="group___p_c_m_1ga0eae9150f4f207ed05cb629cc3a3673f" kindref="member">snd_pcm_start_t</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>(DEPRECATED) get name of PCM start mode setting </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM start mode </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ascii name of PCM start mode setting </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="1295" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="2031" bodyend="2036"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___deprecated_1gafd15306572f02e67354d65008e41dc8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* snd_pcm_xrun_mode_name</definition>
        <argsstring>(snd_pcm_xrun_t mode) __attribute__((deprecated))</argsstring>
        <name>snd_pcm_xrun_mode_name</name>
        <param>
          <type><ref refid="group___p_c_m_1ga67c10983b5cadd8b3eb3163489655784" kindref="member">snd_pcm_xrun_t</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>(DEPRECATED) get name of PCM xrun mode setting </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM xrun mode </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ascii name of PCM xrun mode setting </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="1296" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="2047" bodyend="2052"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___deprecated_1ga77967d8bdd8f4baf08661443523065c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_sw_params_set_start_mode</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_sw_params_t *params, snd_pcm_start_t val) __attribute__((deprecated))</argsstring>
        <name>snd_pcm_sw_params_set_start_mode</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga7e082d9ea701709270b0674a0be23b09" kindref="member">snd_pcm_sw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga0eae9150f4f207ed05cb629cc3a3673f" kindref="member">snd_pcm_start_t</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>(DEPRECATED) Set start mode inside a software configuration container </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Software configuration container </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Start mode </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="1297" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="6049" bodyend="6064"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___deprecated_1gadd38871f4c64d9ecf8421b739228b19d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___p_c_m_1ga0eae9150f4f207ed05cb629cc3a3673f" kindref="member">snd_pcm_start_t</ref></type>
        <definition>snd_pcm_start_t snd_pcm_sw_params_get_start_mode</definition>
        <argsstring>(const snd_pcm_sw_params_t *params) __attribute__((deprecated))</argsstring>
        <name>snd_pcm_sw_params_get_start_mode</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga7e082d9ea701709270b0674a0be23b09" kindref="member">snd_pcm_sw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>(DEPRECATED) Get start mode from a software configuration container </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Software configuration container </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>start mode </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="1298" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="6075" bodyend="6080"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___deprecated_1ga7f0da15ce674e09167688d3e98ec20ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_sw_params_set_xrun_mode</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_sw_params_t *params, snd_pcm_xrun_t val) __attribute__((deprecated))</argsstring>
        <name>snd_pcm_sw_params_set_xrun_mode</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga7e082d9ea701709270b0674a0be23b09" kindref="member">snd_pcm_sw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga67c10983b5cadd8b3eb3163489655784" kindref="member">snd_pcm_xrun_t</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>(DEPRECATED) Set xrun mode inside a software configuration container </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Software configuration container </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Xrun mode </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="1299" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="6096" bodyend="6112"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___deprecated_1ga92a1742ca544aaa41de93d3d3661cb5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___p_c_m_1ga67c10983b5cadd8b3eb3163489655784" kindref="member">snd_pcm_xrun_t</ref></type>
        <definition>snd_pcm_xrun_t snd_pcm_sw_params_get_xrun_mode</definition>
        <argsstring>(const snd_pcm_sw_params_t *params) __attribute__((deprecated))</argsstring>
        <name>snd_pcm_sw_params_get_xrun_mode</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga7e082d9ea701709270b0674a0be23b09" kindref="member">snd_pcm_sw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>(DEPRECATED) Get xrun mode from a software configuration container </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Software configuration container </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>xrun mode </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="1300" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="6123" bodyend="6128"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___deprecated_1ga5e16b325ad44596db299468ccc4531b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_sw_params_set_xfer_align</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_sw_params_t *params, snd_pcm_uframes_t val) __attribute__((deprecated))</argsstring>
        <name>snd_pcm_sw_params_set_xfer_align</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga7e082d9ea701709270b0674a0be23b09" kindref="member">snd_pcm_sw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>(DEPRECATED) Set xfer align inside a software configuration container </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Software configuration container </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Chunk size (frames are attempted to be transferred in chunks) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="1302" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="6323" bodyend="6327"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___deprecated_1gabb62c5df350f6ceb266f9ff02a3a6ac7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_sw_params_get_xfer_align</definition>
        <argsstring>(const snd_pcm_sw_params_t *params, snd_pcm_uframes_t *val) __attribute__((deprecated))</argsstring>
        <name>snd_pcm_sw_params_get_xfer_align</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga7e082d9ea701709270b0674a0be23b09" kindref="member">snd_pcm_sw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref> *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>(DEPRECATED) Get xfer align from a software configuration container </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Software configuration container </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>returned chunk size (frames are attempted to be transferred in chunks) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="1303" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="6338" bodyend="6343"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___deprecated_1ga5e098517809fd447df0ea1a4df371e08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_sw_params_set_sleep_min</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_sw_params_t *params, unsigned int val) __attribute__((deprecated))</argsstring>
        <name>snd_pcm_sw_params_set_sleep_min</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga7e082d9ea701709270b0674a0be23b09" kindref="member">snd_pcm_sw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>(DEPRECATED) Set minimum number of ticks to sleep inside a software configuration container </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Software configuration container </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Minimum ticks to sleep or 0 to disable the use of tick timer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="1304" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="6214" bodyend="6218"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___deprecated_1ga82e216007e0093240ae9a96560434f84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_sw_params_get_sleep_min</definition>
        <argsstring>(const snd_pcm_sw_params_t *params, unsigned int *val) __attribute__((deprecated))</argsstring>
        <name>snd_pcm_sw_params_get_sleep_min</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga7e082d9ea701709270b0674a0be23b09" kindref="member">snd_pcm_sw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>(DEPRECATED) Get minimum numbers of ticks to sleep from a software configuration container </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Software configuration container </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>returned minimum number of ticks to sleep or 0 if tick timer is disabled </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="1305" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="6229" bodyend="6234"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___deprecated_1ga55342da81dd6611ab2239c650dc73b7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_get_tick_time</definition>
        <argsstring>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir) __attribute__((deprecated))</argsstring>
        <name>snd_pcm_hw_params_get_tick_time</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>(DEPRECATED) Extract tick time from a configuration space </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned approximate tick duration in us </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code if the configuration space does not contain a single value</para></simplesect>
Actual exact value is &lt;,=,&gt; the approximate one following dir (-1, 0, 1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="1308" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="5725" bodyend="5730"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___deprecated_1gab74b4c9b873754e189b1f96468fa38f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_get_tick_time_min</definition>
        <argsstring>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir) __attribute__((deprecated))</argsstring>
        <name>snd_pcm_hw_params_get_tick_time_min</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>(DEPRECATED) Extract minimum tick time from a configuration space </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned approximate minimum tick duration in us </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code</para></simplesect>
Exact value is &lt;,=,&gt; the returned one following dir (-1,0,1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="1309" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="5744" bodyend="5749"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___deprecated_1gada829ffd7b5b93a8d5e47a35322599e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_get_tick_time_max</definition>
        <argsstring>(const snd_pcm_hw_params_t *params, unsigned int *val, int *dir) __attribute__((deprecated))</argsstring>
        <name>snd_pcm_hw_params_get_tick_time_max</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>(DEPRECATED) Extract maximum tick time from a configuration space </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned approximate maximum tick duration in us </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code</para></simplesect>
Exact value is &lt;,=,&gt; the returned one following dir (-1,0,1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="1310" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="5763" bodyend="5768"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___deprecated_1gae8f2e422b5e6ec5328d003c75cd978ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_test_tick_time</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir) __attribute__((deprecated))</argsstring>
        <name>snd_pcm_hw_params_test_tick_time</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>(DEPRECATED) Verify if a tick time is available inside a configuration space for a PCM </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate tick duration in us </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if available a negative error code otherwise</para></simplesect>
Wanted exact value is &lt;,=,&gt; val following dir (-1,0,1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="1311" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="5780" bodyend="5783"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___deprecated_1ga4e968294e94f56d3ffcb20945d8a8543" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_tick_time</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int val, int dir) __attribute__((deprecated))</argsstring>
        <name>snd_pcm_hw_params_set_tick_time</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>(DEPRECATED) Restrict a configuration space to contain only one tick time </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate tick duration in us </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code if configuration space would become empty</para></simplesect>
Wanted exact value is &lt;,=,&gt; val following dir (-1,0,1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="1312" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="5795" bodyend="5798"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___deprecated_1ga458ef7a2e8aa9445446e4e5ddba9c654" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_tick_time_min</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir) __attribute__((deprecated))</argsstring>
        <name>snd_pcm_hw_params_set_tick_time_min</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>(DEPRECATED) Restrict a configuration space with a minimum tick time </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate minimum tick duration in us (on return filled with actual minimum) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction (on return filled with actual direction) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code if configuration space would become empty</para></simplesect>
Wanted/actual exact minimum is &lt;,=,&gt; val following dir (-1,0,1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="1313" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="5810" bodyend="5813"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___deprecated_1ga44f6dcae8ee774254d964ba41f2f8ddc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_tick_time_max</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir) __attribute__((deprecated))</argsstring>
        <name>snd_pcm_hw_params_set_tick_time_max</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>(DEPRECATED) Restrict a configuration space with a maximum tick time </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate maximum tick duration in us (on return filled with actual maximum) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction (on return filled with actual direction) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code if configuration space would become empty</para></simplesect>
Wanted/actual exact maximum is &lt;,=,&gt; val following dir (-1,0,1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="1314" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="5825" bodyend="5828"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___deprecated_1ga7b30d734fd89678f77563e655f7c06ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_tick_time_minmax</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *min, int *mindir, unsigned int *max, int *maxdir) __attribute__((deprecated))</argsstring>
        <name>snd_pcm_hw_params_set_tick_time_minmax</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>min</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>mindir</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>max</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>maxdir</declname>
        </param>
        <briefdescription>
<para>(DEPRECATED) Restrict a configuration space to have tick times in a given range </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate minimum tick duration in us (on return filled with actual minimum) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mindir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction for minimum (on return filled with actual direction) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate maximum tick duration in us (on return filled with actual maximum) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxdir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction for maximum (on return filled with actual direction) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code if configuration space would become empty</para></simplesect>
Wanted/actual exact min/max is &lt;,=,&gt; val following dir (-1,0,1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="1315" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="5842" bodyend="5845"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___deprecated_1ga9e871038328399ad5112747457256c53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_tick_time_near</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir) __attribute__((deprecated))</argsstring>
        <name>snd_pcm_hw_params_set_tick_time_near</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>(DEPRECATED) Restrict a configuration space to have tick time nearest to a target </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>approximate target tick duration in us / returned chosen approximate target tick duration in us </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code if configuration space is empty</para></simplesect>
target/chosen exact value is &lt;,=,&gt; val following dir (-1,0,1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="1316" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="5860" bodyend="5864"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___deprecated_1ga257cc818f91ac4b4ae39710256a245dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_tick_time_first</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir) __attribute__((deprecated))</argsstring>
        <name>snd_pcm_hw_params_set_tick_time_first</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>(DEPRECATED) Restrict a configuration space to contain only its minimum tick time </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned approximate minimum tick duration in us </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code</para></simplesect>
Actual exact value is &lt;,=,&gt; the approximate one following dir (-1, 0, 1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="1317" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="5879" bodyend="5883"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___deprecated_1ga1daa74f876820685cb4e3e384728f004" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hw_params_set_tick_time_last</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, unsigned int *val, int *dir) __attribute__((deprecated))</argsstring>
        <name>snd_pcm_hw_params_set_tick_time_last</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>(DEPRECATED) Restrict a configuration space to contain only its maximum tick time </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned approximate maximum tick duration in us </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub unit direction </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code</para></simplesect>
Actual exact value is &lt;,=,&gt; the approximate one following dir (-1, 0, 1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="1318" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="5898" bodyend="5902"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>See the <ref refid="pcm" kindref="compound">PCM (digital audio) interface</ref> page for more details. </para>    </detaileddescription>
  </compounddef>
</doxygen>
