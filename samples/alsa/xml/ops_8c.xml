<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="ops_8c" kind="file" language="C++">
    <compoundname>ops.c</compoundname>
    <includes local="yes">list.h</includes>
    <includes local="yes">tplg_local.h</includes>
    <incdepgraph>
      <node id="782">
        <label>list.h</label>
      </node>
      <node id="783">
        <label>tplg_local.h</label>
      </node>
      <node id="781">
        <label>/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ops.c</label>
        <link refid="ops_8c"/>
        <childnode refid="782" relation="include">
        </childnode>
        <childnode refid="783" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="ops_8c_1ae6ab5af79519e37de7ec50adbb5f58bf" prot="public" static="yes" mutable="no">
        <type>const struct map_elem</type>
        <definition>const struct map_elem control_map[]</definition>
        <argsstring>[]</argsstring>
        <name>control_map</name>
        <initializer>= {
	{&quot;volsw&quot;, SND_SOC_TPLG_CTL_VOLSW},
	{&quot;volsw_sx&quot;, SND_SOC_TPLG_CTL_VOLSW_SX},
	{&quot;volsw_xr_sx&quot;, SND_SOC_TPLG_CTL_VOLSW_XR_SX},
	{&quot;enum&quot;, SND_SOC_TPLG_CTL_ENUM},
	{&quot;bytes&quot;, SND_SOC_TPLG_CTL_BYTES},
	{&quot;enum_value&quot;, SND_SOC_TPLG_CTL_ENUM_VALUE},
	{&quot;range&quot;, SND_SOC_TPLG_CTL_RANGE},
	{&quot;strobe&quot;, SND_SOC_TPLG_CTL_STROBE},
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ops.c" line="129" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ops.c" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="ops_8c_1a1e6014b3f09d418e7c8284951500711d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int lookup_ops</definition>
        <argsstring>(const char *c)</argsstring>
        <name>lookup_ops</name>
        <param>
          <type>const char *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ops.c" line="34" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ops.c" bodystart="34" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="ops_8c_1ae051b99940656c331cd778730ecddda6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tplg_parse_ops</definition>
        <argsstring>(snd_tplg_t *tplg, snd_config_t *cfg, void *private)</argsstring>
        <name>tplg_parse_ops</name>
        <param>
          <type><ref refid="group__topology_1ga85fcf522a65a5da8f57d83eec2eea98e" kindref="member">snd_tplg_t</ref> *</type>
          <declname>tplg</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>private</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ops.c" line="50" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ops.c" bodystart="50" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="ops_8c_1aae81db4ed586db812ca4b984d64d0f31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tplg_parse_ext_ops</definition>
        <argsstring>(snd_tplg_t *tplg, snd_config_t *cfg, void *private)</argsstring>
        <name>tplg_parse_ext_ops</name>
        <param>
          <type><ref refid="group__topology_1ga85fcf522a65a5da8f57d83eec2eea98e" kindref="member">snd_tplg_t</ref> *</type>
          <declname>tplg</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>private</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ops.c" line="89" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ops.c" bodystart="89" bodyend="122"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/ops.c"/>
  </compounddef>
</doxygen>
