<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group___p_c_m___info" kind="group">
    <compoundname>PCM_Info</compoundname>
    <title>Stream Information</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___p_c_m___info_1ga782831adf8ee2ee52892479ea0222e67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t snd_pcm_info_sizeof</definition>
        <argsstring>(void)</argsstring>
        <name>snd_pcm_info_sizeof</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>get size of <ref refid="group___p_c_m_1ga7dae86a468480ce8eb1c485446c51664" kindref="member">snd_pcm_info_t</ref> </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>size in bytes </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="643" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="6753" bodyend="6756"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___info_1ga2386bb8f334424c1ff2b8854ff29ac0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_info_malloc</definition>
        <argsstring>(snd_pcm_info_t **ptr)</argsstring>
        <name>snd_pcm_info_malloc</name>
        <param>
          <type><ref refid="group___p_c_m_1ga7dae86a468480ce8eb1c485446c51664" kindref="member">snd_pcm_info_t</ref> **</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>allocate an invalid <ref refid="group___p_c_m_1ga7dae86a468480ce8eb1c485446c51664" kindref="member">snd_pcm_info_t</ref> using standard malloc </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>returned pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="649" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="6763" bodyend="6770"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___info_1gaa919792762d0bf606f9fe45872231f28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_pcm_info_free</definition>
        <argsstring>(snd_pcm_info_t *obj)</argsstring>
        <name>snd_pcm_info_free</name>
        <param>
          <type><ref refid="group___p_c_m_1ga7dae86a468480ce8eb1c485446c51664" kindref="member">snd_pcm_info_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>frees a previously allocated <ref refid="group___p_c_m_1ga7dae86a468480ce8eb1c485446c51664" kindref="member">snd_pcm_info_t</ref> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to object to free </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="650" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="6776" bodyend="6779"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___info_1ga139884ae6fb3cb5621591f2d6e044a42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_pcm_info_copy</definition>
        <argsstring>(snd_pcm_info_t *dst, const snd_pcm_info_t *src)</argsstring>
        <name>snd_pcm_info_copy</name>
        <param>
          <type><ref refid="group___p_c_m_1ga7dae86a468480ce8eb1c485446c51664" kindref="member">snd_pcm_info_t</ref> *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="group___p_c_m_1ga7dae86a468480ce8eb1c485446c51664" kindref="member">snd_pcm_info_t</ref> *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>copy one <ref refid="group___p_c_m_1ga7dae86a468480ce8eb1c485446c51664" kindref="member">snd_pcm_info_t</ref> to another </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to destination </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to source </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="651" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="6786" bodyend="6790"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___info_1ga137b0bb60ad14009b9da04fe53849553" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int snd_pcm_info_get_device</definition>
        <argsstring>(const snd_pcm_info_t *obj)</argsstring>
        <name>snd_pcm_info_get_device</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga7dae86a468480ce8eb1c485446c51664" kindref="member">snd_pcm_info_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Get device from a PCM info container. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM info container </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>device number </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="652" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="6797" bodyend="6801"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___info_1gaf0e6c1ec0443820d5c14c48ecd1b698e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int snd_pcm_info_get_subdevice</definition>
        <argsstring>(const snd_pcm_info_t *obj)</argsstring>
        <name>snd_pcm_info_get_subdevice</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga7dae86a468480ce8eb1c485446c51664" kindref="member">snd_pcm_info_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Get subdevice from a PCM info container. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM info container </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>subdevice number </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="653" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="6808" bodyend="6812"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___info_1gacf9b5a69f2b0ed9aef5b9b0d2ed61aae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___p_c_m_1gac23b43ff55add78638e503b9cc892c24" kindref="member">snd_pcm_stream_t</ref></type>
        <definition>snd_pcm_stream_t snd_pcm_info_get_stream</definition>
        <argsstring>(const snd_pcm_info_t *obj)</argsstring>
        <name>snd_pcm_info_get_stream</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga7dae86a468480ce8eb1c485446c51664" kindref="member">snd_pcm_info_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Get stream (direction) from a PCM info container. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM info container </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>stream </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="654" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="6819" bodyend="6823"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___info_1ga3a632a14559c1ea0d07b27b0596c4e41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_info_get_card</definition>
        <argsstring>(const snd_pcm_info_t *obj)</argsstring>
        <name>snd_pcm_info_get_card</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga7dae86a468480ce8eb1c485446c51664" kindref="member">snd_pcm_info_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Get card from a PCM info container. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM info container </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>card number otherwise a negative error code if not associable to a card </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="655" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="6830" bodyend="6834"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___info_1ga4ce080eae74ed95baa79ffb80a91df81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* snd_pcm_info_get_id</definition>
        <argsstring>(const snd_pcm_info_t *obj)</argsstring>
        <name>snd_pcm_info_get_id</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga7dae86a468480ce8eb1c485446c51664" kindref="member">snd_pcm_info_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Get id from a PCM info container. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM info container </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>short id of PCM </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="656" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="6841" bodyend="6845"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___info_1gad48dd79e45631811c297ee7080681bc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* snd_pcm_info_get_name</definition>
        <argsstring>(const snd_pcm_info_t *obj)</argsstring>
        <name>snd_pcm_info_get_name</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga7dae86a468480ce8eb1c485446c51664" kindref="member">snd_pcm_info_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Get name from a PCM info container. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM info container </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>name of PCM </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="657" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="6852" bodyend="6856"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___info_1gae2ce3c55d4439ae423b854358ff08aa1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* snd_pcm_info_get_subdevice_name</definition>
        <argsstring>(const snd_pcm_info_t *obj)</argsstring>
        <name>snd_pcm_info_get_subdevice_name</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga7dae86a468480ce8eb1c485446c51664" kindref="member">snd_pcm_info_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Get subdevice name from a PCM info container. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM info container </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>name of used PCM subdevice </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="658" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="6863" bodyend="6867"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___info_1gada845e969b0b9c959134f42b98d73c5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___p_c_m_1gad0e95dc8a590d8f9915fec237d7a28a5" kindref="member">snd_pcm_class_t</ref></type>
        <definition>snd_pcm_class_t snd_pcm_info_get_class</definition>
        <argsstring>(const snd_pcm_info_t *obj)</argsstring>
        <name>snd_pcm_info_get_class</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga7dae86a468480ce8eb1c485446c51664" kindref="member">snd_pcm_info_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Get class from a PCM info container. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM info container </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>class of PCM </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="659" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="6874" bodyend="6878"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___info_1ga30670ad0d94f4358c3f16cc80ff3ba85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___p_c_m_1ga6a164917c35e2216f6e76beff4e4d0cb" kindref="member">snd_pcm_subclass_t</ref></type>
        <definition>snd_pcm_subclass_t snd_pcm_info_get_subclass</definition>
        <argsstring>(const snd_pcm_info_t *obj)</argsstring>
        <name>snd_pcm_info_get_subclass</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga7dae86a468480ce8eb1c485446c51664" kindref="member">snd_pcm_info_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Get subclass from a PCM info container. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM info container </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>subclass of PCM </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="660" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="6885" bodyend="6889"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___info_1gaeccf5d684a23455aa9fc31f8756eb222" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int snd_pcm_info_get_subdevices_count</definition>
        <argsstring>(const snd_pcm_info_t *obj)</argsstring>
        <name>snd_pcm_info_get_subdevices_count</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga7dae86a468480ce8eb1c485446c51664" kindref="member">snd_pcm_info_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Get subdevices count from a PCM info container. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM info container </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>subdevices total count of PCM </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="661" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="6896" bodyend="6900"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___info_1gad78bccdeadd378461073b4e6bfa5272a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int snd_pcm_info_get_subdevices_avail</definition>
        <argsstring>(const snd_pcm_info_t *obj)</argsstring>
        <name>snd_pcm_info_get_subdevices_avail</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga7dae86a468480ce8eb1c485446c51664" kindref="member">snd_pcm_info_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Get available subdevices count from a PCM info container. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM info container </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>available subdevices count of PCM </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="662" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="6907" bodyend="6911"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___info_1ga4a46693c8a81912de84f814c3eecd06e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="unionsnd__pcm__sync__id__t" kindref="compound">snd_pcm_sync_id_t</ref></type>
        <definition>snd_pcm_sync_id_t snd_pcm_info_get_sync</definition>
        <argsstring>(const snd_pcm_info_t *obj)</argsstring>
        <name>snd_pcm_info_get_sync</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga7dae86a468480ce8eb1c485446c51664" kindref="member">snd_pcm_info_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Get hardware synchronization ID from a PCM info container. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM info container </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>hardware synchronization ID </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="663" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="6918" bodyend="6924"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___info_1gab9fe6f542c830c516f78ee9124606430" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_pcm_info_set_device</definition>
        <argsstring>(snd_pcm_info_t *obj, unsigned int val)</argsstring>
        <name>snd_pcm_info_set_device</name>
        <param>
          <type><ref refid="group___p_c_m_1ga7dae86a468480ce8eb1c485446c51664" kindref="member">snd_pcm_info_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set wanted device inside a PCM info container (see <ref refid="control_8c_1ac5a9750f9ba7749efddb0d92747255c8" kindref="member">snd_ctl_pcm_info</ref>) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM info container </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Device number </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="664" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="6931" bodyend="6935"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___info_1ga2a1aea3ed02b14de6535f59d2cc80148" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_pcm_info_set_subdevice</definition>
        <argsstring>(snd_pcm_info_t *obj, unsigned int val)</argsstring>
        <name>snd_pcm_info_set_subdevice</name>
        <param>
          <type><ref refid="group___p_c_m_1ga7dae86a468480ce8eb1c485446c51664" kindref="member">snd_pcm_info_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set wanted subdevice inside a PCM info container (see <ref refid="control_8c_1ac5a9750f9ba7749efddb0d92747255c8" kindref="member">snd_ctl_pcm_info</ref>) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM info container </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Subdevice number </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="665" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="6942" bodyend="6946"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___info_1ga6bd83454c365f212e47f42ee84db06ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_pcm_info_set_stream</definition>
        <argsstring>(snd_pcm_info_t *obj, snd_pcm_stream_t val)</argsstring>
        <name>snd_pcm_info_set_stream</name>
        <param>
          <type><ref refid="group___p_c_m_1ga7dae86a468480ce8eb1c485446c51664" kindref="member">snd_pcm_info_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gac23b43ff55add78638e503b9cc892c24" kindref="member">snd_pcm_stream_t</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set wanted stream inside a PCM info container (see <ref refid="control_8c_1ac5a9750f9ba7749efddb0d92747255c8" kindref="member">snd_ctl_pcm_info</ref>) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM info container </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Stream </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="666" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="6953" bodyend="6957"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___p_c_m___info_1gac60fd444f9e73bd12bde83b783f9b4f8" prot="public" static="no">
        <name>snd_pcm_info_alloca</name>
        <param><defname>ptr</defname></param>
        <briefdescription>
<para>allocate an invalid <ref refid="group___p_c_m_1ga7dae86a468480ce8eb1c485446c51664" kindref="member">snd_pcm_info_t</ref> using standard alloca </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>returned pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="648" column="9" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" bodystart="648" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>See the <ref refid="pcm" kindref="compound">PCM (digital audio) interface</ref> page for more details. </para>    </detaileddescription>
  </compounddef>
</doxygen>
