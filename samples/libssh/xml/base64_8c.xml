<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="base64_8c" kind="file" language="C++">
    <compoundname>base64.c</compoundname>
    <includes refid="string_8h" local="no">string.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes refid="priv_8h" local="yes">libssh/priv.h</includes>
    <includes refid="buffer_8h" local="yes">libssh/buffer.h</includes>
    <incdepgraph>
      <node id="771">
        <label>libssh/buffer.h</label>
        <link refid="buffer_8h_source"/>
        <childnode refid="772" relation="include">
        </childnode>
        <childnode refid="762" relation="include">
        </childnode>
      </node>
      <node id="772">
        <label>stdarg.h</label>
      </node>
      <node id="765">
        <label>sys/select.h</label>
      </node>
      <node id="759">
        <label>libssh/priv.h</label>
        <link refid="priv_8h_source"/>
        <childnode refid="760" relation="include">
        </childnode>
        <childnode refid="761" relation="include">
        </childnode>
        <childnode refid="762" relation="include">
        </childnode>
        <childnode refid="768" relation="include">
        </childnode>
      </node>
      <node id="762">
        <label>libssh/libssh.h</label>
        <link refid="libssh_8h_source"/>
        <childnode refid="761" relation="include">
        </childnode>
        <childnode refid="763" relation="include">
        </childnode>
        <childnode refid="764" relation="include">
        </childnode>
        <childnode refid="765" relation="include">
        </childnode>
        <childnode refid="766" relation="include">
        </childnode>
        <childnode refid="767" relation="include">
        </childnode>
      </node>
      <node id="757">
        <label>src/base64.c</label>
        <link refid="base64_8c"/>
        <childnode refid="758" relation="include">
        </childnode>
        <childnode refid="769" relation="include">
        </childnode>
        <childnode refid="770" relation="include">
        </childnode>
        <childnode refid="759" relation="include">
        </childnode>
        <childnode refid="771" relation="include">
        </childnode>
      </node>
      <node id="770">
        <label>stdlib.h</label>
      </node>
      <node id="758">
        <label>string.h</label>
        <link refid="string_8h_source"/>
        <childnode refid="759" relation="include">
        </childnode>
      </node>
      <node id="767">
        <label>libssh/legacy.h</label>
        <link refid="legacy_8h_source"/>
      </node>
      <node id="766">
        <label>netdb.h</label>
      </node>
      <node id="768">
        <label>libssh/callbacks.h</label>
        <link refid="callbacks_8h_source"/>
        <childnode refid="762" relation="include">
        </childnode>
        <childnode refid="758" relation="include">
        </childnode>
      </node>
      <node id="764">
        <label>sys/types.h</label>
      </node>
      <node id="761">
        <label>unistd.h</label>
      </node>
      <node id="760">
        <label>config.h</label>
      </node>
      <node id="769">
        <label>stdio.h</label>
      </node>
      <node id="763">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="base64_8c_1afaac080e14176ef93b4f5555f8d12f39" prot="public" static="no">
        <name>SET_A</name>
        <param><defname>n</defname></param>
        <param><defname>i</defname></param>
        <initializer>do { (n) |= ((i) &amp; 63) &lt;&lt;18; } while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/base64.c" line="37" column="9" bodyfile="src/base64.c" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="base64_8c_1a4bfb2a5f55fe6f739efa1a90939c2113" prot="public" static="no">
        <name>SET_B</name>
        <param><defname>n</defname></param>
        <param><defname>i</defname></param>
        <initializer>do { (n) |= ((i) &amp; 63) &lt;&lt;12; } while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/base64.c" line="38" column="9" bodyfile="src/base64.c" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="base64_8c_1a053ce1226f1874849d31d83d0553b715" prot="public" static="no">
        <name>SET_C</name>
        <param><defname>n</defname></param>
        <param><defname>i</defname></param>
        <initializer>do { (n) |= ((i) &amp; 63) &lt;&lt; 6; } while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/base64.c" line="39" column="9" bodyfile="src/base64.c" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="base64_8c_1a4218203390c21da284897c55169f0a89" prot="public" static="no">
        <name>SET_D</name>
        <param><defname>n</defname></param>
        <param><defname>i</defname></param>
        <initializer>do { (n) |= ((i) &amp; 63); } while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/base64.c" line="40" column="9" bodyfile="src/base64.c" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="base64_8c_1ac9a322d6f42fa07cc5cd316d04b58ff5" prot="public" static="no">
        <name>GET_A</name>
        <param><defname>n</defname></param>
        <initializer>(unsigned char) (((n) &amp; 0xff0000) &gt;&gt; 16)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/base64.c" line="42" column="9" bodyfile="src/base64.c" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="base64_8c_1a4e7164c49bc7dac9904775c8c8f33359" prot="public" static="no">
        <name>GET_B</name>
        <param><defname>n</defname></param>
        <initializer>(unsigned char) (((n) &amp; 0xff00) &gt;&gt; 8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/base64.c" line="43" column="9" bodyfile="src/base64.c" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="base64_8c_1a335f25e89586046492fa50fd8cf952b7" prot="public" static="no">
        <name>GET_C</name>
        <param><defname>n</defname></param>
        <initializer>(unsigned char) ((n) &amp; 0xff)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/base64.c" line="44" column="9" bodyfile="src/base64.c" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="base64_8c_1a090189f6b662ec13a6b2b05d9d40834f" prot="public" static="no">
        <name>BLOCK</name>
        <param><defname>letter</defname></param>
        <param><defname>n</defname></param>
        <initializer>do {ptr = strchr(alphabet, source[n]); \
                             if(!ptr) return -1; \
                             i = ptr - alphabet; \
                             SET_##letter(*block, i); \
                         } while(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/base64.c" line="174" column="9" bodyfile="src/base64.c" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="base64_8c_1a5967693540f086cfa357f68978bf0be7" prot="public" static="no">
        <name>BITS</name>
        <param><defname>n</defname></param>
        <initializer>((1 &lt;&lt; (n)) - 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/base64.c" line="237" column="9" bodyfile="src/base64.c" bodystart="237" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="base64_8c_1aa0caf1362d64b0af98bb3c37b8919755" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char alphabet[]</definition>
        <argsstring>[]</argsstring>
        <name>alphabet</name>
        <initializer>= &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;
                         &quot;abcdefghijklmnopqrstuvwxyz&quot;
                         &quot;0123456789+/&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/base64.c" line="32" column="1" bodyfile="src/base64.c" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="base64_8c_1a47e7319237c812bcf3b99e0458df338e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int _base64_to_bin</definition>
        <argsstring>(unsigned char dest[3], const char *source, int num)</argsstring>
        <name>_base64_to_bin</name>
        <param>
          <type>unsigned char</type>
          <declname>dest</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>const char *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/base64.c" line="46" column="1" bodyfile="src/base64.c" bodystart="209" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="base64_8c_1a6b6967500bdc814853e12c166812ef44" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int get_equals</definition>
        <argsstring>(char *string)</argsstring>
        <name>get_equals</name>
        <param>
          <type>char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/base64.c" line="47" column="1" bodyfile="src/base64.c" bodystart="223" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="base64_8c_1aa9b1bdd62db42c91b1b203f6850adadf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssh_buffer</type>
        <definition>ssh_buffer base64_to_bin</definition>
        <argsstring>(const char *source)</argsstring>
        <name>base64_to_bin</name>
        <param>
          <type>const char *</type>
          <declname>source</declname>
        </param>
        <briefdescription>
<para>Translates a base64 string into a binary one. </para>        </briefdescription>
        <detaileddescription>
<internal><para><simplesect kind="return"><para>A buffer containing the decoded string, NULL if something went wrong (e.g. incorrect char). </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/base64.c" line="59" column="1" bodyfile="src/base64.c" bodystart="59" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="base64_8c_1a866ac672f0c078ef5543ed5d307d42ce" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int to_block4</definition>
        <argsstring>(unsigned long *block, const char *source, int num)</argsstring>
        <name>to_block4</name>
        <param>
          <type>unsigned long *</type>
          <declname>block</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/base64.c" line="181" column="1" bodyfile="src/base64.c" bodystart="181" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="base64_8c_1a305a75c7f23b3f64828c2291b5ea991a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void _bin_to_base64</definition>
        <argsstring>(unsigned char *dest, const unsigned char source[3], int len)</argsstring>
        <name>_bin_to_base64</name>
        <param>
          <type>unsigned char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>const unsigned char</type>
          <declname>source</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/base64.c" line="238" column="1" bodyfile="src/base64.c" bodystart="238" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="base64_8c_1a7f949f56bb16045d3b62013034c8ba37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char *</type>
        <definition>unsigned char* bin_to_base64</definition>
        <argsstring>(const unsigned char *source, int len)</argsstring>
        <name>bin_to_base64</name>
        <param>
          <type>const unsigned char *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Converts binary data to a base64 string. </para>        </briefdescription>
        <detaileddescription>
<internal><para><simplesect kind="return"><para>the converted string </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/base64.c" line="269" column="1" bodyfile="src/base64.c" bodystart="269" bodyend="290"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/base64.c"/>
  </compounddef>
</doxygen>
