<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="server_8h" kind="file" language="C++">
    <compoundname>server.h</compoundname>
    <includes refid="libssh_8h" local="yes">libssh/libssh.h</includes>
    <includedby refid="libsshpp_8hpp" local="no">include/libssh/libsshpp.hpp</includedby>
    <includedby refid="bind_8c" local="yes">src/bind.c</includedby>
    <includedby refid="channels_8c" local="yes">src/channels.c</includedby>
    <includedby refid="gssapi_8c" local="no">src/gssapi.c</includedby>
    <includedby refid="legacy_8c" local="no">src/legacy.c</includedby>
    <includedby refid="messages_8c" local="yes">src/messages.c</includedby>
    <includedby refid="options_8c" local="yes">src/options.c</includedby>
    <includedby refid="poll_8c" local="yes">src/poll.c</includedby>
    <includedby refid="server_8c" local="yes">src/server.c</includedby>
    <includedby refid="session_8c" local="yes">src/session.c</includedby>
    <incdepgraph>
      <node id="535">
        <label>sys/select.h</label>
      </node>
      <node id="531">
        <label>libssh/libssh.h</label>
        <link refid="libssh_8h_source"/>
        <childnode refid="532" relation="include">
        </childnode>
        <childnode refid="533" relation="include">
        </childnode>
        <childnode refid="534" relation="include">
        </childnode>
        <childnode refid="535" relation="include">
        </childnode>
        <childnode refid="536" relation="include">
        </childnode>
        <childnode refid="537" relation="include">
        </childnode>
      </node>
      <node id="537">
        <label>libssh/legacy.h</label>
        <link refid="legacy_8h_source"/>
      </node>
      <node id="536">
        <label>netdb.h</label>
      </node>
      <node id="534">
        <label>sys/types.h</label>
      </node>
      <node id="532">
        <label>unistd.h</label>
      </node>
      <node id="530">
        <label>include/libssh/server.h</label>
        <link refid="server_8h"/>
        <childnode refid="531" relation="include">
        </childnode>
      </node>
      <node id="533">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="539">
        <label>include/libssh/libsshpp.hpp</label>
        <link refid="libsshpp_8hpp_source"/>
      </node>
      <node id="538">
        <label>include/libssh/server.h</label>
        <link refid="server_8h"/>
        <childnode refid="539" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structssh__bind__callbacks__struct" prot="public">ssh_bind_callbacks_struct</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__libssh__server_1ga5b7f830ef23bb1669a1118a78929e98d" prot="public" static="no">
        <name>SERVERBANNER</name>
        <initializer>CLIENTBANNER</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="32" column="10" bodyfile="include/libssh/server.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__libssh__server_1ga4c8b5efd4d5e280d59fb680cb7c5d3b8" prot="public" static="no">
        <name>ssh_bind_options_e</name>
        <enumvalue id="group__libssh__server_1gga4c8b5efd4d5e280d59fb680cb7c5d3b8a8e8c977e8e36dacf2e201cc23676276a" prot="public">
          <name>SSH_BIND_OPTIONS_BINDADDR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__libssh__server_1gga4c8b5efd4d5e280d59fb680cb7c5d3b8a7aa510c399d2f7760657c643f9057271" prot="public">
          <name>SSH_BIND_OPTIONS_BINDPORT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__libssh__server_1gga4c8b5efd4d5e280d59fb680cb7c5d3b8a92818fd916f09f3d7bd49bfd8405db0d" prot="public">
          <name>SSH_BIND_OPTIONS_BINDPORT_STR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__libssh__server_1gga4c8b5efd4d5e280d59fb680cb7c5d3b8ae77da31d38bc5ed42085f38ff2b83d85" prot="public">
          <name>SSH_BIND_OPTIONS_HOSTKEY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__libssh__server_1gga4c8b5efd4d5e280d59fb680cb7c5d3b8a774bda12cf0f9116d270c3b2ff8046d6" prot="public">
          <name>SSH_BIND_OPTIONS_DSAKEY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__libssh__server_1gga4c8b5efd4d5e280d59fb680cb7c5d3b8a1d0f9a21e9c265587b2e63ef73adfa7b" prot="public">
          <name>SSH_BIND_OPTIONS_RSAKEY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__libssh__server_1gga4c8b5efd4d5e280d59fb680cb7c5d3b8abbf080850a5ca29463515d089fcbf1a5" prot="public">
          <name>SSH_BIND_OPTIONS_BANNER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__libssh__server_1gga4c8b5efd4d5e280d59fb680cb7c5d3b8ac3c29bccf06ec4de2d6c529761da6f85" prot="public">
          <name>SSH_BIND_OPTIONS_LOG_VERBOSITY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__libssh__server_1gga4c8b5efd4d5e280d59fb680cb7c5d3b8afe55cd745cf47eff7da6e1d5188946b7" prot="public">
          <name>SSH_BIND_OPTIONS_LOG_VERBOSITY_STR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__libssh__server_1gga4c8b5efd4d5e280d59fb680cb7c5d3b8a3f65d490316ddd6e27c668ee30f99093" prot="public">
          <name>SSH_BIND_OPTIONS_ECDSAKEY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="38" column="1" bodyfile="include/libssh/server.h" bodystart="38" bodyend="49"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__libssh__server_1ga76a8630e8ad9b00dd17518e324c407e0" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* ssh_bind_incoming_connection_callback) (ssh_bind sshbind, void *userdata)</definition>
        <argsstring>)(ssh_bind sshbind, void *userdata)</argsstring>
        <name>ssh_bind_incoming_connection_callback</name>
        <briefdescription>
<para>Incoming connection callback. </para>        </briefdescription>
        <detaileddescription>
<para>This callback is called when a ssh_bind has a new incoming connection. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sshbind</parametername>
</parameternamelist>
<parameterdescription>
<para>Current sshbind session handler </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>userdata</parametername>
</parameternamelist>
<parameterdescription>
<para>Userdata to be passed to the callback function. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="61" column="1" bodyfile="include/libssh/server.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__libssh__server_1ga4e4edf0cfd185a335d08e6e610aed77e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API ssh_bind</type>
        <definition>ssh_bind ssh_bind_new</definition>
        <argsstring>(void)</argsstring>
        <name>ssh_bind_new</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Creates a new SSH server bind. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A newly allocated ssh_bind session pointer. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="82" column="1" bodyfile="src/bind.c" bodystart="132" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1ga8fd4253643bc9cf33d6f41d170e83fff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API int</type>
        <definition>int ssh_bind_options_set</definition>
        <argsstring>(ssh_bind sshbind, enum ssh_bind_options_e type, const void *value)</argsstring>
        <name>ssh_bind_options_set</name>
        <param>
          <type>ssh_bind</type>
          <declname>sshbind</declname>
        </param>
        <param>
          <type>enum ssh_bind_options_e</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set options for an SSH server bind. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sshbind</parametername>
</parameternamelist>
<parameterdescription>
<para>The ssh server bind to configure.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The option type to set. This should be one of the following:</para></parameterdescription>
</parameteritem>
</parameterlist>
<itemizedlist>
<listitem><para>SSH_BIND_OPTIONS_HOSTKEY: Set the path to an ssh host key, regardless of type. Only one key from per key type (RSA, DSA, ECDSA) is allowed in an ssh_bind at a time, and later calls to this function with this option for the same key type will override prior calls (const char *).</para></listitem><listitem><para>SSH_BIND_OPTIONS_BINDADDR: Set the IP address to bind (const char *).</para></listitem><listitem><para>SSH_BIND_OPTIONS_BINDPORT: Set the port to bind (unsigned int *).</para></listitem><listitem><para>SSH_BIND_OPTIONS_BINDPORT_STR: Set the port to bind (const char *).</para></listitem><listitem><para>SSH_BIND_OPTIONS_LOG_VERBOSITY: Set the session logging verbosity (int *). The logging verbosity should have one of the following values, which are listed in order of increasing verbosity. Every log message with verbosity less than or equal to the logging verbosity will be shown.<itemizedlist>
<listitem><para>SSH_LOG_NOLOG: No logging</para></listitem><listitem><para>SSH_LOG_WARNING: Only warnings</para></listitem><listitem><para>SSH_LOG_PROTOCOL: High level protocol information</para></listitem><listitem><para>SSH_LOG_PACKET: Lower level protocol infomations, packet level</para></listitem><listitem><para>SSH_LOG_FUNCTIONS: Every function path</para></listitem></itemizedlist>
</para></listitem><listitem><para>SSH_BIND_OPTIONS_LOG_VERBOSITY_STR: Set the session logging verbosity via a string that will be converted to a numerical value (e.g. &quot;3&quot;) and interpreted according to the values of SSH_BIND_OPTIONS_LOG_VERBOSITY above (const char *).</para></listitem><listitem><para>SSH_BIND_OPTIONS_DSAKEY: Set the path to the ssh host dsa key, SSHv2 only (const char *).</para></listitem><listitem><para>SSH_BIND_OPTIONS_RSAKEY: Set the path to the ssh host rsa key, SSHv2 only (const char *).</para></listitem><listitem><para>SSH_BIND_OPTIONS_ECDSAKEY: Set the path to the ssh host ecdsa key, SSHv2 only (const char *).</para></listitem><listitem><para>SSH_BIND_OPTIONS_BANNER: Set the server banner sent to clients (const char *).</para></listitem></itemizedlist>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to set. This is a generic pointer and the datatype which should be used is described at the corresponding value of type above.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, &lt; 0 on error, invalid option, or parameter. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="84" column="1" bodyfile="src/options.c" bodystart="1387" bodyend="1564"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gaee5406f486d73aad765cab4c445f2f63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API int</type>
        <definition>int ssh_bind_listen</definition>
        <argsstring>(ssh_bind ssh_bind_o)</argsstring>
        <name>ssh_bind_listen</name>
        <param>
          <type>ssh_bind</type>
          <declname>ssh_bind_o</declname>
        </param>
        <briefdescription>
<para>Start listening to the socket. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ssh_bind_o</parametername>
</parameternamelist>
<parameterdescription>
<para>The ssh server bind to use.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, &lt; 0 on error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="94" column="1" bodyfile="src/bind.c" bodystart="228" bodyend="275"/>
        <references refid="group__libssh_1ga3ebf8d6920e563f3b032e3cd5277598e" compoundref="init_8c" startline="53" endline="61">ssh_init</references>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gaaa9bf406809735d4afc75ecd482ba89d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API int</type>
        <definition>int ssh_bind_set_callbacks</definition>
        <argsstring>(ssh_bind sshbind, ssh_bind_callbacks callbacks, void *userdata)</argsstring>
        <name>ssh_bind_set_callbacks</name>
        <param>
          <type>ssh_bind</type>
          <declname>sshbind</declname>
        </param>
        <param>
          <type>ssh_bind_callbacks</type>
          <declname>callbacks</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userdata</declname>
        </param>
        <briefdescription>
<para>Set the callback for this bind. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sshbind</parametername>
</parameternamelist>
<parameterdescription>
<para>The bind to set the callback on.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">callbacks</parametername>
</parameternamelist>
<parameterdescription>
<para>An already set up ssh_bind_callbacks instance.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">userdata</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to private data to pass to the callbacks.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SSH_OK on success, SSH_ERROR if an error occured.</para></simplesect>
<programlisting><codeline><highlight class="normal">struct<sp/>ssh_callbacks_struct<sp/>cb<sp/>=<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>.userdata<sp/>=<sp/>data,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>.auth_function<sp/>=<sp/>my_auth_function</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline><highlight class="normal">ssh_callbacks_init(&amp;cb);</highlight></codeline>
<codeline><highlight class="normal">ssh_bind_set_callbacks(session,<sp/>&amp;cb);</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="116" column="1" bodyfile="src/bind.c" bodystart="277" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gaf7e6f23c6934892d6a96011456b6c280" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API void</type>
        <definition>void ssh_bind_set_blocking</definition>
        <argsstring>(ssh_bind ssh_bind_o, int blocking)</argsstring>
        <name>ssh_bind_set_blocking</name>
        <param>
          <type>ssh_bind</type>
          <declname>ssh_bind_o</declname>
        </param>
        <param>
          <type>int</type>
          <declname>blocking</declname>
        </param>
        <briefdescription>
<para>Set the session to blocking/nonblocking mode. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ssh_bind_o</parametername>
</parameternamelist>
<parameterdescription>
<para>The ssh server bind to use.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>blocking</parametername>
</parameternamelist>
<parameterdescription>
<para>Zero for nonblocking mode. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="126" column="1" bodyfile="src/bind.c" bodystart="329" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1ga2b0d1842bf3892ce8b5ebd6c0c7db735" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API socket_t</type>
        <definition>socket_t ssh_bind_get_fd</definition>
        <argsstring>(ssh_bind ssh_bind_o)</argsstring>
        <name>ssh_bind_get_fd</name>
        <param>
          <type>ssh_bind</type>
          <declname>ssh_bind_o</declname>
        </param>
        <briefdescription>
<para>Recover the file descriptor from the session. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ssh_bind_o</parametername>
</parameternamelist>
<parameterdescription>
<para>The ssh server bind to get the fd from.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The file descriptor. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="135" column="1" bodyfile="src/bind.c" bodystart="333" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gacbba3e298a4493c7b9bfbee514df199c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API void</type>
        <definition>void ssh_bind_set_fd</definition>
        <argsstring>(ssh_bind ssh_bind_o, socket_t fd)</argsstring>
        <name>ssh_bind_set_fd</name>
        <param>
          <type>ssh_bind</type>
          <declname>ssh_bind_o</declname>
        </param>
        <param>
          <type>socket_t</type>
          <declname>fd</declname>
        </param>
        <briefdescription>
<para>Set the file descriptor for a session. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ssh_bind_o</parametername>
</parameternamelist>
<parameterdescription>
<para>The ssh server bind to set the fd.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>The file descriptssh_bind B </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="144" column="1" bodyfile="src/bind.c" bodystart="337" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gab69593f009137ccabafc18a98bd55546" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API void</type>
        <definition>void ssh_bind_fd_toaccept</definition>
        <argsstring>(ssh_bind ssh_bind_o)</argsstring>
        <name>ssh_bind_fd_toaccept</name>
        <param>
          <type>ssh_bind</type>
          <declname>ssh_bind_o</declname>
        </param>
        <briefdescription>
<para>Allow the file descriptor to accept new sessions. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ssh_bind_o</parametername>
</parameternamelist>
<parameterdescription>
<para>The ssh server bind to use. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="151" column="1" bodyfile="src/bind.c" bodystart="341" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1ga6609243446f1650243101e0a779dc822" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API int</type>
        <definition>int ssh_bind_accept</definition>
        <argsstring>(ssh_bind ssh_bind_o, ssh_session session)</argsstring>
        <name>ssh_bind_accept</name>
        <param>
          <type>ssh_bind</type>
          <declname>ssh_bind_o</declname>
        </param>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>Accept an incoming ssh connection and initialize the session. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ssh_bind_o</parametername>
</parameternamelist>
<parameterdescription>
<para>The ssh server bind to accept a connection. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>A preallocated ssh session </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__libssh__session_1gaadadc0f9601547c30db7c4d62017d32c" kindref="member">ssh_new</ref> </para></simplesect>
<simplesect kind="return"><para>SSH_OK when a connection is established </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="161" column="1" bodyfile="src/bind.c" bodystart="474" bodyend="502"/>
        <references refid="group__libssh__server_1ga142f1e2f79f6623f14dcfa40dccaa061" compoundref="bind_8c" startline="384" endline="472">ssh_bind_accept_fd</references>
        <references refid="group__libssh__socket_1gaa035e463e9a96923d81e01bfcf140d8d" compoundref="socket_8c" startline="377" endline="385">ssh_socket_free</references>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1ga142f1e2f79f6623f14dcfa40dccaa061" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API int</type>
        <definition>int ssh_bind_accept_fd</definition>
        <argsstring>(ssh_bind ssh_bind_o, ssh_session session, socket_t fd)</argsstring>
        <name>ssh_bind_accept_fd</name>
        <param>
          <type>ssh_bind</type>
          <declname>ssh_bind_o</declname>
        </param>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <param>
          <type>socket_t</type>
          <declname>fd</declname>
        </param>
        <briefdescription>
<para>Accept an incoming ssh connection on the given file descriptor and initialize the session. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ssh_bind_o</parametername>
</parameternamelist>
<parameterdescription>
<para>The ssh server bind to accept a connection. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>A preallocated ssh session </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>A file descriptor of an already established TCP inbound connection </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__libssh__session_1gaadadc0f9601547c30db7c4d62017d32c" kindref="member">ssh_new</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__server_1ga6609243446f1650243101e0a779dc822" kindref="member">ssh_bind_accept</ref> </para></simplesect>
<simplesect kind="return"><para>SSH_OK when a connection is established </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="175" column="1" bodyfile="src/bind.c" bodystart="384" bodyend="472"/>
        <references refid="group__libssh__socket_1gaa035e463e9a96923d81e01bfcf140d8d" compoundref="socket_8c" startline="377" endline="385">ssh_socket_free</references>
        <references refid="group__libssh__socket_1ga22e0c80420370cd8beded9cdf6f7da73" compoundref="socket_8c" startline="365" endline="372">ssh_socket_get_poll_handle_out</references>
        <references refid="group__libssh__socket_1gae616d257d1f37fcaf60f6d243fe4e964" compoundref="socket_8c" startline="141" endline="173">ssh_socket_new</references>
        <references refid="group__libssh__socket_1ga1bf2efced17e41fdd72719e1daee8851" compoundref="socket_8c" startline="462" endline="476">ssh_socket_set_fd</references>
        <referencedby refid="group__libssh__server_1ga6609243446f1650243101e0a779dc822" compoundref="bind_8c" startline="474" endline="502">ssh_bind_accept</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gab9ca89e12e290a701dced5f7c91bb677" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API ssh_gssapi_creds</type>
        <definition>LIBSSH_API ssh_gssapi_creds ssh_gssapi_get_creds</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_gssapi_get_creds</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>returns the client credentials of the connected client. </para>        </briefdescription>
        <detaileddescription>
<para>If the client has given a forwardable token, the SSH server will retrieve it. <simplesect kind="return"><para>gssapi credentials handle. </para></simplesect>
<simplesect kind="return"><para>NULL if no forwardable token is available. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="178" column="1" bodyfile="src/gssapi.c" bodystart="549" bodyend="553"/>
        <references refid="group__libssh__buffer_1ga0172920552b64c007420ee49a3f66ee1" compoundref="buffer_8c" startline="260" endline="274">buffer_add_ssh_string</references>
        <references refid="group__libssh__buffer_1ga208f7cc2f69191c717d4bfd5d153bca4" compoundref="buffer_8c" startline="650" endline="676">buffer_get_ssh_string</references>
        <references refid="group__libssh__buffer_1ga608cf73226454f21e8b2f9f1d838c5fc" compoundref="buffer_8c" startline="102" endline="115">ssh_buffer_free</references>
        <references refid="group__libssh__buffer_1ga4e6c650c6361809182bc2fa4e0cde982" compoundref="buffer_8c" startline="450" endline="452">ssh_buffer_get_begin</references>
        <references refid="group__libssh__buffer_1gad1594908ed57799f4a84066f47c3e7c0" compoundref="buffer_8c" startline="479" endline="481">ssh_buffer_get_len</references>
        <references refid="group__libssh__buffer_1gad877da63fd8d9a0ee00859bfbacf1eda" compoundref="buffer_8c" startline="195" endline="208">ssh_buffer_reinit</references>
        <references refid="group__libssh__session_1ga6ebcfc53884fdc5afb1607c94f8007d4" compoundref="dh_8c" startline="1089" endline="1112">ssh_get_hexa</references>
        <references refid="group__libssh__log_1gga06fc87d81c62e9abb8790b6e5713c55ba6445dfe21592d69d9741d319538b6673" compoundref="libssh_8h" startline="289">SSH_LOG_PACKET</references>
        <references refid="group__libssh__log_1gga06fc87d81c62e9abb8790b6e5713c55ba75fa79e63947b66462db977d9b5ae27c" compoundref="libssh_8h" startline="286">SSH_LOG_PROTOCOL</references>
        <references refid="group__libssh__log_1gga06fc87d81c62e9abb8790b6e5713c55ba12e6bbab0c5a667e259e2f9599a72550" compoundref="libssh_8h" startline="283">SSH_LOG_WARNING</references>
        <references refid="group__libssh__callbacks_1ga8fd26956f4e2b9bc57cfef26c50e321b" compoundref="callbacks_8h" startline="449">SSH_PACKET_CALLBACK</references>
        <references refid="group__libssh__callbacks_1gac29df803aa1295d6a498c1b081f3b494" compoundref="callbacks_8h" startline="436">SSH_PACKET_USED</references>
        <references refid="group__libssh__string_1gaf01673d22adbff92c88bcb6e30946ea6" compoundref="string_8c" startline="259" endline="265">ssh_string_data</references>
        <references refid="group__libssh__string_1gacd9c4eb69f7ecfdcf709deb8dde6a5a8" compoundref="string_8c" startline="272" endline="274">ssh_string_free</references>
        <references refid="group__libssh__string_1ga331553369afbfcb4f5300729ed65d0fe" compoundref="string_8c" startline="131" endline="144">ssh_string_len</references>
        <references refid="group__libssh__string_1gaedd3d6073cee901aaa288712896d0f28" compoundref="string_8c" startline="53" endline="69">ssh_string_new</references>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gab60c37350653eb3b65a99ac089c55830" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API int</type>
        <definition>int ssh_handle_key_exchange</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_handle_key_exchange</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>Handles the key exchange and set up encryption. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>A connected ssh session </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__libssh__server_1ga6609243446f1650243101e0a779dc822" kindref="member">ssh_bind_accept</ref> </para></simplesect>
<simplesect kind="return"><para>SSH_OK if the key exchange was successful </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="187" column="1" bodyfile="src/server.c" bodystart="564" bodyend="599"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gaa7650d22d982a82bf328345c04948cdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API void</type>
        <definition>void ssh_bind_free</definition>
        <argsstring>(ssh_bind ssh_bind_o)</argsstring>
        <name>ssh_bind_free</name>
        <param>
          <type>ssh_bind</type>
          <declname>ssh_bind_o</declname>
        </param>
        <briefdescription>
<para>Free a ssh servers bind. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ssh_bind_o</parametername>
</parameternamelist>
<parameterdescription>
<para>The ssh server bind to free. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="194" column="1" bodyfile="src/bind.c" bodystart="345" bodyend="382"/>
        <references refid="group__libssh__pki_1ga08808beb83a42ccd6f1c710ddeb1b4c2" compoundref="pki_8c" startline="178" endline="183">ssh_key_free</references>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gabbfb96c938e33a8dddebaff29f25e0c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API void</type>
        <definition>void ssh_set_auth_methods</definition>
        <argsstring>(ssh_session session, int auth_methods)</argsstring>
        <name>ssh_set_auth_methods</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <param>
          <type>int</type>
          <declname>auth_methods</declname>
        </param>
        <briefdescription>
<para>Set the acceptable authentication methods to be sent to client. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>the SSH server session </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">auth_methods</parametername>
</parameternamelist>
<parameterdescription>
<para>Bitfield of authentication methods to be accepted, e.g. SSH_AUTH_METHOD_PUBLICKEY </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="196" column="1" bodyfile="src/server.c" bodystart="558" bodyend="561"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1ga6e78c8f369333289d245931deed92573" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API int</type>
        <definition>int ssh_message_reply_default</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_reply_default</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Reply with a standard reject message. </para>        </briefdescription>
        <detaileddescription>
<para>Use this function if you don&apos;t know what to respond or if you want to reject a request.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to use for the reply.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, -1 on error.</para></simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__messages_1ga8e536b6f1c824b7ca43d0e8f954b3bd4" kindref="member">ssh_message_get()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="214" column="1" bodyfile="src/server.c" bodystart="787" bodyend="811"/>
        <references refid="group__libssh__server_1gaa8a38b0ea0e5ee2bce17eab77dfc850c" compoundref="server_8c" startline="606" endline="656">ssh_auth_reply_default</references>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gad05353966b70d7f04a3b7aed07a817cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API const char *</type>
        <definition>const char * ssh_message_auth_user</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_auth_user</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Get the name of the authenticated user. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to get the username from.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The username or NULL if an error occured.</para></simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__messages_1ga8e536b6f1c824b7ca43d0e8f954b3bd4" kindref="member">ssh_message_get()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__messages_1ga20fc6e536f170b98c7d62ce3675d8cdb" kindref="member">ssh_message_type()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="226" column="1" bodyfile="src/server.c" bodystart="820" bodyend="826"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gab434b45d3f542ab24735bba6432de85d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API const char *</type>
        <definition>const char * ssh_message_auth_password</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_auth_password</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Get the password of the authenticated user. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to get the password from.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The username or NULL if an error occured.</para></simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__messages_1ga8e536b6f1c824b7ca43d0e8f954b3bd4" kindref="member">ssh_message_get()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__messages_1ga20fc6e536f170b98c7d62ce3675d8cdb" kindref="member">ssh_message_type()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="238" column="1" bodyfile="src/server.c" bodystart="828" bodyend="834"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1ga97e909b1d89b4c4747eb5b80ac9fd215" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API ssh_key</type>
        <definition>ssh_key ssh_message_auth_pubkey</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_auth_pubkey</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Get the publickey of the authenticated user. </para>        </briefdescription>
        <detaileddescription>
<para>If you need the key for later user you should duplicate it.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to get the public key from.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The public key or NULL.</para></simplesect>
<simplesect kind="see"><para>ssh_key_dup() </para></simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__pki_1ga4dc33945294c2bbd671365a9d3db8e2f" kindref="member">ssh_key_cmp()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__messages_1ga8e536b6f1c824b7ca43d0e8f954b3bd4" kindref="member">ssh_message_get()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__messages_1ga20fc6e536f170b98c7d62ce3675d8cdb" kindref="member">ssh_message_type()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="254" column="1" bodyfile="src/server.c" bodystart="836" bodyend="842"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1ga5132c82c49de985e9e10f51f393e52a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API int</type>
        <definition>int ssh_message_auth_kbdint_is_response</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_auth_kbdint_is_response</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="256" column="1" bodyfile="src/server.c" bodystart="860" bodyend="866"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gafcb928250ef8169f4823dadab217b4fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API enum ssh_publickey_state_e</type>
        <definition>enum ssh_publickey_state_e ssh_message_auth_publickey_state</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_auth_publickey_state</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="257" column="1" bodyfile="src/server.c" bodystart="853" bodyend="858"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gac338ce3b49e097a6b9b75b92666cac96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API int</type>
        <definition>int ssh_message_auth_reply_success</definition>
        <argsstring>(ssh_message msg, int partial)</argsstring>
        <name>ssh_message_auth_reply_success</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>partial</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="258" column="1" bodyfile="src/server.c" bodystart="1013" bodyend="1017"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1ga2ce88786e073b36991fc96c8f6b58c09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API int</type>
        <definition>int ssh_message_auth_reply_pk_ok</definition>
        <argsstring>(ssh_message msg, ssh_string algo, ssh_string pubkey)</argsstring>
        <name>ssh_message_auth_reply_pk_ok</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>ssh_string</type>
          <declname>algo</declname>
        </param>
        <param>
          <type>ssh_string</type>
          <declname>pubkey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="259" column="1" bodyfile="src/server.c" bodystart="1020" bodyend="1038"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1ga98321ead09cda145a08603d481a62a9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API int</type>
        <definition>int ssh_message_auth_reply_pk_ok_simple</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_auth_reply_pk_ok_simple</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="260" column="1" bodyfile="src/server.c" bodystart="1040" bodyend="1062"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gab993157d98e5b4b3399d216c9243effc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API int</type>
        <definition>int ssh_message_auth_set_methods</definition>
        <argsstring>(ssh_message msg, int methods)</argsstring>
        <name>ssh_message_auth_set_methods</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>methods</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="262" column="1" bodyfile="src/server.c" bodystart="868" bodyend="876"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gaacbc31ce3b39ac93061164feec822c77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API int</type>
        <definition>int ssh_message_auth_interactive_request</definition>
        <argsstring>(ssh_message msg, const char *name, const char *instruction, unsigned int num_prompts, const char **prompts, char *echo)</argsstring>
        <name>ssh_message_auth_interactive_request</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>instruction</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>num_prompts</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>prompts</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>echo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="264" column="1" bodyfile="src/server.c" bodystart="878" bodyend="981"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gad0bd348b84300149f017f5abbaff38f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API int</type>
        <definition>int ssh_message_service_reply_success</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_service_reply_success</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="268" column="1" bodyfile="src/server.c" bodystart="711" bodyend="733"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1ga9f9dedae252c1b786b1213c84ac90baa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API const char *</type>
        <definition>const char * ssh_message_service_service</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_service_service</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="269" column="1" bodyfile="src/server.c" bodystart="813" bodyend="818"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1ga9c09466e299aff371b2fba996054a6a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API int</type>
        <definition>int ssh_message_global_request_reply_success</definition>
        <argsstring>(ssh_message msg, uint16_t bound_port)</argsstring>
        <name>ssh_message_global_request_reply_success</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>bound_port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="271" column="1" bodyfile="src/server.c" bodystart="735" bodyend="767"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gaccad877b20fca2d4a7eda5bebc1f5af1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API void</type>
        <definition>void ssh_set_message_callback</definition>
        <argsstring>(ssh_session session, int(*ssh_bind_message_callback)(ssh_session session, ssh_message msg, void *data), void *data)</argsstring>
        <name>ssh_set_message_callback</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <param>
          <type>int(*)(ssh_session session, ssh_message msg, void *data)</type>
          <declname>ssh_bind_message_callback</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>defines the ssh_message callback </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>the current ssh session </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ssh_bind_message_callback</parametername>
</parameternamelist>
<parameterdescription>
<para>a function pointer to a callback taking the current ssh session and received message as parameters. the function returns 0 if the message has been parsed and treated successfully, 1 otherwise (libssh must take care of the response). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>void pointer to be passed to callback functions </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="274" column="1" bodyfile="src/server.c" bodystart="1153" bodyend="1158"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gac5c9893e27dad15af4bd2dd8abc4760c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API int</type>
        <definition>int ssh_execute_message_callbacks</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_execute_message_callbacks</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="277" column="1" bodyfile="src/server.c" bodystart="1160" bodyend="1188"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1ga0df64acc64787532205f6e85e5fbc4fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API const char *</type>
        <definition>const char * ssh_message_channel_request_open_originator</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_channel_request_open_originator</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="279" column="1" bodyfile="src/server.c" bodystart="1065" bodyend="1067"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gaf24d0f28aca42d1b26e5a08fe4abc9fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API int</type>
        <definition>int ssh_message_channel_request_open_originator_port</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_channel_request_open_originator_port</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="280" column="1" bodyfile="src/server.c" bodystart="1069" bodyend="1071"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1ga42f8b0980f73c9af36a0b5e4e3ba7a04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API const char *</type>
        <definition>const char * ssh_message_channel_request_open_destination</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_channel_request_open_destination</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="281" column="1" bodyfile="src/server.c" bodystart="1073" bodyend="1075"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gaf8b7350f50918f37f331efe2099ffa8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API int</type>
        <definition>int ssh_message_channel_request_open_destination_port</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_channel_request_open_destination_port</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="282" column="1" bodyfile="src/server.c" bodystart="1077" bodyend="1079"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1ga813cf45163230416cd179cd1dadc4118" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API ssh_channel</type>
        <definition>ssh_channel ssh_message_channel_request_channel</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_channel_request_channel</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="284" column="1" bodyfile="src/server.c" bodystart="1081" bodyend="1083"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1ga06f1578033ad6f3741f1c3b8e2322d2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API const char *</type>
        <definition>const char * ssh_message_channel_request_pty_term</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_channel_request_pty_term</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="286" column="1" bodyfile="src/server.c" bodystart="1085" bodyend="1087"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1ga6f96b1cee5ae05dabea404c5d40b50e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API int</type>
        <definition>int ssh_message_channel_request_pty_width</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_channel_request_pty_width</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="287" column="1" bodyfile="src/server.c" bodystart="1089" bodyend="1091"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gac793c0d76e4b5856f15ad0ed0afaa1d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API int</type>
        <definition>int ssh_message_channel_request_pty_height</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_channel_request_pty_height</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="288" column="1" bodyfile="src/server.c" bodystart="1093" bodyend="1095"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1ga9fe9493be6347da72ec3d55d6d58b9c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API int</type>
        <definition>int ssh_message_channel_request_pty_pxwidth</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_channel_request_pty_pxwidth</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="289" column="1" bodyfile="src/server.c" bodystart="1097" bodyend="1099"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gacc10bc19a556898628ca239fb013d3b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API int</type>
        <definition>int ssh_message_channel_request_pty_pxheight</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_channel_request_pty_pxheight</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="290" column="1" bodyfile="src/server.c" bodystart="1101" bodyend="1103"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gaa42c1e6e4224ca04ee34d9be1296ff44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API const char *</type>
        <definition>const char * ssh_message_channel_request_env_name</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_channel_request_env_name</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="292" column="1" bodyfile="src/server.c" bodystart="1105" bodyend="1107"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1ga88cd6877143ea23c371b19eed3b94474" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API const char *</type>
        <definition>const char * ssh_message_channel_request_env_value</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_channel_request_env_value</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="293" column="1" bodyfile="src/server.c" bodystart="1109" bodyend="1111"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1ga9042b6943d0b34efb8a7deb82a275c55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API const char *</type>
        <definition>const char * ssh_message_channel_request_command</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_channel_request_command</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="295" column="1" bodyfile="src/server.c" bodystart="1113" bodyend="1115"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gaf0f6570120b742f303b974f4fca3288a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API const char *</type>
        <definition>const char * ssh_message_channel_request_subsystem</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_channel_request_subsystem</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="297" column="1" bodyfile="src/server.c" bodystart="1117" bodyend="1119"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gaa0e03d4be51727ff7341efb48d0e3f98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API int</type>
        <definition>int ssh_message_channel_request_x11_single_connection</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_channel_request_x11_single_connection</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="299" column="1" bodyfile="src/server.c" bodystart="1121" bodyend="1123"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gaca48ee1e17dea412e136659f82051ef0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API const char *</type>
        <definition>const char * ssh_message_channel_request_x11_auth_protocol</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_channel_request_x11_auth_protocol</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="300" column="1" bodyfile="src/server.c" bodystart="1125" bodyend="1127"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1ga2b0f472aaa4ac8ed8562c167505e2534" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API const char *</type>
        <definition>const char * ssh_message_channel_request_x11_auth_cookie</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_channel_request_x11_auth_cookie</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="301" column="1" bodyfile="src/server.c" bodystart="1129" bodyend="1131"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gaf802b2a7e21e1026cc50c13133a33344" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API int</type>
        <definition>int ssh_message_channel_request_x11_screen_number</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_channel_request_x11_screen_number</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="302" column="1" bodyfile="src/server.c" bodystart="1133" bodyend="1135"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1ga4b06e2be400a34f8b99e913fffc6b994" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API const char *</type>
        <definition>const char * ssh_message_global_request_address</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_global_request_address</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="304" column="1" bodyfile="src/server.c" bodystart="1137" bodyend="1139"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1ga2df15146bcf25bbf9e97bdd4b1728e40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API int</type>
        <definition>int ssh_message_global_request_port</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_global_request_port</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="305" column="1" bodyfile="src/server.c" bodystart="1141" bodyend="1143"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gae372d2f97205d23493dd856eedf95f22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API int</type>
        <definition>LIBSSH_API int ssh_channel_open_reverse_forward</definition>
        <argsstring>(ssh_channel channel, const char *remotehost, int remoteport, const char *sourcehost, int localport)</argsstring>
        <name>ssh_channel_open_reverse_forward</name>
        <param>
          <type>ssh_channel</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>remotehost</declname>
        </param>
        <param>
          <type>int</type>
          <declname>remoteport</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>sourcehost</declname>
        </param>
        <param>
          <type>int</type>
          <declname>localport</declname>
        </param>
        <briefdescription>
<para>Open a TCP/IP reverse forwarding channel. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>An allocated channel.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">remotehost</parametername>
</parameternamelist>
<parameterdescription>
<para>The remote host to connected (host name or IP).</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">remoteport</parametername>
</parameternamelist>
<parameterdescription>
<para>The remote port.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sourcehost</parametername>
</parameternamelist>
<parameterdescription>
<para>The source host (your local computer). It&apos;s optional and for logging purpose.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">localport</parametername>
</parameternamelist>
<parameterdescription>
<para>The source port (your local computer). It&apos;s optional and for logging purpose.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SSH_OK on success, SSH_ERROR if an error occurred, SSH_AGAIN if in nonblocking mode and call has to be done again.</para></simplesect>
<simplesect kind="warning"><para>This function does not bind the local port and does not automatically forward the content of a socket to the channel. You still have to use channel_read and channel_write for this. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="307" column="1" bodyfile="src/channels.c" bodystart="3204" bodyend="3248"/>
        <references refid="group__libssh__buffer_1ga7ecc914104a5bf0da485d3e42f6a7d3b" compoundref="buffer_8c" startline="86" endline="95">ssh_buffer_new</references>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gab3688d962a1865ae2d0df9eb1f83c8fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API int</type>
        <definition>LIBSSH_API int ssh_channel_open_x11</definition>
        <argsstring>(ssh_channel channel, const char *orig_addr, int orig_port)</argsstring>
        <name>ssh_channel_open_x11</name>
        <param>
          <type>ssh_channel</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>orig_addr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>orig_port</declname>
        </param>
        <briefdescription>
<para>Open a X11 channel. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>An allocated channel.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">orig_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>The source host (the local server).</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">orig_port</parametername>
</parameternamelist>
<parameterdescription>
<para>The source port (the local server).</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SSH_OK on success, SSH_ERROR if an error occurred, SSH_AGAIN if in nonblocking mode and call has to be done again. </para></simplesect>
<simplesect kind="warning"><para>This function does not bind the local port and does not automatically forward the content of a socket to the channel. You still have to use channel_read and channel_write for this. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="309" column="1" bodyfile="src/channels.c" bodystart="3267" bodyend="3310"/>
        <references refid="group__libssh__buffer_1ga7ecc914104a5bf0da485d3e42f6a7d3b" compoundref="buffer_8c" startline="86" endline="95">ssh_buffer_new</references>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1ga7325dd7617635e99f6e62921cb4e0406" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API int</type>
        <definition>LIBSSH_API int ssh_channel_request_send_exit_status</definition>
        <argsstring>(ssh_channel channel, int exit_status)</argsstring>
        <name>ssh_channel_request_send_exit_status</name>
        <param>
          <type>ssh_channel</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>int</type>
          <declname>exit_status</declname>
        </param>
        <briefdescription>
<para>Send the exit status to the remote process. </para>        </briefdescription>
        <detaileddescription>
<para>Sends the exit status to the remote process (as described in RFC 4254, section 6.10). Only SSH-v2 is supported (I&apos;m not sure about SSH-v1).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel to send exit status.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">exit_status</parametername>
</parameternamelist>
<parameterdescription>
<para>The exit status to send</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SSH_OK on success, SSH_ERROR if an error occurred. (including attempts to send exit status via SSH-v1 session). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="312" column="1" bodyfile="src/channels.c" bodystart="3326" bodyend="3356"/>
        <references refid="group__libssh__buffer_1ga7ecc914104a5bf0da485d3e42f6a7d3b" compoundref="buffer_8c" startline="86" endline="95">ssh_buffer_new</references>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gaca9d5a6b5d8d82496b46267337088a51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API int</type>
        <definition>LIBSSH_API int ssh_channel_request_send_exit_signal</definition>
        <argsstring>(ssh_channel channel, const char *signum, int core, const char *errmsg, const char *lang)</argsstring>
        <name>ssh_channel_request_send_exit_signal</name>
        <param>
          <type>ssh_channel</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>signum</declname>
          <defname>sig</defname>
        </param>
        <param>
          <type>int</type>
          <declname>core</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>errmsg</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>lang</declname>
        </param>
        <briefdescription>
<para>Send an exit signal to remote process (RFC 4254, section 6.10). </para>        </briefdescription>
        <detaileddescription>
<para>This sends the exit status of the remote process. Note, that remote system may not support signals concept. In such a case this request will be silently ignored. Only SSH-v2 is supported (I&apos;m not sure about SSH-v1).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel to send signal.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sig</parametername>
</parameternamelist>
<parameterdescription>
<para>The signal to send (without SIG prefix) (e.g. &quot;TERM&quot; or &quot;KILL&quot;). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">core</parametername>
</parameternamelist>
<parameterdescription>
<para>A boolean to tell if a core was dumped </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">errmsg</parametername>
</parameternamelist>
<parameterdescription>
<para>A CRLF explanation text about the error condition </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">lang</parametername>
</parameternamelist>
<parameterdescription>
<para>The language used in the message (format: RFC 3066)</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SSH_OK on success, SSH_ERROR if an error occurred (including attempts to send signal via SSH-v1 session). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="314" column="1" bodyfile="src/channels.c" bodystart="3377" bodyend="3416"/>
        <references refid="group__libssh__buffer_1ga7ecc914104a5bf0da485d3e42f6a7d3b" compoundref="buffer_8c" startline="86" endline="95">ssh_buffer_new</references>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1ga76c7578b4e418f8105ba89471293b4c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API int</type>
        <definition>LIBSSH_API int ssh_channel_write_stderr</definition>
        <argsstring>(ssh_channel channel, const void *data, uint32_t len)</argsstring>
        <name>ssh_channel_write_stderr</name>
        <param>
          <type>ssh_channel</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Blocking write on a channel stderr. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel to write to.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the data to write.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of the buffer to write to.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of bytes written, SSH_ERROR on error.</para></simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__channel_1gac92381c4c5d4a7eab35f6e84686f033d" kindref="member">ssh_channel_read()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="319" column="1" bodyfile="src/channels.c" bodystart="3176" bodyend="3178"/>
        <referencedby refid="classssh_1_1_channel_1a06cf7ffd971eff87783a169444fa09a2" compoundref="libsshpp_8hpp" startline="577" endline="586">ssh::Channel::write</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gaa1ac2e1b7fdc23fd7e253aa9f0a47e7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API int</type>
        <definition>int ssh_send_keepalive</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_send_keepalive</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="323" column="1" bodyfile="src/server.c" bodystart="1190" bodyend="1216"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1ga53d5802c20e1fcdee5aedae59670e693" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SSH_DEPRECATED LIBSSH_API int</type>
        <definition>SSH_DEPRECATED LIBSSH_API int ssh_accept</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_accept</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="326" column="1" bodyfile="src/legacy.c" bodystart="711" bodyend="713"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1ga4df894b92717afb7f8791182f21a9a6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SSH_DEPRECATED LIBSSH_API int</type>
        <definition>SSH_DEPRECATED LIBSSH_API int channel_write_stderr</definition>
        <argsstring>(ssh_channel channel, const void *data, uint32_t len)</argsstring>
        <name>channel_write_stderr</name>
        <param>
          <type>ssh_channel</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="327" column="1" bodyfile="src/legacy.c" bodystart="715" bodyend="717"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/libssh/server.h"/>
  </compounddef>
</doxygen>
