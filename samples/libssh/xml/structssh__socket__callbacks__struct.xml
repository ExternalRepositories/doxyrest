<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structssh__socket__callbacks__struct" kind="struct" language="C++" prot="public">
    <compoundname>ssh_socket_callbacks_struct</compoundname>
    <includes refid="callbacks_8h" local="no">include/libssh/callbacks.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structssh__socket__callbacks__struct_1a95c6b5344b5af43e28402419f24304bb" prot="public" static="no" mutable="no">
        <type>void *</type>
        <definition>void* ssh_socket_callbacks::userdata</definition>
        <argsstring></argsstring>
        <name>userdata</name>
        <briefdescription>
<para>User-provided data. </para>        </briefdescription>
        <detaileddescription>
<para>User is free to set anything he wants here </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/callbacks.h" line="367" column="1" bodyfile="include/libssh/callbacks.h" bodystart="367" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structssh__socket__callbacks__struct_1a847925e298ebc2cf424e35f782c27bd1" prot="public" static="no" mutable="no">
        <type><ref refid="group__libssh__callbacks_1gaf06fe7d0b8cd8a5aab0a19ad7c6140b9" kindref="member">ssh_callback_data</ref></type>
        <definition>ssh_callback_data ssh_socket_callbacks::data</definition>
        <argsstring></argsstring>
        <name>data</name>
        <briefdescription>
<para>This function will be called each time data appears on socket. </para>        </briefdescription>
        <detaileddescription>
<para>The data not consumed will appear on the next data event. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/callbacks.h" line="372" column="1" bodyfile="include/libssh/callbacks.h" bodystart="372" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structssh__socket__callbacks__struct_1ae46949c0769fcdce94280888a3301d2d" prot="public" static="no" mutable="no">
        <type><ref refid="group__libssh__callbacks_1ga47b833f21a2b7145e421e63cad14b3d4" kindref="member">ssh_callback_int</ref></type>
        <definition>ssh_callback_int ssh_socket_callbacks::controlflow</definition>
        <argsstring></argsstring>
        <name>controlflow</name>
        <briefdescription>
<para>This function will be called each time a controlflow state changes, i.e. </para>        </briefdescription>
        <detaileddescription>
<para>the socket is available for reading or writing. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/callbacks.h" line="376" column="1" bodyfile="include/libssh/callbacks.h" bodystart="376" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structssh__socket__callbacks__struct_1a9683522c399bbfe7116e2cda2c357478" prot="public" static="no" mutable="no">
        <type>ssh_callback_int_int</type>
        <definition>ssh_callback_int_int ssh_socket_callbacks::exception</definition>
        <argsstring></argsstring>
        <name>exception</name>
        <briefdescription>
<para>This function will be called each time an exception appears on socket. </para>        </briefdescription>
        <detaileddescription>
<para>An exception can be a socket problem (timeout, ...) or an end-of-file. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/callbacks.h" line="380" column="1" bodyfile="include/libssh/callbacks.h" bodystart="380" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structssh__socket__callbacks__struct_1aea8fb026a6859ad8c6a115f4698243a6" prot="public" static="no" mutable="no">
        <type>ssh_callback_int_int</type>
        <definition>ssh_callback_int_int ssh_socket_callbacks::connected</definition>
        <argsstring></argsstring>
        <name>connected</name>
        <briefdescription>
<para>This function is called when the ssh_socket_connect was used on the socket on nonblocking state, and the connection successed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/callbacks.h" line="384" column="1" bodyfile="include/libssh/callbacks.h" bodystart="384" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>These are the callbacks exported by the socket structure They are called by the socket module when a socket event appears. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/libssh/callbacks.h" line="363" column="1" bodyfile="include/libssh/callbacks.h" bodystart="363" bodyend="385"/>
    <listofallmembers>
      <member refid="structssh__socket__callbacks__struct_1aea8fb026a6859ad8c6a115f4698243a6" prot="public" virt="non-virtual"><scope>ssh_socket_callbacks_struct</scope><name>connected</name></member>
      <member refid="structssh__socket__callbacks__struct_1ae46949c0769fcdce94280888a3301d2d" prot="public" virt="non-virtual"><scope>ssh_socket_callbacks_struct</scope><name>controlflow</name></member>
      <member refid="structssh__socket__callbacks__struct_1a847925e298ebc2cf424e35f782c27bd1" prot="public" virt="non-virtual"><scope>ssh_socket_callbacks_struct</scope><name>data</name></member>
      <member refid="structssh__socket__callbacks__struct_1a9683522c399bbfe7116e2cda2c357478" prot="public" virt="non-virtual"><scope>ssh_socket_callbacks_struct</scope><name>exception</name></member>
      <member refid="structssh__socket__callbacks__struct_1a95c6b5344b5af43e28402419f24304bb" prot="public" virt="non-virtual"><scope>ssh_socket_callbacks_struct</scope><name>userdata</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
