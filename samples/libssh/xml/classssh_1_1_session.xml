<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classssh_1_1_session" kind="class" language="C++" prot="public">
    <compoundname>ssh::Session</compoundname>
    <includes refid="libsshpp_8hpp" local="no">include/libssh/libsshpp.hpp</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classssh_1_1_session_1ac47342240f21ce36f47485e4ab41a10d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Channel</definition>
        <argsstring></argsstring>
        <name>Channel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="127" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="127" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classssh_1_1_session_1a8f3f99647f051239b3d1ba87b0dd6969" prot="private" static="no" mutable="no">
        <type>ssh_session</type>
        <definition>ssh_session ssh::Session::c_session</definition>
        <argsstring></argsstring>
        <name>c_session</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="382" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="382" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classssh_1_1_session_1a19f9c19d925bb991401fe4503305fea1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ssh::Session::Session</definition>
        <argsstring>()</argsstring>
        <name>Session</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="129" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="129" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_session_1ae07d004bb4cee8a4c1a73f829363893d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ssh::Session::~Session</definition>
        <argsstring>()</argsstring>
        <name>~Session</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="132" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="132" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_session_1ad19ae4a0927094c12f383907cbf40ccc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ssh::Session::setOption</definition>
        <argsstring>(enum ssh_options_e type, const char *option)</argsstring>
        <name>setOption</name>
        <param>
          <type>enum ssh_options_e</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>option</declname>
        </param>
        <briefdescription>
<para>sets an SSH session options </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of option </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>option</parametername>
</parameternamelist>
<parameterdescription>
<para>cstring containing the value of option </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classssh_1_1_ssh_exception" kindref="compound">SshException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>on error </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__libssh__session_1ga7a801b85800baa3f4e16f5b47db0a73d" kindref="member">ssh_options_set</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="142" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="142" bodyend="145"/>
        <references refid="group__libssh__session_1ga7a801b85800baa3f4e16f5b47db0a73d" compoundref="options_8c" startline="382" endline="868">ssh_options_set</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_session_1ad6dc221d1212370608516c89115f6470" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ssh::Session::setOption</definition>
        <argsstring>(enum ssh_options_e type, long int option)</argsstring>
        <name>setOption</name>
        <param>
          <type>enum ssh_options_e</type>
          <declname>type</declname>
        </param>
        <param>
          <type>long int</type>
          <declname>option</declname>
        </param>
        <briefdescription>
<para>sets an SSH session options </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of option </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>option</parametername>
</parameternamelist>
<parameterdescription>
<para>long integer containing the value of option </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classssh_1_1_ssh_exception" kindref="compound">SshException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>on error </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__libssh__session_1ga7a801b85800baa3f4e16f5b47db0a73d" kindref="member">ssh_options_set</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="152" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="152" bodyend="155"/>
        <references refid="group__libssh__session_1ga7a801b85800baa3f4e16f5b47db0a73d" compoundref="options_8c" startline="382" endline="868">ssh_options_set</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_session_1a1bd14b987212698c146ed05f25454046" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ssh::Session::setOption</definition>
        <argsstring>(enum ssh_options_e type, void *option)</argsstring>
        <name>setOption</name>
        <param>
          <type>enum ssh_options_e</type>
          <declname>type</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>option</declname>
        </param>
        <briefdescription>
<para>sets an SSH session options </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of option </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>option</parametername>
</parameternamelist>
<parameterdescription>
<para>void pointer containing the value of option </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classssh_1_1_ssh_exception" kindref="compound">SshException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>on error </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__libssh__session_1ga7a801b85800baa3f4e16f5b47db0a73d" kindref="member">ssh_options_set</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="162" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="162" bodyend="165"/>
        <references refid="group__libssh__session_1ga7a801b85800baa3f4e16f5b47db0a73d" compoundref="options_8c" startline="382" endline="868">ssh_options_set</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_session_1a2a88d7dd524e81cb9152a87cb6fefc40" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ssh::Session::connect</definition>
        <argsstring>()</argsstring>
        <name>connect</name>
        <briefdescription>
<para>connects to the remote host </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classssh_1_1_ssh_exception" kindref="compound">SshException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>on error </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__libssh__session_1ga032e07cbd8bc3f14cb2dd375db0b03d7" kindref="member">ssh_connect</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="170" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="170" bodyend="174"/>
        <references refid="group__libssh__session_1ga032e07cbd8bc3f14cb2dd375db0b03d7" compoundref="client_8c" startline="528" endline="634">ssh_connect</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_session_1a651141f9bcf5792644f6d411ab2cc0c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ssh::Session::userauthPublickeyAuto</definition>
        <argsstring>(void)</argsstring>
        <name>userauthPublickeyAuto</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Authenticates automatically using public key. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classssh_1_1_ssh_exception" kindref="compound">SshException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>on error </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SSH_AUTH_SUCCESS, SSH_AUTH_PARTIAL, SSH_AUTH_DENIED </para></simplesect>
<simplesect kind="see"><para>ssh_userauth_autopubkey </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="180" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="180" bodyend="184"/>
        <references refid="group__libssh__auth_1ga53e6771b250c061463ed98b6e5b6e0af" compoundref="auth_8c" startline="906" endline="1088">ssh_userauth_publickey_auto</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_session_1a988398835fc131b0eb5a83a4adaec532" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ssh::Session::userauthNone</definition>
        <argsstring>()</argsstring>
        <name>userauthNone</name>
        <briefdescription>
<para>Authenticates using the &quot;none&quot; method. </para>        </briefdescription>
        <detaileddescription>
<para>Prefer using autopubkey if possible. <parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classssh_1_1_ssh_exception" kindref="compound">SshException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>on error </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SSH_AUTH_SUCCESS, SSH_AUTH_PARTIAL, SSH_AUTH_DENIED </para></simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__auth_1ga58e7c265236edbc97a2f117d3f23b4dd" kindref="member">ssh_userauth_none</ref> </para></simplesect>
<simplesect kind="see"><para>Session::userauthAutoPubkey </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="192" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="192" bodyend="196"/>
        <references refid="group__libssh__auth_1ga58e7c265236edbc97a2f117d3f23b4dd" compoundref="auth_8c" startline="354" endline="411">ssh_userauth_none</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_session_1ac2d10826877bec6598961614eb62f0f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ssh::Session::userauthPassword</definition>
        <argsstring>(const char *password)</argsstring>
        <name>userauthPassword</name>
        <param>
          <type>const char *</type>
          <declname>password</declname>
        </param>
        <briefdescription>
<para>Authenticates using the password method. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">password</parametername>
</parameternamelist>
<parameterdescription>
<para>password to use for authentication </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classssh_1_1_ssh_exception" kindref="compound">SshException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>on error </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SSH_AUTH_SUCCESS, SSH_AUTH_PARTIAL, SSH_AUTH_DENIED </para></simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__auth_1ga50c0c150f8c4703e7ee49b3e3e3ca215" kindref="member">ssh_userauth_password</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="203" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="203" bodyend="207"/>
        <references refid="group__libssh__auth_1ga50c0c150f8c4703e7ee49b3e3e3ca215" compoundref="auth_8c" startline="1122" endline="1185">ssh_userauth_password</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_session_1afb635d7f84b000bbabb09a86ad5ad074" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ssh::Session::userauthTryPublickey</definition>
        <argsstring>(ssh_key pubkey)</argsstring>
        <name>userauthTryPublickey</name>
        <param>
          <type>ssh_key</type>
          <declname>pubkey</declname>
        </param>
        <briefdescription>
<para>Try to authenticate using the publickey method. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pubkey</parametername>
</parameternamelist>
<parameterdescription>
<para>public key to use for authentication </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classssh_1_1_ssh_exception" kindref="compound">SshException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>on error </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SSH_AUTH_SUCCESS if the pubkey is accepted, </para></simplesect>
<simplesect kind="return"><para>SSH_AUTH_DENIED if the pubkey is denied </para></simplesect>
<simplesect kind="see"><para>ssh_userauth_try_pubkey </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="215" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="215" bodyend="219"/>
        <references refid="group__libssh__auth_1ga592f673c4d417a6a46cd4876ac8287aa" compoundref="auth_8c" startline="441" endline="524">ssh_userauth_try_publickey</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_session_1a6dd49ee38bf24c31c5e0e28dc2af07b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ssh::Session::userauthPublickey</definition>
        <argsstring>(ssh_key privkey)</argsstring>
        <name>userauthPublickey</name>
        <param>
          <type>ssh_key</type>
          <declname>privkey</declname>
        </param>
        <briefdescription>
<para>Authenticates using the publickey method. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">privkey</parametername>
</parameternamelist>
<parameterdescription>
<para>private key to use for authentication </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classssh_1_1_ssh_exception" kindref="compound">SshException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>on error </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SSH_AUTH_SUCCESS, SSH_AUTH_PARTIAL, SSH_AUTH_DENIED </para></simplesect>
<simplesect kind="see"><para>ssh_userauth_pubkey </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="226" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="226" bodyend="230"/>
        <references refid="group__libssh__auth_1gaa38c4f3194ef36720da7eddb0aa99e23" compoundref="auth_8c" startline="550" endline="645">ssh_userauth_publickey</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_session_1a85c7eb65686658f2c23aa2a5e1e29edd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh::Session::userauthPrivatekeyFile</definition>
        <argsstring>(const char *filename, const char *passphrase)</argsstring>
        <name>userauthPrivatekeyFile</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>passphrase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="231" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_session_1a08d70b5cdb5bd1a2a8f5f9ebbdf67b3b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ssh::Session::getAuthList</definition>
        <argsstring>()</argsstring>
        <name>getAuthList</name>
        <briefdescription>
<para>Returns the available authentication methods from the server. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classssh_1_1_ssh_exception" kindref="compound">SshException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>on error </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Bitfield of available methods. </para></simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__auth_1ga35d44897a44b4bb3b7c01108c1812a37" kindref="member">ssh_userauth_list</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="238" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="238" bodyend="242"/>
        <references refid="group__libssh__auth_1ga35d44897a44b4bb3b7c01108c1812a37" compoundref="auth_8c" startline="318" endline="333">ssh_userauth_list</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_session_1aaa6972fe2757370a0cf2b90576eb6edc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ssh::Session::disconnect</definition>
        <argsstring>()</argsstring>
        <name>disconnect</name>
        <briefdescription>
<para>Disconnects from the SSH server and closes connection. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__libssh__session_1ga0f048a4c0dbe02cfb7e9c5b6d0db0f27" kindref="member">ssh_disconnect</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="246" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="246" bodyend="248"/>
        <references refid="group__libssh__session_1ga0f048a4c0dbe02cfb7e9c5b6d0db0f27" compoundref="client_8c" startline="686" endline="754">ssh_disconnect</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_session_1a4e0c0bcc2cc0d129e049b5b51bf1cbe8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* ssh::Session::getDisconnectMessage</definition>
        <argsstring>()</argsstring>
        <name>getDisconnectMessage</name>
        <briefdescription>
<para>Returns the disconnect message from the server, if any. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>pointer to the message, or NULL. Do not attempt to free the pointer. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="253" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="253" bodyend="256"/>
        <references refid="group__libssh__session_1gad19e368e35d48e02ba95970a7d1e87f5" compoundref="session_8c" startline="775" endline="791">ssh_get_disconnect_message</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_session_1ab935e41beab3db33bccf5dd8f23a6886" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* ssh::Session::getError</definition>
        <argsstring>()</argsstring>
        <name>getError</name>
        <briefdescription>
<para>gets error message </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="260" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="260" bodyend="262"/>
        <references refid="group__libssh__error_1ga9241586665bf21f823806473fc386258" compoundref="error_8c" startline="111" endline="115">ssh_get_error</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_session_1aa48f704e1f62335eef378efef5215257" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ssh::Session::getErrorCode</definition>
        <argsstring>()</argsstring>
        <name>getErrorCode</name>
        <briefdescription>
<para>returns error code </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="266" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="266" bodyend="268"/>
        <references refid="group__libssh__error_1ga036433b7bf3d4ca94206253f58d136f9" compoundref="error_8c" startline="131" endline="135">ssh_get_error_code</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_session_1a30c021f6138124d785f151583e5656bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>socket_t</type>
        <definition>socket_t ssh::Session::getSocket</definition>
        <argsstring>()</argsstring>
        <name>getSocket</name>
        <briefdescription>
<para>returns the file descriptor used for the communication </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the file descriptor </para></simplesect>
<simplesect kind="warning"><para>if a proxycommand is used, this function will only return one of the two file descriptors being used </para></simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__session_1gafe509fcea47714b5cd277d1e35e83276" kindref="member">ssh_get_fd</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="275" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="275" bodyend="277"/>
        <references refid="group__libssh__session_1gafe509fcea47714b5cd277d1e35e83276" compoundref="session_8c" startline="533" endline="539">ssh_get_fd</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_session_1a9969ed8dcaccef321ac519271758b406" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string ssh::Session::getIssueBanner</definition>
        <argsstring>()</argsstring>
        <name>getIssueBanner</name>
        <briefdescription>
<para>gets the Issue banner from the ssh server </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the issue banner. This is generally a MOTD from server </para></simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__session_1ga89864d4d5cc6d3d6ef1c39652f2a688f" kindref="member">ssh_get_issue_banner</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="282" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="282" bodyend="287"/>
        <references refid="group__libssh__session_1ga89864d4d5cc6d3d6ef1c39652f2a688f" compoundref="client_8c" startline="646" endline="652">ssh_get_issue_banner</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_session_1a9e0af590062a73a0927bb513bc19dd8e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ssh::Session::getOpensshVersion</definition>
        <argsstring>()</argsstring>
        <name>getOpensshVersion</name>
        <briefdescription>
<para>returns the OpenSSH version (server) if possible </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>openssh version code </para></simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__session_1gac55d2895467a1e898ee75b4710d836a5" kindref="member">ssh_get_openssh_version</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="292" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="292" bodyend="294"/>
        <references refid="group__libssh__session_1gac55d2895467a1e898ee75b4710d836a5" compoundref="client_8c" startline="672" endline="678">ssh_get_openssh_version</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_session_1a5d7b4df57ed97f2592893b0493336b88" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ssh::Session::getVersion</definition>
        <argsstring>()</argsstring>
        <name>getVersion</name>
        <briefdescription>
<para>returns the version of the SSH protocol being used </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the SSH protocol version </para></simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__session_1ga8467735e4735165336f68ee82e24de0e" kindref="member">ssh_get_version</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="299" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="299" bodyend="301"/>
        <references refid="group__libssh__session_1ga8467735e4735165336f68ee82e24de0e" compoundref="session_8c" startline="800" endline="806">ssh_get_version</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_session_1a0b7055cb236685a9c18cb79c5492b40f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ssh::Session::isServerKnown</definition>
        <argsstring>()</argsstring>
        <name>isServerKnown</name>
        <briefdescription>
<para>verifies that the server is known </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classssh_1_1_ssh_exception" kindref="compound">SshException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>on error </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Integer value depending on the knowledge of the server key </para></simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__session_1ga6f37e3d7bb6b938b44d6a34a76fdfa0b" kindref="member">ssh_is_server_known</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="308" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="308" bodyend="312"/>
        <references refid="group__libssh__session_1ga6f37e3d7bb6b938b44d6a34a76fdfa0b" compoundref="known__hosts_8c" startline="406" endline="514">ssh_is_server_known</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_session_1a00ef8e842d49d238122cbdd3dece60a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ssh::Session::log</definition>
        <argsstring>(int priority, const char *format,...)</argsstring>
        <name>log</name>
        <param>
          <type>int</type>
          <declname>priority</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="313" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="313" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_session_1a05cbc79d7b3ef14499fe258f56031957" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ssh::Session::optionsCopy</definition>
        <argsstring>(const Session &amp;source)</argsstring>
        <name>optionsCopy</name>
        <param>
          <type>const <ref refid="classssh_1_1_session" kindref="compound">Session</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
<para>copies options from a session to another </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classssh_1_1_ssh_exception" kindref="compound">SshException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>on error </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__libssh__session_1gaead8cef1f39e785139bc510852ce1dff" kindref="member">ssh_options_copy</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="327" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="327" bodyend="330"/>
        <references refid="group__libssh__session_1gaead8cef1f39e785139bc510852ce1dff" compoundref="options_8c" startline="64" endline="163">ssh_options_copy</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_session_1a0fe8a68c45f9f150bb306ae840f68f0f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ssh::Session::optionsParseConfig</definition>
        <argsstring>(const char *file)</argsstring>
        <name>optionsParseConfig</name>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
<para>parses a configuration file for options </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classssh_1_1_ssh_exception" kindref="compound">SshException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>on error </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file</parametername>
</parameternamelist>
<parameterdescription>
<para>configuration file name </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__libssh__session_1ga82371e723260c7572ea061edecc2e9f1" kindref="member">ssh_options_parse_config</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="336" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="336" bodyend="339"/>
        <references refid="group__libssh__session_1ga82371e723260c7572ea061edecc2e9f1" compoundref="options_8c" startline="1200" endline="1241">ssh_options_parse_config</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_session_1a15b2a58607cc42628e17c94c8f7eb793" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ssh::Session::silentDisconnect</definition>
        <argsstring>()</argsstring>
        <name>silentDisconnect</name>
        <briefdescription>
<para>silently disconnect from remote host </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__libssh__session_1gae1bd16255ba373325adf76307d0c8c42" kindref="member">ssh_silent_disconnect</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="343" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="343" bodyend="345"/>
        <references refid="group__libssh__session_1gae1bd16255ba373325adf76307d0c8c42" compoundref="session_8c" startline="434" endline="442">ssh_silent_disconnect</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_session_1ae55f054025dcbe4ceeaec87c9ca064c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ssh::Session::writeKnownhost</definition>
        <argsstring>()</argsstring>
        <name>writeKnownhost</name>
        <briefdescription>
<para>Writes the known host file with current host key. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classssh_1_1_ssh_exception" kindref="compound">SshException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>on error </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__libssh__session_1gaf61a9cfdc40c76ffce9f9a8543755d36" kindref="member">ssh_write_knownhost</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="351" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="351" bodyend="355"/>
        <references refid="group__libssh__channel_1ga3bff751afc5ecb5bbf9d6447e4e5370f" compoundref="channels_8c" startline="2247" endline="2276">ssh_channel_cancel_forward</references>
        <references refid="group__libssh__channel_1ga758cda957227751870c8772df46e5b39" compoundref="channels_8c" startline="2165" endline="2204">ssh_channel_listen_forward</references>
        <references refid="group__libssh__session_1gaf61a9cfdc40c76ffce9f9a8543755d36" compoundref="known__hosts_8c" startline="526" endline="648">ssh_write_knownhost</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_session_1a6cd5318d71a3850a87b87bdfd89a5983" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classssh_1_1_channel" kindref="compound">Channel</ref> *</type>
        <definition>Channel * ssh::Session::acceptForward</definition>
        <argsstring>(int timeout_ms)</argsstring>
        <name>acceptForward</name>
        <param>
          <type>int</type>
          <declname>timeout_ms</declname>
        </param>
        <briefdescription>
<para>accept an incoming forward connection </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">timeout_ms</parametername>
</parameternamelist>
<parameterdescription>
<para>timeout for waiting, in ms </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>new <ref refid="classssh_1_1_channel" kindref="compound">Channel</ref> pointer on the forward connection </para></simplesect>
<simplesect kind="return"><para>NULL in case of error </para></simplesect>
<simplesect kind="warning"><para>you have to delete this pointer after use </para></simplesect>
<simplesect kind="see"><para>ssh_channel_forward_accept </para></simplesect>
<simplesect kind="see"><para>Session::listenForward </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="365" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="603" bodyend="609"/>
        <references refid="group__libssh__channel_1ga490e4b0a7adc022507b7f165b336afe4" compoundref="channels_8c" startline="2228" endline="2230">ssh_channel_accept_forward</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_session_1a9346912d769056b702f1d77eaf3f9b77" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ssh::Session::cancelForward</definition>
        <argsstring>(const char *address, int port)</argsstring>
        <name>cancelForward</name>
        <param>
          <type>const char *</type>
          <declname>address</declname>
        </param>
        <param>
          <type>int</type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="368" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="368" bodyend="372"/>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_session_1a154c2a0e89631daf65b695f4c57b5bf5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ssh::Session::listenForward</definition>
        <argsstring>(const char *address, int port, int &amp;boundport)</argsstring>
        <name>listenForward</name>
        <param>
          <type>const char *</type>
          <declname>address</declname>
        </param>
        <param>
          <type>int</type>
          <declname>port</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>boundport</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="374" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="374" bodyend="379"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classssh_1_1_session_1ad48854aa3c5a7bd564ea487c1afddf2b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ssh_session</type>
        <definition>ssh_session ssh::Session::getCSession</definition>
        <argsstring>()</argsstring>
        <name>getCSession</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="383" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="383" bodyend="385"/>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_session_1ae0783aca57bb2f4d54e6bb3ae377b173" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ssh::Session::Session</definition>
        <argsstring>(const Session &amp;)</argsstring>
        <name>Session</name>
        <param>
          <type>const <ref refid="classssh_1_1_session" kindref="compound">Session</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="387" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_session_1a982ab959144c8e42bb970a59e6a3bfaa" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classssh_1_1_session" kindref="compound">Session</ref> &amp;</type>
        <definition>Session&amp; ssh::Session::operator=</definition>
        <argsstring>(const Session &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classssh_1_1_session" kindref="compound">Session</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="388" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classssh_1_1_session" kindref="compound">ssh::Session</ref> class contains the state of a SSH connection. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/libssh/libsshpp.hpp" line="126" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="126" bodyend="389"/>
    <listofallmembers>
      <member refid="classssh_1_1_session_1a6cd5318d71a3850a87b87bdfd89a5983" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>acceptForward</name></member>
      <member refid="classssh_1_1_session_1a8f3f99647f051239b3d1ba87b0dd6969" prot="private" virt="non-virtual"><scope>ssh::Session</scope><name>c_session</name></member>
      <member refid="classssh_1_1_session_1a9346912d769056b702f1d77eaf3f9b77" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>cancelForward</name></member>
      <member refid="classssh_1_1_session_1ac47342240f21ce36f47485e4ab41a10d" prot="private" virt="non-virtual"><scope>ssh::Session</scope><name>Channel</name></member>
      <member refid="classssh_1_1_session_1a2a88d7dd524e81cb9152a87cb6fefc40" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>connect</name></member>
      <member refid="classssh_1_1_session_1aaa6972fe2757370a0cf2b90576eb6edc" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>disconnect</name></member>
      <member refid="classssh_1_1_session_1a08d70b5cdb5bd1a2a8f5f9ebbdf67b3b" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>getAuthList</name></member>
      <member refid="classssh_1_1_session_1ad48854aa3c5a7bd564ea487c1afddf2b" prot="private" virt="non-virtual"><scope>ssh::Session</scope><name>getCSession</name></member>
      <member refid="classssh_1_1_session_1a4e0c0bcc2cc0d129e049b5b51bf1cbe8" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>getDisconnectMessage</name></member>
      <member refid="classssh_1_1_session_1ab935e41beab3db33bccf5dd8f23a6886" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>getError</name></member>
      <member refid="classssh_1_1_session_1aa48f704e1f62335eef378efef5215257" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>getErrorCode</name></member>
      <member refid="classssh_1_1_session_1a9969ed8dcaccef321ac519271758b406" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>getIssueBanner</name></member>
      <member refid="classssh_1_1_session_1a9e0af590062a73a0927bb513bc19dd8e" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>getOpensshVersion</name></member>
      <member refid="classssh_1_1_session_1a30c021f6138124d785f151583e5656bd" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>getSocket</name></member>
      <member refid="classssh_1_1_session_1a5d7b4df57ed97f2592893b0493336b88" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>getVersion</name></member>
      <member refid="classssh_1_1_session_1a0b7055cb236685a9c18cb79c5492b40f" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>isServerKnown</name></member>
      <member refid="classssh_1_1_session_1a154c2a0e89631daf65b695f4c57b5bf5" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>listenForward</name></member>
      <member refid="classssh_1_1_session_1a00ef8e842d49d238122cbdd3dece60a1" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>log</name></member>
      <member refid="classssh_1_1_session_1a982ab959144c8e42bb970a59e6a3bfaa" prot="private" virt="non-virtual"><scope>ssh::Session</scope><name>operator=</name></member>
      <member refid="classssh_1_1_session_1a05cbc79d7b3ef14499fe258f56031957" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>optionsCopy</name></member>
      <member refid="classssh_1_1_session_1a0fe8a68c45f9f150bb306ae840f68f0f" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>optionsParseConfig</name></member>
      <member refid="classssh_1_1_session_1a19f9c19d925bb991401fe4503305fea1" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>Session</name></member>
      <member refid="classssh_1_1_session_1ae0783aca57bb2f4d54e6bb3ae377b173" prot="private" virt="non-virtual"><scope>ssh::Session</scope><name>Session</name></member>
      <member refid="classssh_1_1_session_1ad19ae4a0927094c12f383907cbf40ccc" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>setOption</name></member>
      <member refid="classssh_1_1_session_1ad6dc221d1212370608516c89115f6470" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>setOption</name></member>
      <member refid="classssh_1_1_session_1a1bd14b987212698c146ed05f25454046" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>setOption</name></member>
      <member refid="classssh_1_1_session_1a15b2a58607cc42628e17c94c8f7eb793" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>silentDisconnect</name></member>
      <member refid="classssh_1_1_session_1a988398835fc131b0eb5a83a4adaec532" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>userauthNone</name></member>
      <member refid="classssh_1_1_session_1ac2d10826877bec6598961614eb62f0f7" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>userauthPassword</name></member>
      <member refid="classssh_1_1_session_1a85c7eb65686658f2c23aa2a5e1e29edd" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>userauthPrivatekeyFile</name></member>
      <member refid="classssh_1_1_session_1a6dd49ee38bf24c31c5e0e28dc2af07b7" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>userauthPublickey</name></member>
      <member refid="classssh_1_1_session_1a651141f9bcf5792644f6d411ab2cc0c5" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>userauthPublickeyAuto</name></member>
      <member refid="classssh_1_1_session_1afb635d7f84b000bbabb09a86ad5ad074" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>userauthTryPublickey</name></member>
      <member refid="classssh_1_1_session_1ae55f054025dcbe4ceeaec87c9ca064c7" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>writeKnownhost</name></member>
      <member refid="classssh_1_1_session_1ae07d004bb4cee8a4c1a73f829363893d" prot="public" virt="non-virtual"><scope>ssh::Session</scope><name>~Session</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
