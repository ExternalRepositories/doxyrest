<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="session_8c" kind="file" language="C++">
    <compoundname>session.c</compoundname>
    <includes local="yes">config.h</includes>
    <includes refid="string_8h" local="no">string.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes refid="priv_8h" local="yes">libssh/priv.h</includes>
    <includes refid="libssh_8h" local="yes">libssh/libssh.h</includes>
    <includes refid="crypto_8h" local="yes">libssh/crypto.h</includes>
    <includes refid="server_8h" local="yes">libssh/server.h</includes>
    <includes refid="socket_8h" local="yes">libssh/socket.h</includes>
    <includes refid="ssh2_8h" local="yes">libssh/ssh2.h</includes>
    <includes refid="agent_8h" local="yes">libssh/agent.h</includes>
    <includes refid="packet_8h" local="yes">libssh/packet.h</includes>
    <includes refid="session_8h" local="yes">libssh/session.h</includes>
    <includes refid="misc_8h" local="yes">libssh/misc.h</includes>
    <includes refid="buffer_8h" local="yes">libssh/buffer.h</includes>
    <includes refid="poll_8h" local="yes">libssh/poll.h</includes>
    <incdepgraph>
      <node id="2147">
        <label>libssh/buffer.h</label>
        <link refid="buffer_8h_source"/>
        <childnode refid="2148" relation="include">
        </childnode>
        <childnode refid="2121" relation="include">
        </childnode>
      </node>
      <node id="2148">
        <label>stdarg.h</label>
      </node>
      <node id="2135">
        <label>libssh/curve25519.h</label>
        <link refid="curve25519_8h_source"/>
        <childnode refid="2117" relation="include">
        </childnode>
        <childnode refid="2121" relation="include">
        </childnode>
      </node>
      <node id="2124">
        <label>sys/select.h</label>
      </node>
      <node id="2116">
        <label>src/session.c</label>
        <link refid="session_8c"/>
        <childnode refid="2117" relation="include">
        </childnode>
        <childnode refid="2118" relation="include">
        </childnode>
        <childnode refid="2128" relation="include">
        </childnode>
        <childnode refid="2119" relation="include">
        </childnode>
        <childnode refid="2121" relation="include">
        </childnode>
        <childnode refid="2129" relation="include">
        </childnode>
        <childnode refid="2136" relation="include">
        </childnode>
        <childnode refid="2137" relation="include">
        </childnode>
        <childnode refid="2138" relation="include">
        </childnode>
        <childnode refid="2139" relation="include">
        </childnode>
        <childnode refid="2140" relation="include">
        </childnode>
        <childnode refid="2141" relation="include">
        </childnode>
        <childnode refid="2146" relation="include">
        </childnode>
        <childnode refid="2147" relation="include">
        </childnode>
        <childnode refid="2145" relation="include">
        </childnode>
      </node>
      <node id="2119">
        <label>libssh/priv.h</label>
        <link refid="priv_8h_source"/>
        <childnode refid="2117" relation="include">
        </childnode>
        <childnode refid="2120" relation="include">
        </childnode>
        <childnode refid="2121" relation="include">
        </childnode>
        <childnode refid="2127" relation="include">
        </childnode>
      </node>
      <node id="2146">
        <label>libssh/misc.h</label>
        <link refid="misc_8h_source"/>
      </node>
      <node id="2121">
        <label>libssh/libssh.h</label>
        <link refid="libssh_8h_source"/>
        <childnode refid="2120" relation="include">
        </childnode>
        <childnode refid="2122" relation="include">
        </childnode>
        <childnode refid="2123" relation="include">
        </childnode>
        <childnode refid="2124" relation="include">
        </childnode>
        <childnode refid="2125" relation="include">
        </childnode>
        <childnode refid="2126" relation="include">
        </childnode>
      </node>
      <node id="2140">
        <label>libssh/packet.h</label>
        <link refid="packet_8h_source"/>
        <childnode refid="2130" relation="include">
        </childnode>
      </node>
      <node id="2128">
        <label>stdlib.h</label>
      </node>
      <node id="2118">
        <label>string.h</label>
        <link refid="string_8h_source"/>
        <childnode refid="2119" relation="include">
        </childnode>
      </node>
      <node id="2126">
        <label>libssh/legacy.h</label>
        <link refid="legacy_8h_source"/>
      </node>
      <node id="2129">
        <label>libssh/crypto.h</label>
        <link refid="crypto_8h_source"/>
        <childnode refid="2117" relation="include">
        </childnode>
        <childnode refid="2130" relation="include">
        </childnode>
        <childnode refid="2133" relation="include">
        </childnode>
        <childnode refid="2134" relation="include">
        </childnode>
        <childnode refid="2135" relation="include">
        </childnode>
      </node>
      <node id="2137">
        <label>libssh/socket.h</label>
        <link refid="socket_8h_source"/>
        <childnode refid="2127" relation="include">
        </childnode>
      </node>
      <node id="2125">
        <label>netdb.h</label>
      </node>
      <node id="2138">
        <label>libssh/ssh2.h</label>
        <link refid="ssh2_8h_source"/>
      </node>
      <node id="2127">
        <label>libssh/callbacks.h</label>
        <link refid="callbacks_8h_source"/>
        <childnode refid="2121" relation="include">
        </childnode>
        <childnode refid="2118" relation="include">
        </childnode>
      </node>
      <node id="2123">
        <label>sys/types.h</label>
      </node>
      <node id="2139">
        <label>libssh/agent.h</label>
        <link refid="agent_8h_source"/>
        <childnode refid="2121" relation="include">
        </childnode>
      </node>
      <node id="2145">
        <label>libssh/poll.h</label>
        <link refid="poll_8h_source"/>
        <childnode refid="2117" relation="include">
        </childnode>
      </node>
      <node id="2120">
        <label>unistd.h</label>
      </node>
      <node id="2133">
        <label>libssh/ecdh.h</label>
        <link refid="ecdh_8h_source"/>
        <childnode refid="2117" relation="include">
        </childnode>
      </node>
      <node id="2144">
        <label>libssh/channels.h</label>
        <link refid="channels_8h_source"/>
        <childnode refid="2119" relation="include">
        </childnode>
      </node>
      <node id="2143">
        <label>libssh/auth.h</label>
        <link refid="auth_8h_source"/>
        <childnode refid="2117" relation="include">
        </childnode>
        <childnode refid="2127" relation="include">
        </childnode>
      </node>
      <node id="2130">
        <label>libssh/wrapper.h</label>
        <link refid="wrapper_8h_source"/>
        <childnode refid="2117" relation="include">
        </childnode>
        <childnode refid="2121" relation="include">
        </childnode>
        <childnode refid="2131" relation="include">
        </childnode>
        <childnode refid="2132" relation="include">
        </childnode>
      </node>
      <node id="2131">
        <label>libssh/libcrypto.h</label>
        <link refid="libcrypto_8h_source"/>
        <childnode refid="2117" relation="include">
        </childnode>
      </node>
      <node id="2134">
        <label>libssh/kex.h</label>
        <link refid="kex_8h_source"/>
        <childnode refid="2119" relation="include">
        </childnode>
        <childnode refid="2127" relation="include">
        </childnode>
      </node>
      <node id="2132">
        <label>libssh/libgcrypt.h</label>
        <link refid="libgcrypt_8h_source"/>
        <childnode refid="2117" relation="include">
        </childnode>
      </node>
      <node id="2142">
        <label>libssh/pcap.h</label>
        <link refid="pcap_8h_source"/>
        <childnode refid="2117" relation="include">
        </childnode>
        <childnode refid="2121" relation="include">
        </childnode>
      </node>
      <node id="2117">
        <label>config.h</label>
      </node>
      <node id="2136">
        <label>libssh/server.h</label>
        <link refid="server_8h_source"/>
        <childnode refid="2121" relation="include">
        </childnode>
      </node>
      <node id="2141">
        <label>libssh/session.h</label>
        <link refid="session_8h_source"/>
        <childnode refid="2119" relation="include">
        </childnode>
        <childnode refid="2134" relation="include">
        </childnode>
        <childnode refid="2140" relation="include">
        </childnode>
        <childnode refid="2142" relation="include">
        </childnode>
        <childnode refid="2143" relation="include">
        </childnode>
        <childnode refid="2144" relation="include">
        </childnode>
        <childnode refid="2145" relation="include">
        </childnode>
      </node>
      <node id="2122">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="session_8c_1a60702e9984b108004b2685e2c4019602" prot="public" static="no">
        <name>FIRST_CHANNEL</name>
        <initializer>42</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="45" column="9" bodyfile="src/session.c" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__libssh__session_1gaadadc0f9601547c30db7c4d62017d32c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssh_session</type>
        <definition>ssh_session ssh_new</definition>
        <argsstring>(void)</argsstring>
        <name>ssh_new</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Create a new ssh session. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A new ssh_session pointer, NULL on error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="61" column="1" bodyfile="src/session.c" bodystart="61" bodyend="174"/>
        <references refid="group__libssh__buffer_1ga7ecc914104a5bf0da485d3e42f6a7d3b" compoundref="buffer_8c" startline="86" endline="95">ssh_buffer_new</references>
        <references refid="group__libssh__session_1ga2a29cff08855611be84d050e5bec73bc" compoundref="session_8c" startline="451" endline="457">ssh_set_blocking</references>
        <references refid="group__libssh__socket_1gae616d257d1f37fcaf60f6d243fe4e964" compoundref="socket_8c" startline="141" endline="173">ssh_socket_new</references>
        <referencedby refid="group__libssh__session_1gaead8cef1f39e785139bc510852ce1dff" compoundref="options_8c" startline="64" endline="163">ssh_options_copy</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1gae5af27a98a7488e9f5ded6b37c274156" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ssh_free</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_free</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>Deallocate a SSH session handle. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The SSH session to free.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__libssh__session_1ga0f048a4c0dbe02cfb7e9c5b6d0db0f27" kindref="member">ssh_disconnect()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__session_1gaadadc0f9601547c30db7c4d62017d32c" kindref="member">ssh_new()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="184" column="1" bodyfile="src/session.c" bodystart="184" bodyend="305"/>
        <referencedby refid="group__libssh__session_1gaead8cef1f39e785139bc510852ce1dff" compoundref="options_8c" startline="64" endline="163">ssh_options_copy</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga1e76a1fc03d1d16fb59b0bd5e9978aa0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* ssh_get_clientbanner</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_get_clientbanner</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>get the client banner </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The SSH session</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns the client banner string or NULL. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="314" column="1" bodyfile="src/session.c" bodystart="314" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1gac89bcc9f438d031a32260926b04ea6b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* ssh_get_serverbanner</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_get_serverbanner</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>get the server banner </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The SSH session</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns the server banner string or NULL. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="329" column="1" bodyfile="src/session.c" bodystart="329" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga3870bf9e03a2ac470ab202424224b15e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* ssh_get_kex_algo</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_get_kex_algo</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>get the name of the current key exchange algorithm. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The SSH session</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns the key exchange algorithm string or NULL. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="343" column="1" bodyfile="src/session.c" bodystart="343" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga81d8525f77c58d93ed0d320c38e62009" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* ssh_get_cipher_in</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_get_cipher_in</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>get the name of the input cipher for the given session. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The SSH session.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns cipher name or NULL. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="372" column="1" bodyfile="src/session.c" bodystart="372" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga0a0b33868aec5337ba1d9aee8fee26d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* ssh_get_cipher_out</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_get_cipher_out</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>get the name of the output cipher for the given session. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The SSH session.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns cipher name or NULL. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="388" column="1" bodyfile="src/session.c" bodystart="388" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga293196b7f1b1653ff970b8206671def9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* ssh_get_hmac_in</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_get_hmac_in</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>get the name of the input HMAC algorithm for the given session. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The SSH session.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns HMAC algorithm name or NULL if unknown. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="404" column="1" bodyfile="src/session.c" bodystart="404" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga2fc37631d6a350d9c31dcb336b98a836" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* ssh_get_hmac_out</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_get_hmac_out</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>get the name of the output HMAC algorithm for the given session. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The SSH session.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns HMAC algorithm name or NULL if unknown. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="419" column="1" bodyfile="src/session.c" bodystart="419" bodyend="425"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1gae1bd16255ba373325adf76307d0c8c42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ssh_silent_disconnect</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_silent_disconnect</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>Disconnect impolitely from a remote host by closing the socket. </para>        </briefdescription>
        <detaileddescription>
<para>Suitable if you forked and want to destroy this session.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The SSH session to disconnect. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="434" column="1" bodyfile="src/session.c" bodystart="434" bodyend="442"/>
        <references refid="group__libssh__session_1ga0f048a4c0dbe02cfb7e9c5b6d0db0f27" compoundref="client_8c" startline="686" endline="754">ssh_disconnect</references>
        <references refid="group__libssh__socket_1gaaf4853539d6ed1c3508cca5a45d557d6" compoundref="socket_8c" startline="425" endline="452">ssh_socket_close</references>
        <referencedby refid="classssh_1_1_session_1a15b2a58607cc42628e17c94c8f7eb793" compoundref="libsshpp_8hpp" startline="343" endline="345">ssh::Session::silentDisconnect</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga2a29cff08855611be84d050e5bec73bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ssh_set_blocking</definition>
        <argsstring>(ssh_session session, int blocking)</argsstring>
        <name>ssh_set_blocking</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <param>
          <type>int</type>
          <declname>blocking</declname>
        </param>
        <briefdescription>
<para>Set the session in blocking/nonblocking mode. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The ssh session to change.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blocking</parametername>
</parameternamelist>
<parameterdescription>
<para>Zero for nonblocking mode. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="451" column="1" bodyfile="src/session.c" bodystart="451" bodyend="457"/>
        <referencedby refid="group__libssh__channel_1gaaca5a3fbe9839c3ffb37b746afc35f4c" compoundref="channels_8c" startline="2737" endline="2773">ssh_channel_read_nonblocking</referencedby>
        <referencedby refid="group__libssh__channel_1ga1c00ed18679d9a8c5b971260b5df13a2" compoundref="channels_8c" startline="1437" endline="1442">ssh_channel_set_blocking</referencedby>
        <referencedby refid="group__libssh__session_1gaadadc0f9601547c30db7c4d62017d32c" compoundref="session_8c" startline="61" endline="174">ssh_new</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga0c959bde817801ac5de2db1e64b52f26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_is_blocking</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_is_blocking</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>Return the blocking mode of libssh. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The SSH session </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if the session is nonblocking, </para></simplesect>
<simplesect kind="return"><para>1 if the functions may block. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="465" column="1" bodyfile="src/session.c" bodystart="465" bodyend="467"/>
        <referencedby refid="group__libssh__channel_1gaaca5a3fbe9839c3ffb37b746afc35f4c" compoundref="channels_8c" startline="2737" endline="2773">ssh_channel_read_nonblocking</referencedby>
        <referencedby refid="group__libssh__session_1gaa0e04dc9e24d5112a5ca2b7bd68031d0" compoundref="session_8c" startline="600" endline="636">ssh_handle_packets</referencedby>
        <referencedby refid="group__libssh__session_1gab3686ad27fa79078da6ad919ccff0fd5" compoundref="session_8c" startline="661" endline="705">ssh_handle_packets_termination</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1gac06e77d8cc7d3c9b3ce54cfd8db35afa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int ssh_flush_termination</definition>
        <argsstring>(void *c)</argsstring>
        <name>ssh_flush_termination</name>
        <param>
          <type>void *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="470" column="1" bodyfile="src/session.c" bodystart="470" bodyend="477"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga60da8e2c47897a209a455923c35d52d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_blocking_flush</definition>
        <argsstring>(ssh_session session, int timeout)</argsstring>
        <name>ssh_blocking_flush</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <param>
          <type>int</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Blocking flush of the outgoing buffer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The SSH session </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>Set an upper limit on the time for which this function will block, in milliseconds. Specifying -1 means an infinite timeout. This parameter is passed to the poll() function. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SSH_OK on success, SSH_AGAIN if timeout occurred, SSH_ERROR otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="490" column="1" bodyfile="src/session.c" bodystart="490" bodyend="506"/>
        <references refid="group__libssh__session_1gab3686ad27fa79078da6ad919ccff0fd5" compoundref="session_8c" startline="661" endline="705">ssh_handle_packets_termination</references>
        <referencedby refid="group__libssh__channel_1gae61fe034965d58e1fb6da1bee98de191" compoundref="channels_8c" startline="1199" endline="1201">ssh_channel_flush</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga49d8f413a3c7879070a112703de1d6e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_is_connected</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_is_connected</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>Check if we are connected. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The session to check if it is connected.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if we are connected, 0 if not. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="515" column="1" bodyfile="src/session.c" bodystart="515" bodyend="521"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1gafe509fcea47714b5cd277d1e35e83276" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>socket_t</type>
        <definition>socket_t ssh_get_fd</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_get_fd</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>Get the fd of a connection. </para>        </briefdescription>
        <detaileddescription>
<para>In case you&apos;d need the file descriptor of the connection to the server/client.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The ssh session to use.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The file descriptor of the connection, or -1 if it is not connected </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="533" column="1" bodyfile="src/session.c" bodystart="533" bodyend="539"/>
        <references refid="group__libssh__socket_1ga9456febc100d6b3cd0a82eaff5a26ae0" compoundref="socket_8c" startline="507" endline="509">ssh_socket_get_fd_in</references>
        <referencedby refid="classssh_1_1_session_1a30c021f6138124d785f151583e5656bd" compoundref="libsshpp_8hpp" startline="275" endline="277">ssh::Session::getSocket</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga0e05c91c6f475eabc8d221914d25a425" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ssh_set_fd_toread</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_set_fd_toread</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>Tell the session it has data to read on the file descriptor without blocking. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The ssh session to use. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="547" column="1" bodyfile="src/session.c" bodystart="547" bodyend="553"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga3f1b3c59662464eec3649d3d72a40543" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ssh_set_fd_towrite</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_set_fd_towrite</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>Tell the session it may write to the file descriptor without blocking. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The ssh session to use. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="560" column="1" bodyfile="src/session.c" bodystart="560" bodyend="566"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga06453278350fd9e940c5c1b0d5225f19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ssh_set_fd_except</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_set_fd_except</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>Tell the session it has an exception to catch on the file descriptor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The ssh session to use. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="573" column="1" bodyfile="src/session.c" bodystart="573" bodyend="579"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1gaa0e04dc9e24d5112a5ca2b7bd68031d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_handle_packets</definition>
        <argsstring>(ssh_session session, int timeout)</argsstring>
        <name>ssh_handle_packets</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <param>
          <type>int</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Poll the current session for an event and call the appropriate callbacks. This function will not loop until the timeout is expired. </para>        </briefdescription>
        <detaileddescription>
<internal><para>This will block until one event happens.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The session handle to use.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>Set an upper limit on the time for which this function will block, in milliseconds. Specifying SSH_TIMEOUT_INFINITE (-1) means an infinite timeout. Specifying SSH_TIMEOUT_USER means to use the timeout specified in options. 0 means poll will return immediately. This parameter is passed to the poll() function.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SSH_OK on success, SSH_ERROR otherwise. </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="600" column="1" bodyfile="src/session.c" bodystart="600" bodyend="636"/>
        <references refid="group__libssh__session_1ga0c959bde817801ac5de2db1e64b52f26" compoundref="session_8c" startline="465" endline="467">ssh_is_blocking</references>
        <references refid="group__libssh__misc_1ga7178af941c118949a8a7f34e3b5c815e" compoundref="misc_8c" startline="926" endline="934">ssh_make_milliseconds</references>
        <references refid="group__libssh__poll_1ga26ad689751420b91bf002f616e8bf4f7" compoundref="poll_8c" startline="376" endline="378">ssh_poll_add_events</references>
        <references refid="group__libssh__poll_1ga2c9eca31ff21406f13c1b7472ae8c85b" compoundref="poll_8c" startline="507" endline="529">ssh_poll_ctx_add</references>
        <references refid="group__libssh__poll_1ga6c0f6d3c677838181df5cd03a755fd7c" compoundref="poll_8c" startline="599" endline="652">ssh_poll_ctx_dopoll</references>
        <references refid="group__libssh__poll_1gaca05fcf77e6c4b5e55a9cfd2c9690ea5" compoundref="poll_8c" startline="325" endline="327">ssh_poll_get_ctx</references>
        <references refid="group__libssh__poll_1ga8ad007907f642d4aa2c25e5209bf337a" compoundref="poll_8c" startline="661" endline="667">ssh_poll_get_default_ctx</references>
        <references refid="group__libssh__socket_1ga370170e973dd150a297db4525713752e" compoundref="socket_8c" startline="351" endline="358">ssh_socket_get_poll_handle_in</references>
        <references refid="group__libssh__socket_1ga22e0c80420370cd8beded9cdf6f7da73" compoundref="socket_8c" startline="365" endline="372">ssh_socket_get_poll_handle_out</references>
        <referencedby refid="group__libssh__channel_1gab391f5c978cb1bc8df3ebd061f38e8c5" compoundref="channels_8c" startline="2499" endline="2558">channel_read_buffer</referencedby>
        <referencedby refid="group__libssh__channel_1ga157f7d1df5de07ec6c6976e2034ba6e2" compoundref="channels_8c" startline="2789" endline="2820">ssh_channel_poll</referencedby>
        <referencedby refid="group__libssh__session_1gab3686ad27fa79078da6ad919ccff0fd5" compoundref="session_8c" startline="661" endline="705">ssh_handle_packets_termination</referencedby>
        <referencedby refid="group__libssh__session_1ga5ffa2201152e29cc680c4b8e4a3f4fdf" compoundref="session_8c" startline="874" endline="907">ssh_send_debug</referencedby>
        <referencedby refid="group__libssh__session_1gab8827415fd19cf6cb64e7fc83c09e423" compoundref="session_8c" startline="835" endline="861">ssh_send_ignore</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1gab3686ad27fa79078da6ad919ccff0fd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_handle_packets_termination</definition>
        <argsstring>(ssh_session session, int timeout, ssh_termination_function fct, void *user)</argsstring>
        <name>ssh_handle_packets_termination</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <param>
          <type>int</type>
          <declname>timeout</declname>
        </param>
        <param>
          <type>ssh_termination_function</type>
          <declname>fct</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user</declname>
        </param>
        <briefdescription>
<para>Poll the current session for an event and call the appropriate callbacks. </para>        </briefdescription>
        <detaileddescription>
<internal><para>This will block until termination function returns true, or timeout expired.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The session handle to use.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>Set an upper limit on the time for which this function will block, in milliseconds. Specifying SSH_TIMEOUT_INFINITE (-1) means an infinite timeout. Specifying SSH_TIMEOUT_USER means to use the timeout specified in options. 0 means poll will return immediately. SSH_TIMEOUT_DEFAULT uses blocking parameters of the session. This parameter is passed to the poll() function.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fct</parametername>
</parameternamelist>
<parameterdescription>
<para>Termination function to be used to determine if it is possible to stop polling. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">user</parametername>
</parameternamelist>
<parameterdescription>
<para>User parameter to be passed to fct termination function. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SSH_OK on success, SSH_ERROR otherwise. </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="661" column="1" bodyfile="src/session.c" bodystart="661" bodyend="705"/>
        <references refid="group__libssh__session_1gaa0e04dc9e24d5112a5ca2b7bd68031d0" compoundref="session_8c" startline="600" endline="636">ssh_handle_packets</references>
        <references refid="group__libssh__session_1ga0c959bde817801ac5de2db1e64b52f26" compoundref="session_8c" startline="465" endline="467">ssh_is_blocking</references>
        <references refid="group__libssh__misc_1ga7178af941c118949a8a7f34e3b5c815e" compoundref="misc_8c" startline="926" endline="934">ssh_make_milliseconds</references>
        <references refid="group__libssh__misc_1ga1a6abbb2da16c6543f7de29b5c98f086" compoundref="misc_8c" startline="946" endline="968">ssh_timeout_elapsed</references>
        <references refid="group__libssh__misc_1gad1c4b29e2421eb8f9ca111d98b0c2976" compoundref="misc_8c" startline="977" endline="989">ssh_timeout_update</references>
        <references refid="group__libssh__misc_1gaaa0c97f49044d29f2a3b5b3ae82979ff" compoundref="misc_8c" startline="882" endline="893">ssh_timestamp_init</references>
        <referencedby refid="group__libssh__session_1ga60da8e2c47897a209a455923c35d52d8" compoundref="session_8c" startline="490" endline="506">ssh_blocking_flush</referencedby>
        <referencedby refid="group__libssh__channel_1ga9eea019dd0bbaa8a817fff2c762d1a2d" compoundref="channels_8c" startline="2918" endline="2931">ssh_channel_get_exit_status</referencedby>
        <referencedby refid="group__libssh__channel_1gab56c7b7959e4c23959f2989468811661" compoundref="channels_8c" startline="2841" endline="2873">ssh_channel_poll_timeout</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1gac199314d1646372c566ef14b9b6dca53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_get_status</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_get_status</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>Get session status. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>The ssh session to use.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A bitmask including SSH_CLOSED, SSH_READ_PENDING, SSH_WRITE_PENDING or SSH_CLOSED_ERROR which respectively means the session is closed, has data to read on the connection socket and session was closed due to an error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="717" column="1" bodyfile="src/session.c" bodystart="717" bodyend="743"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1gae9d0104fbeca17bcfb0659ad718c4606" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_get_poll_flags</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_get_poll_flags</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>Get poll flags for an external mainloop. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>The ssh session to use.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A bitmask including SSH_READ_PENDING or SSH_WRITE_PENDING. For SSH_READ_PENDING, your invocation of poll() should include POLLIN. For SSH_WRITE_PENDING, your invocation of poll() should include POLLOUT. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="755" column="1" bodyfile="src/session.c" bodystart="755" bodyend="762"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1gad19e368e35d48e02ba95970a7d1e87f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* ssh_get_disconnect_message</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_get_disconnect_message</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>Get the disconnect message from the server. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The ssh session to use.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The message sent by the server along with the disconnect, or NULL in which case the reason of the disconnect may be found with ssh_get_error.</para></simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__error_1ga9241586665bf21f823806473fc386258" kindref="member">ssh_get_error()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="775" column="1" bodyfile="src/session.c" bodystart="775" bodyend="791"/>
        <referencedby refid="classssh_1_1_session_1a4e0c0bcc2cc0d129e049b5b51bf1cbe8" compoundref="libsshpp_8hpp" startline="253" endline="256">ssh::Session::getDisconnectMessage</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga8467735e4735165336f68ee82e24de0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_get_version</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_get_version</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>Get the protocol version of the session. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>The ssh session to use.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 or 2, for ssh1 or ssh2, &lt; 0 on error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="800" column="1" bodyfile="src/session.c" bodystart="800" bodyend="806"/>
        <referencedby refid="classssh_1_1_session_1a5d7b4df57ed97f2592893b0493336b88" compoundref="libsshpp_8hpp" startline="299" endline="301">ssh::Session::getVersion</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga2635562d4c0bb8507e9a9f7274ff4729" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ssh_socket_exception_callback</definition>
        <argsstring>(int code, int errno_code, void *user)</argsstring>
        <name>ssh_socket_exception_callback</name>
        <param>
          <type>int</type>
          <declname>code</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errno_code</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user</declname>
        </param>
        <briefdescription>
<para>Callback to be called when the socket received an exception code. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>user</parametername>
</parameternamelist>
<parameterdescription>
<para>is a pointer to session </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="813" column="1" bodyfile="src/session.c" bodystart="813" bodyend="825"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1gab8827415fd19cf6cb64e7fc83c09e423" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_send_ignore</definition>
        <argsstring>(ssh_session session, const char *data)</argsstring>
        <name>ssh_send_ignore</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Send a message that should be ignored. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The SSH session </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to be sent</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SSH_OK on success, SSH_ERROR otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="835" column="1" bodyfile="src/session.c" bodystart="835" bodyend="861"/>
        <references refid="group__libssh__buffer_1gad877da63fd8d9a0ee00859bfbacf1eda" compoundref="buffer_8c" startline="195" endline="208">ssh_buffer_reinit</references>
        <references refid="group__libssh__session_1gaa0e04dc9e24d5112a5ca2b7bd68031d0" compoundref="session_8c" startline="600" endline="636">ssh_handle_packets</references>
        <references refid="group__libssh__socket_1ga29176fb6f348985227454a3f5daec745" compoundref="socket_8c" startline="514" endline="516">ssh_socket_is_open</references>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga5ffa2201152e29cc680c4b8e4a3f4fdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_send_debug</definition>
        <argsstring>(ssh_session session, const char *message, int always_display)</argsstring>
        <name>ssh_send_debug</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>always_display</declname>
        </param>
        <briefdescription>
<para>Send a debug message. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The SSH session </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">message</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to be sent </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">always_display</parametername>
</parameternamelist>
<parameterdescription>
<para>Message SHOULD be displayed by the server. It SHOULD NOT be displayed unless debugging information has been explicitly requested.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SSH_OK on success, SSH_ERROR otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="874" column="1" bodyfile="src/session.c" bodystart="874" bodyend="907"/>
        <references refid="group__libssh__buffer_1gad877da63fd8d9a0ee00859bfbacf1eda" compoundref="buffer_8c" startline="195" endline="208">ssh_buffer_reinit</references>
        <references refid="group__libssh__session_1gaa0e04dc9e24d5112a5ca2b7bd68031d0" compoundref="session_8c" startline="600" endline="636">ssh_handle_packets</references>
        <references refid="group__libssh__socket_1ga29176fb6f348985227454a3f5daec745" compoundref="socket_8c" startline="514" endline="516">ssh_socket_is_open</references>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga84d4ac53ac8582b70da9b63739df61ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ssh_set_counters</definition>
        <argsstring>(ssh_session session, ssh_counter scounter, ssh_counter rcounter)</argsstring>
        <name>ssh_set_counters</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <param>
          <type>ssh_counter</type>
          <declname>scounter</declname>
        </param>
        <param>
          <type>ssh_counter</type>
          <declname>rcounter</declname>
        </param>
        <briefdescription>
<para>Set the session data counters. </para>        </briefdescription>
        <detaileddescription>
<para>This functions sets the counter structures to be used to calculate data which comes in and goes out through the session at different levels.</para><para><programlisting><codeline><highlight class="normal">struct<sp/>ssh_counter_struct<sp/>scounter<sp/>=<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>.in_bytes<sp/>=<sp/>0,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>.out_bytes<sp/>=<sp/>0,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>.in_packets<sp/>=<sp/>0,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>.out_packets<sp/>=<sp/>0</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">struct<sp/>ssh_counter_struct<sp/>rcounter<sp/>=<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>.in_bytes<sp/>=<sp/>0,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>.out_bytes<sp/>=<sp/>0,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>.in_packets<sp/>=<sp/>0,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>.out_packets<sp/>=<sp/>0</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">ssh_set_counters(session,<sp/>&amp;scounter,<sp/>&amp;rcounter);</highlight></codeline>
</programlisting></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The SSH session.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">scounter</parametername>
</parameternamelist>
<parameterdescription>
<para>Counter for byte data handled by the session sockets.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rcounter</parametername>
</parameternamelist>
<parameterdescription>
<para>Counter for byte and packet data handled by the session, prior compression and SSH overhead. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/session.c" line="940" column="1" bodyfile="src/session.c" bodystart="940" bodyend="946"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/session.c"/>
  </compounddef>
</doxygen>
