<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="pki__crypto_8c" kind="file" language="C++">
    <compoundname>pki_crypto.c</compoundname>
    <includes refid="priv_8h" local="yes">libssh/priv.h</includes>
    <includes local="no">openssl/pem.h</includes>
    <includes local="no">openssl/dsa.h</includes>
    <includes local="no">openssl/err.h</includes>
    <includes local="no">openssl/rsa.h</includes>
    <includes refid="libssh_8h" local="yes">libssh/libssh.h</includes>
    <includes refid="buffer_8h" local="yes">libssh/buffer.h</includes>
    <includes refid="session_8h" local="yes">libssh/session.h</includes>
    <includes refid="pki_8h" local="yes">libssh/pki.h</includes>
    <includes refid="pki__priv_8h" local="yes">libssh/pki_priv.h</includes>
    <includes refid="bignum_8h" local="yes">libssh/bignum.h</includes>
    <incdepgraph>
      <node id="1981">
        <label>libssh/buffer.h</label>
        <link refid="buffer_8h_source"/>
        <childnode refid="1982" relation="include">
        </childnode>
        <childnode refid="1969" relation="include">
        </childnode>
      </node>
      <node id="1982">
        <label>stdarg.h</label>
      </node>
      <node id="1996">
        <label>libssh/curve25519.h</label>
        <link refid="curve25519_8h_source"/>
        <childnode refid="1967" relation="include">
        </childnode>
        <childnode refid="1969" relation="include">
        </childnode>
      </node>
      <node id="1972">
        <label>sys/select.h</label>
      </node>
      <node id="1966">
        <label>libssh/priv.h</label>
        <link refid="priv_8h_source"/>
        <childnode refid="1967" relation="include">
        </childnode>
        <childnode refid="1968" relation="include">
        </childnode>
        <childnode refid="1969" relation="include">
        </childnode>
        <childnode refid="1975" relation="include">
        </childnode>
      </node>
      <node id="1969">
        <label>libssh/libssh.h</label>
        <link refid="libssh_8h_source"/>
        <childnode refid="1968" relation="include">
        </childnode>
        <childnode refid="1970" relation="include">
        </childnode>
        <childnode refid="1971" relation="include">
        </childnode>
        <childnode refid="1972" relation="include">
        </childnode>
        <childnode refid="1973" relation="include">
        </childnode>
        <childnode refid="1974" relation="include">
        </childnode>
      </node>
      <node id="1977">
        <label>openssl/pem.h</label>
      </node>
      <node id="1985">
        <label>libssh/packet.h</label>
        <link refid="packet_8h_source"/>
        <childnode refid="1986" relation="include">
        </childnode>
      </node>
      <node id="1976">
        <label>string.h</label>
        <link refid="string_8h_source"/>
        <childnode refid="1966" relation="include">
        </childnode>
      </node>
      <node id="1993">
        <label>libssh/pki.h</label>
        <link refid="pki_8h_source"/>
        <childnode refid="1966" relation="include">
        </childnode>
        <childnode refid="1994" relation="include">
        </childnode>
        <childnode refid="1997" relation="include">
        </childnode>
      </node>
      <node id="1974">
        <label>libssh/legacy.h</label>
        <link refid="legacy_8h_source"/>
      </node>
      <node id="1980">
        <label>openssl/rsa.h</label>
      </node>
      <node id="1994">
        <label>libssh/crypto.h</label>
        <link refid="crypto_8h_source"/>
        <childnode refid="1967" relation="include">
        </childnode>
        <childnode refid="1986" relation="include">
        </childnode>
        <childnode refid="1995" relation="include">
        </childnode>
        <childnode refid="1984" relation="include">
        </childnode>
        <childnode refid="1996" relation="include">
        </childnode>
      </node>
      <node id="1973">
        <label>netdb.h</label>
      </node>
      <node id="1975">
        <label>libssh/callbacks.h</label>
        <link refid="callbacks_8h_source"/>
        <childnode refid="1969" relation="include">
        </childnode>
        <childnode refid="1976" relation="include">
        </childnode>
      </node>
      <node id="1979">
        <label>openssl/err.h</label>
      </node>
      <node id="1997">
        <label>libssh/ed25519.h</label>
        <link refid="ed25519_8h_source"/>
        <childnode refid="1966" relation="include">
        </childnode>
      </node>
      <node id="1971">
        <label>sys/types.h</label>
      </node>
      <node id="1992">
        <label>libssh/poll.h</label>
        <link refid="poll_8h_source"/>
        <childnode refid="1967" relation="include">
        </childnode>
      </node>
      <node id="1968">
        <label>unistd.h</label>
      </node>
      <node id="1995">
        <label>libssh/ecdh.h</label>
        <link refid="ecdh_8h_source"/>
        <childnode refid="1967" relation="include">
        </childnode>
      </node>
      <node id="1991">
        <label>libssh/channels.h</label>
        <link refid="channels_8h_source"/>
        <childnode refid="1966" relation="include">
        </childnode>
      </node>
      <node id="1990">
        <label>libssh/auth.h</label>
        <link refid="auth_8h_source"/>
        <childnode refid="1967" relation="include">
        </childnode>
        <childnode refid="1975" relation="include">
        </childnode>
      </node>
      <node id="1986">
        <label>libssh/wrapper.h</label>
        <link refid="wrapper_8h_source"/>
        <childnode refid="1967" relation="include">
        </childnode>
        <childnode refid="1969" relation="include">
        </childnode>
        <childnode refid="1987" relation="include">
        </childnode>
        <childnode refid="1988" relation="include">
        </childnode>
      </node>
      <node id="1999">
        <label>libssh/bignum.h</label>
        <link refid="bignum_8h_source"/>
        <childnode refid="1987" relation="include">
        </childnode>
        <childnode refid="1988" relation="include">
        </childnode>
      </node>
      <node id="1965">
        <label>src/pki_crypto.c</label>
        <link refid="pki__crypto_8c"/>
        <childnode refid="1966" relation="include">
        </childnode>
        <childnode refid="1977" relation="include">
        </childnode>
        <childnode refid="1978" relation="include">
        </childnode>
        <childnode refid="1979" relation="include">
        </childnode>
        <childnode refid="1980" relation="include">
        </childnode>
        <childnode refid="1969" relation="include">
        </childnode>
        <childnode refid="1981" relation="include">
        </childnode>
        <childnode refid="1983" relation="include">
        </childnode>
        <childnode refid="1993" relation="include">
        </childnode>
        <childnode refid="1998" relation="include">
        </childnode>
        <childnode refid="1999" relation="include">
        </childnode>
      </node>
      <node id="1987">
        <label>libssh/libcrypto.h</label>
        <link refid="libcrypto_8h_source"/>
        <childnode refid="1967" relation="include">
        </childnode>
      </node>
      <node id="1984">
        <label>libssh/kex.h</label>
        <link refid="kex_8h_source"/>
        <childnode refid="1966" relation="include">
        </childnode>
        <childnode refid="1975" relation="include">
        </childnode>
      </node>
      <node id="1988">
        <label>libssh/libgcrypt.h</label>
        <link refid="libgcrypt_8h_source"/>
        <childnode refid="1967" relation="include">
        </childnode>
      </node>
      <node id="1978">
        <label>openssl/dsa.h</label>
      </node>
      <node id="1989">
        <label>libssh/pcap.h</label>
        <link refid="pcap_8h_source"/>
        <childnode refid="1967" relation="include">
        </childnode>
        <childnode refid="1969" relation="include">
        </childnode>
      </node>
      <node id="1967">
        <label>config.h</label>
      </node>
      <node id="1998">
        <label>libssh/pki_priv.h</label>
        <link refid="pki__priv_8h_source"/>
        <childnode refid="1993" relation="include">
        </childnode>
      </node>
      <node id="1983">
        <label>libssh/session.h</label>
        <link refid="session_8h_source"/>
        <childnode refid="1966" relation="include">
        </childnode>
        <childnode refid="1984" relation="include">
        </childnode>
        <childnode refid="1985" relation="include">
        </childnode>
        <childnode refid="1989" relation="include">
        </childnode>
        <childnode refid="1990" relation="include">
        </childnode>
        <childnode refid="1991" relation="include">
        </childnode>
        <childnode refid="1992" relation="include">
        </childnode>
      </node>
      <node id="1970">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structpem__get__password__struct" prot="public">pem_get_password_struct</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="pki__crypto_8c_1aa991475f7737921c343f6640122bfb39" prot="public" static="no">
        <name>_PKI_CRYPTO_H</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pki_crypto.c" line="26" column="9" bodyfile="src/pki_crypto.c" bodystart="26" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="pki__crypto_8c_1a2b4a468ea386b597625ef5f554f8dc8d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int pem_get_password</definition>
        <argsstring>(char *buf, int size, int rwflag, void *userdata)</argsstring>
        <name>pem_get_password</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rwflag</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userdata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pki_crypto.c" line="54" column="1" bodyfile="src/pki_crypto.c" bodystart="54" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="pki__crypto_8c_1a2a05d9c8b3df5f3fde1bbbe7b957bf9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssh_key</type>
        <definition>ssh_key pki_key_dup</definition>
        <argsstring>(const ssh_key key, int demote)</argsstring>
        <name>pki_key_dup</name>
        <param>
          <type>const ssh_key</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>demote</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pki_crypto.c" line="214" column="1" bodyfile="src/pki_crypto.c" bodystart="214" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="pki__crypto_8c_1ab4af7536f875cbe11b17084a0e8da6b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pki_key_generate_rsa</definition>
        <argsstring>(ssh_key key, int parameter)</argsstring>
        <name>pki_key_generate_rsa</name>
        <param>
          <type>ssh_key</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pki_crypto.c" line="393" column="1" bodyfile="src/pki_crypto.c" bodystart="393" bodyend="408"/>
      </memberdef>
      <memberdef kind="function" id="pki__crypto_8c_1aab6d729d737db52f84616ecfa1e9737e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pki_key_generate_dss</definition>
        <argsstring>(ssh_key key, int parameter)</argsstring>
        <name>pki_key_generate_dss</name>
        <param>
          <type>ssh_key</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pki_crypto.c" line="410" column="1" bodyfile="src/pki_crypto.c" bodystart="410" bodyend="424"/>
      </memberdef>
      <memberdef kind="function" id="pki__crypto_8c_1ad0a4df50bbb89e4c7d1989caded21b35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pki_key_compare</definition>
        <argsstring>(const ssh_key k1, const ssh_key k2, enum ssh_keycmp_e what)</argsstring>
        <name>pki_key_compare</name>
        <param>
          <type>const ssh_key</type>
          <declname>k1</declname>
        </param>
        <param>
          <type>const ssh_key</type>
          <declname>k2</declname>
        </param>
        <param>
          <type>enum ssh_keycmp_e</type>
          <declname>what</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pki_crypto.c" line="464" column="1" bodyfile="src/pki_crypto.c" bodystart="464" bodyend="552"/>
      </memberdef>
      <memberdef kind="function" id="pki__crypto_8c_1a2f0ca491f398b914b0125e6be5c59d97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssh_string</type>
        <definition>ssh_string pki_private_key_to_pem</definition>
        <argsstring>(const ssh_key key, const char *passphrase, ssh_auth_callback auth_fn, void *auth_data)</argsstring>
        <name>pki_private_key_to_pem</name>
        <param>
          <type>const ssh_key</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>passphrase</declname>
        </param>
        <param>
          <type>ssh_auth_callback</type>
          <declname>auth_fn</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>auth_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pki_crypto.c" line="554" column="1" bodyfile="src/pki_crypto.c" bodystart="554" bodyend="674"/>
      </memberdef>
      <memberdef kind="function" id="pki__crypto_8c_1a8ea7e9b10062403fef0a1885a0572b9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssh_key</type>
        <definition>ssh_key pki_private_key_from_base64</definition>
        <argsstring>(const char *b64_key, const char *passphrase, ssh_auth_callback auth_fn, void *auth_data)</argsstring>
        <name>pki_private_key_from_base64</name>
        <param>
          <type>const char *</type>
          <declname>b64_key</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>passphrase</declname>
        </param>
        <param>
          <type>ssh_auth_callback</type>
          <declname>auth_fn</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>auth_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pki_crypto.c" line="676" column="1" bodyfile="src/pki_crypto.c" bodystart="676" bodyend="815"/>
      </memberdef>
      <memberdef kind="function" id="pki__crypto_8c_1a44ea17f443978628be6498fed45f4f3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pki_pubkey_build_dss</definition>
        <argsstring>(ssh_key key, ssh_string p, ssh_string q, ssh_string g, ssh_string pubkey)</argsstring>
        <name>pki_pubkey_build_dss</name>
        <param>
          <type>ssh_key</type>
          <declname>key</declname>
        </param>
        <param>
          <type>ssh_string</type>
          <declname>p</declname>
        </param>
        <param>
          <type>ssh_string</type>
          <declname>q</declname>
        </param>
        <param>
          <type>ssh_string</type>
          <declname>g</declname>
        </param>
        <param>
          <type>ssh_string</type>
          <declname>pubkey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pki_crypto.c" line="817" column="1" bodyfile="src/pki_crypto.c" bodystart="817" bodyend="840"/>
      </memberdef>
      <memberdef kind="function" id="pki__crypto_8c_1ae2aeca92ffa38cd14e96fabba963389e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pki_pubkey_build_rsa</definition>
        <argsstring>(ssh_key key, ssh_string e, ssh_string n)</argsstring>
        <name>pki_pubkey_build_rsa</name>
        <param>
          <type>ssh_key</type>
          <declname>key</declname>
        </param>
        <param>
          <type>ssh_string</type>
          <declname>e</declname>
        </param>
        <param>
          <type>ssh_string</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pki_crypto.c" line="842" column="1" bodyfile="src/pki_crypto.c" bodystart="842" bodyend="859"/>
      </memberdef>
      <memberdef kind="function" id="pki__crypto_8c_1aa2d53615fe67402faa649f5cb6160e91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssh_string</type>
        <definition>ssh_string pki_publickey_to_blob</definition>
        <argsstring>(const ssh_key key)</argsstring>
        <name>pki_publickey_to_blob</name>
        <param>
          <type>const ssh_key</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pki_crypto.c" line="861" column="1" bodyfile="src/pki_crypto.c" bodystart="861" bodyend="1058"/>
      </memberdef>
      <memberdef kind="function" id="pki__crypto_8c_1ad45dec473fda54fc0b656cd896d44566" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pki_export_pubkey_rsa1</definition>
        <argsstring>(const ssh_key key, const char *host, char *rsa1, size_t rsa1_len)</argsstring>
        <name>pki_export_pubkey_rsa1</name>
        <param>
          <type>const ssh_key</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>host</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>rsa1</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>rsa1_len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pki_crypto.c" line="1060" column="1" bodyfile="src/pki_crypto.c" bodystart="1060" bodyend="1087"/>
      </memberdef>
      <memberdef kind="function" id="pki__crypto_8c_1a461f147bfe958f6d9817320747b74599" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssh_string</type>
        <definition>static ssh_string _RSA_do_sign</definition>
        <argsstring>(const unsigned char *digest, int dlen, RSA *privkey)</argsstring>
        <name>_RSA_do_sign</name>
        <param>
          <type>const unsigned char *</type>
          <declname>digest</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dlen</declname>
        </param>
        <param>
          <type>RSA *</type>
          <declname>privkey</declname>
        </param>
        <briefdescription>
<para>Compute a digital signature. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">digest</parametername>
</parameternamelist>
<parameterdescription>
<para>The message digest.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dlen</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of the digest.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">privkey</parametername>
</parameternamelist>
<parameterdescription>
<para>The private rsa key to use for signing.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A newly allocated rsa sig blob or NULL on error. </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pki_crypto.c" line="1102" column="1" bodyfile="src/pki_crypto.c" bodystart="1102" bodyend="1133"/>
      </memberdef>
      <memberdef kind="function" id="pki__crypto_8c_1a817708f53a64f50b665d647b6d9745c2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssh_string</type>
        <definition>static ssh_string pki_dsa_signature_to_blob</definition>
        <argsstring>(const ssh_signature sig)</argsstring>
        <name>pki_dsa_signature_to_blob</name>
        <param>
          <type>const ssh_signature</type>
          <declname>sig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pki_crypto.c" line="1135" column="1" bodyfile="src/pki_crypto.c" bodystart="1135" bodyend="1183"/>
      </memberdef>
      <memberdef kind="function" id="pki__crypto_8c_1af7558fc15ba8aa68ea68f60321c1a6fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssh_string</type>
        <definition>ssh_string pki_signature_to_blob</definition>
        <argsstring>(const ssh_signature sig)</argsstring>
        <name>pki_signature_to_blob</name>
        <param>
          <type>const ssh_signature</type>
          <declname>sig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pki_crypto.c" line="1185" column="1" bodyfile="src/pki_crypto.c" bodystart="1185" bodyend="1255"/>
      </memberdef>
      <memberdef kind="function" id="pki__crypto_8c_1a7a0e1d4fb915dbdf3086865f5d804a37" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssh_signature</type>
        <definition>static ssh_signature pki_signature_from_rsa_blob</definition>
        <argsstring>(const ssh_key pubkey, const ssh_string sig_blob, ssh_signature sig)</argsstring>
        <name>pki_signature_from_rsa_blob</name>
        <param>
          <type>const ssh_key</type>
          <declname>pubkey</declname>
        </param>
        <param>
          <type>const ssh_string</type>
          <declname>sig_blob</declname>
        </param>
        <param>
          <type>ssh_signature</type>
          <declname>sig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pki_crypto.c" line="1257" column="1" bodyfile="src/pki_crypto.c" bodystart="1257" bodyend="1316"/>
      </memberdef>
      <memberdef kind="function" id="pki__crypto_8c_1afac9cbaa7d7413054b187375aac5132f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssh_signature</type>
        <definition>ssh_signature pki_signature_from_blob</definition>
        <argsstring>(const ssh_key pubkey, const ssh_string sig_blob, enum ssh_keytypes_e type)</argsstring>
        <name>pki_signature_from_blob</name>
        <param>
          <type>const ssh_key</type>
          <declname>pubkey</declname>
        </param>
        <param>
          <type>const ssh_string</type>
          <declname>sig_blob</declname>
        </param>
        <param>
          <type>enum ssh_keytypes_e</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pki_crypto.c" line="1318" column="1" bodyfile="src/pki_crypto.c" bodystart="1318" bodyend="1485"/>
      </memberdef>
      <memberdef kind="function" id="pki__crypto_8c_1a1fca00b734a2974194fbc6c4901614dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pki_signature_verify</definition>
        <argsstring>(ssh_session session, const ssh_signature sig, const ssh_key key, const unsigned char *hash, size_t hlen)</argsstring>
        <name>pki_signature_verify</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <param>
          <type>const ssh_signature</type>
          <declname>sig</declname>
        </param>
        <param>
          <type>const ssh_key</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>hash</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>hlen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pki_crypto.c" line="1487" column="1" bodyfile="src/pki_crypto.c" bodystart="1487" bodyend="1556"/>
      </memberdef>
      <memberdef kind="function" id="pki__crypto_8c_1a614c144390274c1557d68c0601a28bd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssh_signature</type>
        <definition>ssh_signature pki_do_sign</definition>
        <argsstring>(const ssh_key privkey, const unsigned char *hash, size_t hlen)</argsstring>
        <name>pki_do_sign</name>
        <param>
          <type>const ssh_key</type>
          <declname>privkey</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>hash</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>hlen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pki_crypto.c" line="1558" column="1" bodyfile="src/pki_crypto.c" bodystart="1558" bodyend="1624"/>
      </memberdef>
      <memberdef kind="function" id="pki__crypto_8c_1aea37a816e895a9750444e9c56c1b1253" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssh_signature</type>
        <definition>ssh_signature pki_do_sign_sessionid</definition>
        <argsstring>(const ssh_key key, const unsigned char *hash, size_t hlen)</argsstring>
        <name>pki_do_sign_sessionid</name>
        <param>
          <type>const ssh_key</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>hash</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>hlen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/pki_crypto.c" line="1627" column="1" bodyfile="src/pki_crypto.c" bodystart="1627" bodyend="1674"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/pki_crypto.c"/>
  </compounddef>
</doxygen>
