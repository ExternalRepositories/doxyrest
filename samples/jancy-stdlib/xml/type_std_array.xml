<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen>
<compounddef kind='class' id='type_std_array' language='Jancy'>
<compoundname>Array</compoundname>

<sectiondef>
<memberdef kind='variable' id='struct_member_std_array_iface_m_p' readonly='yes'>
<name>m_p</name>
<type>variant cmut*</type>
<modifiers>readonly</modifiers>
<location file='std_Array.jnc' line='25' col='25'/>
</memberdef>

<memberdef kind='variable' id='struct_member_std_array_iface_m_count' readonly='yes'>
<name>m_count</name>
<type><ref refid="typedef_size_t">size_t</ref></type>
<modifiers>readonly</modifiers>
<location file='std_Array.jnc' line='26' col='18'/>
</memberdef>

<memberdef kind='variable' id='struct_member_std_array_iface_m_maxcount' readonly='yes'>
<name>m_maxCount</name>
<type><ref refid="typedef_size_t">size_t</ref></type>
<modifiers>readonly</modifiers>
<location file='std_Array.jnc' line='27' col='18'/>
</memberdef>

<memberdef kind='function' id='function_std_array_clear'>
<functionkind>named-function</functionkind>
<name>clear</name>
<type>void</type>
<argsstring>(std.Array safe* this)</argsstring>
<location file='std_Array.jnc' line='44' col='2'/>
</memberdef>

<memberdef kind='function' id='function_std_array_setcount'>
<functionkind>named-function</functionkind>
<name>setCount</name>
<type>bool errorcode</type>
<argsstring>(std.Array safe* this, size_t count)</argsstring>
<param>
<declname>count</declname>
<type><ref refid="typedef_size_t">size_t</ref></type>
<array></array>
</param>
<location file='std_Array.jnc' line='46' col='17'/>
</memberdef>

<memberdef kind='function' id='function_std_array_reserve'>
<functionkind>named-function</functionkind>
<name>reserve</name>
<type>bool errorcode</type>
<argsstring>(std.Array safe* this, size_t count)</argsstring>
<param>
<declname>count</declname>
<type><ref refid="typedef_size_t">size_t</ref></type>
<array></array>
</param>
<location file='std_Array.jnc' line='47' col='17'/>
</memberdef>

<memberdef kind='function' id='function_std_array_copy'>
<functionkind>named-function</functionkind>
<name>copy</name>
<type><ref refid="typedef_size_t">size_t</ref> errorcode</type>
<argsstring>(std.Array safe* this, variant const* p, size_t count)</argsstring>
<param>
<declname>p</declname>
<type>variant const*</type>
<array></array>
</param>
<param>
<declname>count</declname>
<type><ref refid="typedef_size_t">size_t</ref></type>
<array></array>
</param>
<location file='std_Array.jnc' line='49' col='19'/>
</memberdef>

<memberdef kind='function' id='function_std_array_copy_2'>
<functionkind>named-function</functionkind>
<name>copy</name>
<type><ref refid="typedef_size_t">size_t</ref> errorcode</type>
<argsstring>(std.Array safe* this, variant e)</argsstring>
<param>
<declname>e</declname>
<type>variant</type>
<array></array>
</param>
<location file='std_Array.jnc' line='54' col='19'/>
</memberdef>

<memberdef kind='function' id='function_std_array_append'>
<functionkind>named-function</functionkind>
<name>append</name>
<type><ref refid="typedef_size_t">size_t</ref> errorcode</type>
<argsstring>(std.Array safe* this, variant e)</argsstring>
<param>
<declname>e</declname>
<type>variant</type>
<array></array>
</param>
<location file='std_Array.jnc' line='59' col='19'/>
</memberdef>

<memberdef kind='function' id='function_std_array_append_2'>
<functionkind>named-function</functionkind>
<name>append</name>
<type><ref refid="typedef_size_t">size_t</ref> errorcode</type>
<argsstring>(std.Array safe* this, variant const* p, size_t count)</argsstring>
<param>
<declname>p</declname>
<type>variant const*</type>
<array></array>
</param>
<param>
<declname>count</declname>
<type><ref refid="typedef_size_t">size_t</ref></type>
<array></array>
</param>
<location file='std_Array.jnc' line='64' col='19'/>
</memberdef>

<memberdef kind='function' id='function_std_array_insert'>
<functionkind>named-function</functionkind>
<name>insert</name>
<type><ref refid="typedef_size_t">size_t</ref> errorcode</type>
<argsstring>(std.Array safe* this, size_t index, variant const* p, size_t count)</argsstring>
<param>
<declname>index</declname>
<type><ref refid="typedef_size_t">size_t</ref></type>
<array></array>
</param>
<param>
<declname>p</declname>
<type>variant const*</type>
<array></array>
</param>
<param>
<declname>count</declname>
<type><ref refid="typedef_size_t">size_t</ref></type>
<array></array>
</param>
<location file='std_Array.jnc' line='72' col='19'/>
</memberdef>

<memberdef kind='function' id='function_std_array_insert_2'>
<functionkind>named-function</functionkind>
<name>insert</name>
<type><ref refid="typedef_size_t">size_t</ref> errorcode</type>
<argsstring>(std.Array safe* this, size_t index, variant e)</argsstring>
<param>
<declname>index</declname>
<type><ref refid="typedef_size_t">size_t</ref></type>
<array></array>
</param>
<param>
<declname>e</declname>
<type>variant</type>
<array></array>
</param>
<location file='std_Array.jnc' line='78' col='19'/>
</memberdef>

<memberdef kind='function' id='function_std_array_remove'>
<functionkind>named-function</functionkind>
<name>remove</name>
<type><ref refid="typedef_size_t">size_t</ref></type>
<argsstring>(std.Array safe* this, size_t index, size_t count 1)</argsstring>
<param>
<declname>index</declname>
<type><ref refid="typedef_size_t">size_t</ref></type>
<array></array>
</param>
<param>
<declname>count</declname>
<type><ref refid="typedef_size_t">size_t</ref></type>
<array></array>
<defval>1</defval>
</param>
<location file='std_Array.jnc' line='86' col='9'/>
</memberdef>

<memberdef kind='function' id='function_std_array_boundscheck' prot='protected'>
<functionkind>named-function</functionkind>
<name>boundsCheck</name>
<type>void</type>
<argsstring>(std.Array safe* this, size_t index)</argsstring>
<param>
<declname>index</declname>
<type><ref refid="typedef_size_t">size_t</ref></type>
<array></array>
</param>
<location file='std_Array.jnc' line='92' col='2'/>
</memberdef>

</sectiondef>
<location file='std_Array.jnc' line='23' col='7'/>
</compounddef>
</doxygen>
