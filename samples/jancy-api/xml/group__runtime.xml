<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__runtime" kind="group">
    <compoundname>runtime</compoundname>
    <title>Runtime</title>
    <innerclass refid="structjnc___runtime" prot="public">jnc_Runtime</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__runtime_1gad4414ce5565f6bdda391e78db833f26a" prot="public" static="no">
        <name>jnc_RuntimeDef</name>
        <enumvalue id="group__runtime_1ggad4414ce5565f6bdda391e78db833f26aa1b86e5218df7bf35bd66a94194125d4b" prot="public">
          <name>jnc_RuntimeDef_StackSizeLimit</name>
          <initializer>= 512 * 1024</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__runtime_1ggad4414ce5565f6bdda391e78db833f26aad0a4e54016f326771b8c4f56e0c7d025" prot="public">
          <name>jnc_RuntimeDef_MinStackSizeLimit</name>
          <initializer>= 16 * 1024</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Projects/ioninja/jancy/include/jnc_Runtime.h" line="46" column="1" bodyfile="/home/vladimir/Projects/ioninja/jancy/include/jnc_Runtime.h" bodystart="45" bodyend="54"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__runtime_1ga0d8cb007c2fc2dbb09043ca3a5182a88" prot="public" static="no">
        <type>enum jnc_RuntimeDef</type>
        <definition>typedef enum jnc_RuntimeDef jnc_RuntimeDef</definition>
        <argsstring></argsstring>
        <name>jnc_RuntimeDef</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Projects/ioninja/jancy/include/jnc_Runtime.h" line="53" column="1" bodyfile="/home/vladimir/Projects/ioninja/jancy/include/jnc_Runtime.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__runtime_1gaa573d568bfc739061ac75179b3a84014" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structjnc___runtime" kindref="compound">jnc_Runtime</ref> *</type>
        <definition>jnc_Runtime* jnc_Runtime_create</definition>
        <argsstring>()</argsstring>
        <name>jnc_Runtime_create</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Projects/ioninja/jancy/include/jnc_Runtime.h" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__runtime_1gae2964da65d670e8dd05d0de8c9579648" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jnc_Runtime_destroy</definition>
        <argsstring>(jnc_Runtime *runtime)</argsstring>
        <name>jnc_Runtime_destroy</name>
        <param>
          <type><ref refid="structjnc___runtime" kindref="compound">jnc_Runtime</ref> *</type>
          <declname>runtime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Projects/ioninja/jancy/include/jnc_Runtime.h" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__runtime_1ga04976018377953bfde06c28a80210527" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structjnc___module" kindref="compound">jnc_Module</ref> *</type>
        <definition>jnc_Module* jnc_Runtime_getModule</definition>
        <argsstring>(jnc_Runtime *runtime)</argsstring>
        <name>jnc_Runtime_getModule</name>
        <param>
          <type><ref refid="structjnc___runtime" kindref="compound">jnc_Runtime</ref> *</type>
          <declname>runtime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Projects/ioninja/jancy/include/jnc_Runtime.h" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__runtime_1ga21b3b4b1a0e521d19520b2a5ca973893" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structjnc___gc_heap" kindref="compound">jnc_GcHeap</ref> *</type>
        <definition>jnc_GcHeap* jnc_Runtime_getGcHeap</definition>
        <argsstring>(jnc_Runtime *runtime)</argsstring>
        <name>jnc_Runtime_getGcHeap</name>
        <param>
          <type><ref refid="structjnc___runtime" kindref="compound">jnc_Runtime</ref> *</type>
          <declname>runtime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Projects/ioninja/jancy/include/jnc_Runtime.h" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__runtime_1ga9c3bc0f35b3dd728195eee0648bdd837" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t jnc_Runtime_getStackSizeLimit</definition>
        <argsstring>(jnc_Runtime *runtime)</argsstring>
        <name>jnc_Runtime_getStackSizeLimit</name>
        <param>
          <type><ref refid="structjnc___runtime" kindref="compound">jnc_Runtime</ref> *</type>
          <declname>runtime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Projects/ioninja/jancy/include/jnc_Runtime.h" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__runtime_1ga187bb4307da06179ad97558d9004d341" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int jnc_Runtime_setStackSizeLimit</definition>
        <argsstring>(jnc_Runtime *runtime, size_t sizeLimit)</argsstring>
        <name>jnc_Runtime_setStackSizeLimit</name>
        <param>
          <type><ref refid="structjnc___runtime" kindref="compound">jnc_Runtime</ref> *</type>
          <declname>runtime</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>sizeLimit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Projects/ioninja/jancy/include/jnc_Runtime.h" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__runtime_1ga95d22efa26f522764de29c527c201551" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int jnc_Runtime_startup</definition>
        <argsstring>(jnc_Runtime *runtime, jnc_Module *module)</argsstring>
        <name>jnc_Runtime_startup</name>
        <param>
          <type><ref refid="structjnc___runtime" kindref="compound">jnc_Runtime</ref> *</type>
          <declname>runtime</declname>
        </param>
        <param>
          <type><ref refid="structjnc___module" kindref="compound">jnc_Module</ref> *</type>
          <declname>module</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Projects/ioninja/jancy/include/jnc_Runtime.h" line="89" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__runtime_1ga95be1ad86ed7c757fd16fa3675c20573" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jnc_Runtime_shutdown</definition>
        <argsstring>(jnc_Runtime *runtime)</argsstring>
        <name>jnc_Runtime_shutdown</name>
        <param>
          <type><ref refid="structjnc___runtime" kindref="compound">jnc_Runtime</ref> *</type>
          <declname>runtime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Projects/ioninja/jancy/include/jnc_Runtime.h" line="96" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__runtime_1ga8b1a4cf5befca576e4d460cb30a61577" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jnc_Runtime_initializeCallSite</definition>
        <argsstring>(jnc_Runtime *runtime, jnc_CallSite *callSite)</argsstring>
        <name>jnc_Runtime_initializeCallSite</name>
        <param>
          <type><ref refid="structjnc___runtime" kindref="compound">jnc_Runtime</ref> *</type>
          <declname>runtime</declname>
        </param>
        <param>
          <type><ref refid="structjnc___call_site" kindref="compound">jnc_CallSite</ref> *</type>
          <declname>callSite</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Projects/ioninja/jancy/include/jnc_Runtime.h" line="100" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__runtime_1ga7468ec07901990de07f774772358da07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jnc_Runtime_uninitializeCallSite</definition>
        <argsstring>(jnc_Runtime *runtime, jnc_CallSite *callSite)</argsstring>
        <name>jnc_Runtime_uninitializeCallSite</name>
        <param>
          <type><ref refid="structjnc___runtime" kindref="compound">jnc_Runtime</ref> *</type>
          <declname>runtime</declname>
        </param>
        <param>
          <type><ref refid="structjnc___call_site" kindref="compound">jnc_CallSite</ref> *</type>
          <declname>callSite</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Projects/ioninja/jancy/include/jnc_Runtime.h" line="107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__runtime_1ga7669b971f43c899793fa7bdf7bee7d90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structjnc___sjlj_frame" kindref="compound">jnc_SjljFrame</ref> *</type>
        <definition>jnc_SjljFrame* jnc_Runtime_setSjljFrame</definition>
        <argsstring>(jnc_Runtime *runtime, jnc_SjljFrame *frame)</argsstring>
        <name>jnc_Runtime_setSjljFrame</name>
        <param>
          <type><ref refid="structjnc___runtime" kindref="compound">jnc_Runtime</ref> *</type>
          <declname>runtime</declname>
        </param>
        <param>
          <type><ref refid="structjnc___sjlj_frame" kindref="compound">jnc_SjljFrame</ref> *</type>
          <declname>frame</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Projects/ioninja/jancy/include/jnc_Runtime.h" line="114" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__runtime_1ga2246534f9a75ec80ee2f5ea202601b49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jnc_Runtime_checkStackOverflow</definition>
        <argsstring>(jnc_Runtime *runtime)</argsstring>
        <name>jnc_Runtime_checkStackOverflow</name>
        <param>
          <type><ref refid="structjnc___runtime" kindref="compound">jnc_Runtime</ref> *</type>
          <declname>runtime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Projects/ioninja/jancy/include/jnc_Runtime.h" line="121" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__runtime_1ga83055c9348705edfca257643f2aa5a89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structjnc___runtime" kindref="compound">jnc_Runtime</ref> *</type>
        <definition>jnc_Runtime* jnc_getCurrentThreadRuntime</definition>
        <argsstring>()</argsstring>
        <name>jnc_getCurrentThreadRuntime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Projects/ioninja/jancy/include/jnc_Runtime.h" line="201" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__runtime_1ga112dc37e2b5732b6634c1b763f8affcf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structjnc___gc_heap" kindref="compound">jnc_GcHeap</ref> *</type>
        <definition>static jnc_GcHeap* jnc_getCurrentThreadGcHeap</definition>
        <argsstring>()</argsstring>
        <name>jnc_getCurrentThreadGcHeap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Projects/ioninja/jancy/include/jnc_Runtime.h" line="205" column="1" bodyfile="/home/vladimir/Projects/ioninja/jancy/include/jnc_Runtime.h" bodystart="205" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="group__runtime_1gaa6e828da6424d3c49f7c0e264182e51e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structjnc___tls" kindref="compound">jnc_Tls</ref> *</type>
        <definition>jnc_Tls* jnc_getCurrentThreadTls</definition>
        <argsstring>()</argsstring>
        <name>jnc_getCurrentThreadTls</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Projects/ioninja/jancy/include/jnc_Runtime.h" line="213" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__runtime_1ga634422c3ba46b3ecf685432861aca372" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jnc_dynamicThrow</definition>
        <argsstring>()</argsstring>
        <name>jnc_dynamicThrow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Projects/ioninja/jancy/include/jnc_Runtime.h" line="217" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__runtime_1ga612ab47340947dd96811708c605613af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jnc_primeClass</definition>
        <argsstring>(jnc_Box *box, jnc_Box *root, jnc_ClassType *type, const void *vtable)</argsstring>
        <name>jnc_primeClass</name>
        <param>
          <type><ref refid="structjnc___box" kindref="compound">jnc_Box</ref> *</type>
          <declname>box</declname>
        </param>
        <param>
          <type><ref refid="structjnc___box" kindref="compound">jnc_Box</ref> *</type>
          <declname>root</declname>
        </param>
        <param>
          <type><ref refid="structjnc___class_type" kindref="compound">jnc_ClassType</ref> *</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>vtable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Projects/ioninja/jancy/include/jnc_Runtime.h" line="221" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__runtime_1ga2a88a6ae781a4e760e4c1b61ed99050d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structjnc___iface_hdr" kindref="compound">jnc_IfaceHdr</ref> *</type>
        <definition>jnc_IfaceHdr* jnc_strengthenClassPtr</definition>
        <argsstring>(jnc_IfaceHdr *iface)</argsstring>
        <name>jnc_strengthenClassPtr</name>
        <param>
          <type><ref refid="structjnc___iface_hdr" kindref="compound">jnc_IfaceHdr</ref> *</type>
          <declname>iface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Projects/ioninja/jancy/include/jnc_Runtime.h" line="230" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__runtime_1gaff16761976ccb92071634edefec513b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t jnc_strLen</definition>
        <argsstring>(jnc_DataPtr ptr)</argsstring>
        <name>jnc_strLen</name>
        <param>
          <type><ref refid="structjnc___data_ptr" kindref="compound">jnc_DataPtr</ref></type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Projects/ioninja/jancy/include/jnc_Runtime.h" line="234" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__runtime_1ga33129b2f310226ef9aa07e669dcc59b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structjnc___data_ptr" kindref="compound">jnc_DataPtr</ref></type>
        <definition>jnc_DataPtr jnc_strDup</definition>
        <argsstring>(const char *p, size_t length)</argsstring>
        <name>jnc_strDup</name>
        <param>
          <type>const char *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Projects/ioninja/jancy/include/jnc_Runtime.h" line="238" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__runtime_1gadac5db17fb3ee37ee6f9b781bbd73c32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structjnc___data_ptr" kindref="compound">jnc_DataPtr</ref></type>
        <definition>jnc_DataPtr jnc_memDup</definition>
        <argsstring>(const void *p, size_t size)</argsstring>
        <name>jnc_memDup</name>
        <param>
          <type>const void *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Projects/ioninja/jancy/include/jnc_Runtime.h" line="245" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<internal><para>:import:<ref refid="jnc___runtime_8h_source" kindref="compound">jnc_Runtime.h</ref></para></internal>
    </detaileddescription>
  </compounddef>
</doxygen>
