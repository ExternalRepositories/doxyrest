.. .............................................................................
..
..  This file is part of the Doxyrest toolkit.
..
..  Doxyrest is distributed under the MIT license.
..  For details see accompanying license.txt file,
..  the public copy of which is also available at:
..  http://tibbo.com/downloads/archive/doxyrest/license.txt
..
.. .............................................................................

Doxyrest
========
.. image:: https://travis-ci.org/vovkos/doxyrest.svg?branch=master
	:target: https://travis-ci.org/vovkos/doxyrest
.. image:: https://ci.appveyor.com/api/projects/status/n41qiwei26t7o0pq?svg=true
	:target: https://ci.appveyor.com/project/vovkos/doxyrest
.. image:: https://codecov.io/gh/vovkos/doxyrest/branch/master/graph/badge.svg
	:target: https://codecov.io/gh/vovkos/doxyrest

Abstract
--------

Doxyrest is a compiler from **Doxygen** XML to **reStructuredText** -- hence, the name. It parses XML databases generated by `Doxygen <http://www.stack.nl/~dimitri/doxygen/>`_, feeds those to the Lua-based **string template engine** and produces `reStructuredText <http://docutils.sourceforge.net/rst.html>`_ suitable for being passed further on to the Python documentation generator `Sphinx <http://www.sphinx-doc.org>`_.

.. image:: /doc/manual/images/doxyrest-pipeline.png

This elaborate pipeline allows building **beautiful** documentation for C/C++ APIs with little-to-no changes in the existing in-source Doxygen documentation.

Samples
-------

Check out the results of Doxyrest' handiwork in application to a few open-source projects:

.. list-table::

	*	- LibUSB
		- `sphinx_rtd_theme <https://vovkos.github.io/doxyrest/samples/libusb>`__
		- `sphinxdoc <https://vovkos.github.io/doxyrest/samples/libusb-sphinxdoc>`__
		- vs
		- `original <http://libusb.sourceforge.net/api-1.0>`__

	*	- LibSSH
		- `sphinx_rtd_theme <https://vovkos.github.io/doxyrest/samples/libssh>`__
		- `sphinxdoc <https://vovkos.github.io/doxyrest/samples/libssh-sphinxdoc>`__
		- vs
		- `original <http://api.libssh.org/stable>`__

	*	- ALSA Library
		- `sphinx_rtd_theme <https://vovkos.github.io/doxyrest/samples/alsa>`__
		- `sphinxdoc <https://vovkos.github.io/doxyrest/samples/alsa-sphinxdoc>`__
		- vs
		- `original <http://www.alsa-project.org/alsa-doc/alsa-lib>`__

	*	- Apache Portable Runtime
		- `sphinx_rtd_theme <https://vovkos.github.io/doxyrest/samples/apr>`__
		- `sphinxdoc <https://vovkos.github.io/doxyrest/samples/apr-sphinxdoc>`__
		- vs
		- `original <https://apr.apache.org/docs/apr/1.5>`_

The best part about Doxyrest approach is: it's modular and **100% customizable**! You can play with **Sphinx themes** to change visual appearance (fonts, colors, page layout, etc). Or you can adjust **Lua frames** for more drastic effects -- from tweaking the declaration coding style to changing the whole structure of documentation!

You can even replace Doxygen with your own generator of Doxygen-style XML database and then apply the very same approach to documenting APIs in **any other languages**:

.. list-table::

	* 	- Jancy Standard Library
		- `sphinx_rtd_theme <https://vovkos.github.io/jancy/stdlib>`__

Quick HOWTO
-----------

Here is a list of steps required to apply Doxyrest to existing Doxygen-based projects:

#. 	In your Doxygen configuration file ``Doxyfile`` add::

		GENERATE_XML = YES

	It is also recommended (but no required) to turn off XML program listing as it vastly increses the size of XML database. To do so, add::

		XML_PROGRAMLISTING = NO

#. 	Prepare Sphinx configuration file ``conf.py`` -- either take an existing one and fine tune it to your liking, or generate a new one with ``sphinx-quickstart``. Now add Doxyrest extensions ``doxyrest`` and ``cpplexer``::

		sys.path.insert(1, os.path.abspath('$DOXYREST_SPHINX_DIR'))
		extensions += ['doxyrest', 'cpplexer']

	Usually, Doxygen-based documentation has a main page (created with the ``\mainpage`` directive). If that's the case, add this to avoid build warnings (this page will be force-included)::

		exclude_patterns += ['page_index.rst']

#.	Run Doxygen to generate an XML database. The exact way of doing so depends on the project; it may look like::

		make doc

	or::

		cmake --build . --target doc

	or simply::

		doxygen

#. 	Run Doxyrest to build reStructuredText documentation from the XML database obtained on the previous step::

		doxyrest $DOXYGEN_XML_DIR/index.xml -o $TMP_RST_DIR/index.rst -F $DOXYREST_FRAME_DIR -f c_index.rst.in

	If your project has a main page, add the following to the command line: ``-D g_introFile=page_index.rst`` to force-include the contents of the main page into ``index.rst``.

#. 	Finally, run Sphinx to build HTML pages::

		sphinx-build -b html $TMP_RST_DIR $OUTPUT_HTML_DIR

Now open ``$OUTPUT_HTML_DIR/index.html`` and enjoy the new awesome look of your documentation!

Of course, you can also follow the `build logs <https://travis-ci.org/vovkos/doxyrest>`_ on Travis CI -- always a great way to reproduce build steps.

Documentation
-------------

Follow the links below for additional information:

* `Doxyrest Manual <https://vovkos.github.io/doxyrest/manual>`_
* `Doxyrest Build Guide <https://vovkos.github.io/doxyrest/build-guide>`_
