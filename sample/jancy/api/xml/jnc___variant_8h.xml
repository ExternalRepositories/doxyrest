<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="jnc___variant_8h" kind="file" language="C++">
    <compoundname>jnc_Variant.h</compoundname>
    <includes refid="jnc___runtime_structs_8h" local="yes">jnc_RuntimeStructs.h</includes>
    <includes refid="jnc___op_kind_8h" local="yes">jnc_OpKind.h</includes>
    <includedby refid="jnc___runtime_8h" local="yes">jnc_Runtime.h</includedby>
    <incdepgraph>
      <node id="712">
        <label>stdarg.h</label>
      </node>
      <node id="720">
        <label>wctype.h</label>
      </node>
      <node id="713">
        <label>stdint.h</label>
      </node>
      <node id="715">
        <label>stdlib.h</label>
      </node>
      <node id="716">
        <label>setjmp.h</label>
      </node>
      <node id="721">
        <label>errno.h</label>
      </node>
      <node id="708">
        <label>jnc_RuntimeStructs.h</label>
        <link refid="jnc___runtime_structs_8h_source"/>
        <childnode refid="709" relation="include">
        </childnode>
      </node>
      <node id="711">
        <label>stddef.h</label>
      </node>
      <node id="707">
        <label>jnc_Variant.h</label>
        <link refid="jnc___variant_8h"/>
        <childnode refid="708" relation="include">
        </childnode>
        <childnode refid="722" relation="include">
        </childnode>
      </node>
      <node id="719">
        <label>wchar.h</label>
      </node>
      <node id="717">
        <label>string.h</label>
      </node>
      <node id="722">
        <label>jnc_OpKind.h</label>
        <link refid="jnc___op_kind_8h_source"/>
        <childnode refid="709" relation="include">
        </childnode>
      </node>
      <node id="709">
        <label>jnc_Def.h</label>
        <link refid="jnc___def_8h_source"/>
        <childnode refid="710" relation="include">
        </childnode>
      </node>
      <node id="718">
        <label>ctype.h</label>
      </node>
      <node id="710">
        <label>jnc_Pch.h</label>
        <link refid="jnc___pch_8h_source"/>
        <childnode refid="711" relation="include">
        </childnode>
        <childnode refid="712" relation="include">
        </childnode>
        <childnode refid="713" relation="include">
        </childnode>
        <childnode refid="714" relation="include">
        </childnode>
        <childnode refid="715" relation="include">
        </childnode>
        <childnode refid="716" relation="include">
        </childnode>
        <childnode refid="717" relation="include">
        </childnode>
        <childnode refid="718" relation="include">
        </childnode>
        <childnode refid="719" relation="include">
        </childnode>
        <childnode refid="720" relation="include">
        </childnode>
        <childnode refid="721" relation="include">
        </childnode>
      </node>
      <node id="714">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="725">
        <label>jnc_CallSite.h</label>
        <link refid="jnc___call_site_8h_source"/>
      </node>
      <node id="723">
        <label>jnc_Variant.h</label>
        <link refid="jnc___variant_8h"/>
        <childnode refid="724" relation="include">
        </childnode>
      </node>
      <node id="724">
        <label>jnc_Runtime.h</label>
        <link refid="jnc___runtime_8h_source"/>
        <childnode refid="725" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structjnc___variant" prot="public">jnc_Variant</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="jnc___variant_8h_1ab5cb1ccb4ea38883290674dd553a6a15" prot="public" static="no">
        <name>_JNC_VARIANT_H</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Projects/ioninja/jancy/include/jnc_Variant.h" line="14" column="9" bodyfile="/home/vladimir/Projects/ioninja/jancy/include/jnc_Variant.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__variant_1ga9bbfc495635a67921f507b60da0e8646" prot="public" static="no">
        <type>struct <ref refid="structjnc___variant" kindref="compound">jnc_Variant</ref></type>
        <definition>typedef struct jnc_Variant jnc_Variant</definition>
        <argsstring></argsstring>
        <name>jnc_Variant</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Projects/ioninja/jancy/include/jnc_Variant.h" line="46" column="1" bodyfile="/home/vladimir/Projects/ioninja/jancy/include/jnc_Variant.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__variant_1ga954600d5f5b0c70a96daab9aacaeaa9d" prot="public" static="no" mutable="no">
        <type><ref refid="group__base-def_1gadf3ff658e277ca8ea2878349758bfdf5" kindref="member">JNC_SELECT_ANY</ref> <ref refid="structjnc___variant" kindref="compound">jnc_Variant</ref></type>
        <definition>JNC_SELECT_ANY jnc_Variant jnc_g_nullVariant</definition>
        <argsstring></argsstring>
        <name>jnc_g_nullVariant</name>
        <initializer>= { 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Projects/ioninja/jancy/include/jnc_Variant.h" line="257" column="1" bodyfile="/home/vladimir/Projects/ioninja/jancy/include/jnc_Variant.h" bodystart="257" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__variant_1ga6d397673fd0669797759876e6fa3fbe0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int jnc_Variant_cast</definition>
        <argsstring>(const jnc_Variant *variant, jnc_Type *type, void *buffer)</argsstring>
        <name>jnc_Variant_cast</name>
        <param>
          <type>const <ref refid="structjnc___variant" kindref="compound">jnc_Variant</ref> *</type>
          <declname>variant</declname>
        </param>
        <param>
          <type><ref refid="structjnc___type" kindref="compound">jnc_Type</ref> *</type>
          <declname>type</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Projects/ioninja/jancy/include/jnc_Variant.h" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__variant_1gad56673780e623f9397d39e8eb59cf48e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int jnc_Variant_unaryOperator</definition>
        <argsstring>(const jnc_Variant *variant, jnc_UnOpKind opKind, jnc_Variant *result)</argsstring>
        <name>jnc_Variant_unaryOperator</name>
        <param>
          <type>const <ref refid="structjnc___variant" kindref="compound">jnc_Variant</ref> *</type>
          <declname>variant</declname>
        </param>
        <param>
          <type>jnc_UnOpKind</type>
          <declname>opKind</declname>
        </param>
        <param>
          <type><ref refid="structjnc___variant" kindref="compound">jnc_Variant</ref> *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Projects/ioninja/jancy/include/jnc_Variant.h" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__variant_1ga234f415af87f03ce2ae06f522411cbb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int jnc_Variant_binaryOperator</definition>
        <argsstring>(const jnc_Variant *variant, const jnc_Variant *variant2, jnc_BinOpKind opKind, jnc_Variant *result)</argsstring>
        <name>jnc_Variant_binaryOperator</name>
        <param>
          <type>const <ref refid="structjnc___variant" kindref="compound">jnc_Variant</ref> *</type>
          <declname>variant</declname>
        </param>
        <param>
          <type>const <ref refid="structjnc___variant" kindref="compound">jnc_Variant</ref> *</type>
          <declname>variant2</declname>
        </param>
        <param>
          <type>jnc_BinOpKind</type>
          <declname>opKind</declname>
        </param>
        <param>
          <type><ref refid="structjnc___variant" kindref="compound">jnc_Variant</ref> *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Projects/ioninja/jancy/include/jnc_Variant.h" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__variant_1ga24a38b1969a60857be8523a40673dd88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int jnc_Variant_relationalOperator</definition>
        <argsstring>(const jnc_Variant *variant, const jnc_Variant *variant2, jnc_BinOpKind opKind, int *result)</argsstring>
        <name>jnc_Variant_relationalOperator</name>
        <param>
          <type>const <ref refid="structjnc___variant" kindref="compound">jnc_Variant</ref> *</type>
          <declname>variant</declname>
        </param>
        <param>
          <type>const <ref refid="structjnc___variant" kindref="compound">jnc_Variant</ref> *</type>
          <declname>variant2</declname>
        </param>
        <param>
          <type>jnc_BinOpKind</type>
          <declname>opKind</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Projects/ioninja/jancy/include/jnc_Variant.h" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__variant_1ga0fd17a592afc9d17b903fd2d77356704" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int jnc_Variant_getMember</definition>
        <argsstring>(const jnc_Variant *variant, const char *name, jnc_Variant *result)</argsstring>
        <name>jnc_Variant_getMember</name>
        <param>
          <type>const <ref refid="structjnc___variant" kindref="compound">jnc_Variant</ref> *</type>
          <declname>variant</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="structjnc___variant" kindref="compound">jnc_Variant</ref> *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Projects/ioninja/jancy/include/jnc_Variant.h" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__variant_1gae637a048c56da6eef8cd5b067c79b867" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int jnc_Variant_setMember</definition>
        <argsstring>(jnc_Variant *variant, const char *name, jnc_Variant value)</argsstring>
        <name>jnc_Variant_setMember</name>
        <param>
          <type><ref refid="structjnc___variant" kindref="compound">jnc_Variant</ref> *</type>
          <declname>variant</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="structjnc___variant" kindref="compound">jnc_Variant</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Projects/ioninja/jancy/include/jnc_Variant.h" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__variant_1ga912b7c0cfe963a7f33b2fc715536ebc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int jnc_Variant_getElement</definition>
        <argsstring>(const jnc_Variant *variant, size_t index, jnc_Variant *result)</argsstring>
        <name>jnc_Variant_getElement</name>
        <param>
          <type>const <ref refid="structjnc___variant" kindref="compound">jnc_Variant</ref> *</type>
          <declname>variant</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="structjnc___variant" kindref="compound">jnc_Variant</ref> *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Projects/ioninja/jancy/include/jnc_Variant.h" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__variant_1ga0414adc11374ee3223dabbe9ee5e16dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int jnc_Variant_setElement</definition>
        <argsstring>(jnc_Variant *variant, size_t index, jnc_Variant value)</argsstring>
        <name>jnc_Variant_setElement</name>
        <param>
          <type><ref refid="structjnc___variant" kindref="compound">jnc_Variant</ref> *</type>
          <declname>variant</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="structjnc___variant" kindref="compound">jnc_Variant</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Projects/ioninja/jancy/include/jnc_Variant.h" line="93" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__variant_1ga11f8d39e0de2a3637a124193e38f0ee9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int jnc_Variant_isEqual</definition>
        <argsstring>(const jnc_Variant *variant, const jnc_Variant *variant2)</argsstring>
        <name>jnc_Variant_isEqual</name>
        <param>
          <type>const <ref refid="structjnc___variant" kindref="compound">jnc_Variant</ref> *</type>
          <declname>variant</declname>
        </param>
        <param>
          <type>const <ref refid="structjnc___variant" kindref="compound">jnc_Variant</ref> *</type>
          <declname>variant2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Projects/ioninja/jancy/include/jnc_Variant.h" line="101" column="1" bodyfile="/home/vladimir/Projects/ioninja/jancy/include/jnc_Variant.h" bodystart="101" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="group__variant_1ga13dba0d208b05eb0cf19407aef859ad8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t jnc_Variant_hash</definition>
        <argsstring>(const jnc_Variant *variant)</argsstring>
        <name>jnc_Variant_hash</name>
        <param>
          <type>const <ref refid="structjnc___variant" kindref="compound">jnc_Variant</ref> *</type>
          <declname>variant</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Projects/ioninja/jancy/include/jnc_Variant.h" line="112" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/vladimir/Projects/ioninja/jancy/include/jnc_Variant.h"/>
  </compounddef>
</doxygen>
