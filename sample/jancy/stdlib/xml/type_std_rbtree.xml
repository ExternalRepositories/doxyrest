<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen>
<compounddef kind='class' id='type_std_rbtree' language='Jancy'>
<compoundname>RbTree</compoundname>

<sectiondef>
<memberdef kind='function' id='function_std_rbtree_construct'>
<functionkind>construct</functionkind>
<name>construct</name>
<type>void</type>
<argsstring>(std.RbTree safe* this, std.CmpFunc thin* cmpFunc null)</argsstring>
<param>
<declname>cmpFunc</declname>
<type><ref refid="typedef_std_cmpfunc">std.CmpFunc</ref> thin*</type>
<array></array>
<defval>null</defval>
</param>
<location file='std_RbTree.jnc' line='49' col='2'/>
</memberdef>
<memberdef kind='function' id='function_std_rbtree_destruct'>
<functionkind>destruct</functionkind>
<name>destruct</name>
<type>void</type>
<argsstring>(std.RbTree safe* this)</argsstring>
<location file='std_RbTree.jnc' line='51' col='2'/>
</memberdef>
</sectiondef>

<sectiondef>
<memberdef kind='variable' id='struct_member_std_rbtree_iface_m_head' readonly='yes'>
<name>m_head</name>
<type><ref refid="type_std_mapentry">std.MapEntry</ref> cmut*</type>
<modifiers>readonly</modifiers>
<location file='std_RbTree.jnc' line='45' col='26'/>
</memberdef>

<memberdef kind='variable' id='struct_member_std_rbtree_iface_m_tail' readonly='yes'>
<name>m_tail</name>
<type><ref refid="type_std_mapentry">std.MapEntry</ref> cmut*</type>
<modifiers>readonly</modifiers>
<location file='std_RbTree.jnc' line='46' col='26'/>
</memberdef>

<memberdef kind='variable' id='struct_member_std_rbtree_iface_m_count' readonly='yes'>
<name>m_count</name>
<type><ref refid="typedef_size_t">size_t</ref></type>
<modifiers>readonly</modifiers>
<location file='std_RbTree.jnc' line='47' col='18'/>
</memberdef>

<memberdef kind='property' id='property_std_rbtree_m_isempty'>
<name>m_isEmpty</name>
<type>bool const property</type>
<argsstring>(std.RbTree safe const* this)</argsstring>
<location file='std_RbTree.jnc' line='53' col='22'/>
</memberdef>

<memberdef kind='function' id='function_std_rbtree_clear'>
<functionkind>named-function</functionkind>
<name>clear</name>
<type>void</type>
<argsstring>(std.RbTree safe* this)</argsstring>
<location file='std_RbTree.jnc' line='73' col='2'/>
</memberdef>

<memberdef kind='function' id='function_std_rbtree_visit'>
<functionkind>named-function</functionkind>
<name>visit</name>
<type><ref refid="type_std_mapentry">std.MapEntry</ref> cmut* errorcode</type>
<argsstring>(std.RbTree safe* this, variant key)</argsstring>
<param>
<declname>key</declname>
<type>variant</type>
<array></array>
</param>
<location file='std_RbTree.jnc' line='75' col='22'/>
</memberdef>

<memberdef kind='function' id='function_std_rbtree_find' const='yes'>
<functionkind>named-function</functionkind>
<name>find</name>
<type><ref refid="type_std_mapentry">std.MapEntry</ref> cmut*</type>
<argsstring>(std.RbTree safe const* this, variant key)</argsstring>
<param>
<declname>key</declname>
<type>variant</type>
<array></array>
</param>
<location file='std_RbTree.jnc' line='76' col='17'/>
</memberdef>

<memberdef kind='function' id='function_std_rbtree_find_2' const='yes'>
<functionkind>named-function</functionkind>
<name>find</name>
<type><ref refid="type_std_mapentry">std.MapEntry</ref> cmut*</type>
<argsstring>(std.RbTree safe const* this, variant key, std.BinTreeFindRelOp relOp)</argsstring>
<param>
<declname>key</declname>
<type>variant</type>
<array></array>
</param>
<param>
<declname>relOp</declname>
<type><ref refid="type_std_bintreefindrelop">std.BinTreeFindRelOp</ref></type>
<array></array>
</param>
<location file='std_RbTree.jnc' line='78' col='17'/>
</memberdef>

<memberdef kind='function' id='function_std_rbtree_findvalue' const='yes'>
<functionkind>named-function</functionkind>
<name>findValue</name>
<type>variant</type>
<argsstring>(std.RbTree safe const* this, variant key, variant undefinedValue null)</argsstring>
<param>
<declname>key</declname>
<type>variant</type>
<array></array>
</param>
<param>
<declname>undefinedValue</declname>
<type>variant</type>
<array></array>
<defval>null</defval>
</param>
<location file='std_RbTree.jnc' line='83' col='10'/>
</memberdef>

<memberdef kind='function' id='function_std_rbtree_findvalue_2' const='yes'>
<functionkind>named-function</functionkind>
<name>findValue</name>
<type>variant</type>
<argsstring>(std.RbTree safe const* this, variant key, std.BinTreeFindRelOp relOp, variant undefinedValue null)</argsstring>
<param>
<declname>key</declname>
<type>variant</type>
<array></array>
</param>
<param>
<declname>relOp</declname>
<type><ref refid="type_std_bintreefindrelop">std.BinTreeFindRelOp</ref></type>
<array></array>
</param>
<param>
<declname>undefinedValue</declname>
<type>variant</type>
<array></array>
<defval>null</defval>
</param>
<location file='std_RbTree.jnc' line='92' col='10'/>
</memberdef>

<memberdef kind='function' id='function_std_rbtree_add'>
<functionkind>named-function</functionkind>
<name>add</name>
<type><ref refid="type_std_mapentry">std.MapEntry</ref> cmut* errorcode</type>
<argsstring>(std.RbTree safe* this, variant key, variant value)</argsstring>
<param>
<declname>key</declname>
<type>variant</type>
<array></array>
</param>
<param>
<declname>value</declname>
<type>variant</type>
<array></array>
</param>
<location file='std_RbTree.jnc' line='102' col='22'/>
</memberdef>

<memberdef kind='function' id='function_std_rbtree_remove'>
<functionkind>named-function</functionkind>
<name>remove</name>
<type>void</type>
<argsstring>(std.RbTree safe* this, std.MapEntry cmut* entry)</argsstring>
<param>
<declname>entry</declname>
<type><ref refid="type_std_mapentry">std.MapEntry</ref> cmut*</type>
<array></array>
</param>
<location file='std_RbTree.jnc' line='112' col='7'/>
</memberdef>

<memberdef kind='function' id='function_std_rbtree_removekey'>
<functionkind>named-function</functionkind>
<name>removeKey</name>
<type>bool</type>
<argsstring>(std.RbTree safe* this, variant key)</argsstring>
<param>
<declname>key</declname>
<type>variant</type>
<array></array>
</param>
<location file='std_RbTree.jnc' line='114' col='7'/>
</memberdef>

</sectiondef>
<location file='std_RbTree.jnc' line='43' col='14'/>
</compounddef>
</doxygen>
