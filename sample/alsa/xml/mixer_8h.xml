<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="mixer_8h" kind="file" language="C++">
    <compoundname>mixer.h</compoundname>
    <innerclass refid="structsnd__mixer__selem__regopt" prot="public">snd_mixer_selem_regopt</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___mixer_1ga040501051e4e4f8667caf0e89328702b" prot="public" static="no">
        <name>snd_mixer_class_alloca</name>
        <param><defname>ptr</defname></param>
        <briefdescription>
<para>allocate an invalid <ref refid="group___mixer_1ga51c7b205d5afc62342d9dec3ce54d11f" kindref="member">snd_mixer_class_t</ref> using standard alloca </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>returned pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="147" column="9" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___simple_mixer_1gae97a5b8fbc068632409e1459a9476222" prot="public" static="no">
        <name>snd_mixer_selem_id_alloca</name>
        <param><defname>ptr</defname></param>
        <briefdescription>
<para>allocate an invalid <ref refid="group___simple_mixer_1gac0bfc2b9efcbc308df2daad92983e2ee" kindref="member">snd_mixer_selem_id_t</ref> using standard alloca </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>returned pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="299" column="9" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" bodystart="299" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group___mixer_1ga18a15493e66cc90ab851e49161d28b4c" prot="public" static="no">
        <name>snd_mixer_elem_type_t</name>
        <enumvalue id="group___mixer_1gga18a15493e66cc90ab851e49161d28b4ca7a49de0bac490868a06cafa2a7edcbb9" prot="public">
          <name>SND_MIXER_ELEM_SIMPLE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___mixer_1gga18a15493e66cc90ab851e49161d28b4ca63d0ecad5e06525d34c7fce5016a0f7c" prot="public">
          <name>SND_MIXER_ELEM_LAST</name>
          <initializer>= SND_MIXER_ELEM_SIMPLE</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Mixer element type </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="90" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" bodystart="90" bodyend="94"/>
      </memberdef>
      <memberdef kind="enum" id="group___simple_mixer_1gaf01a92f33cc46d0b3878d65afcc41b97" prot="public" static="no">
        <name>snd_mixer_selem_channel_id_t</name>
        <enumvalue id="group___simple_mixer_1ggaf01a92f33cc46d0b3878d65afcc41b97a91369fd97c7cb996647c1993136b70ff" prot="public">
          <name>SND_MIXER_SCHN_UNKNOWN</name>
          <initializer>= -1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Unknown </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___simple_mixer_1ggaf01a92f33cc46d0b3878d65afcc41b97afabaaa694a14ab17e1c03ed0a4ff6f43" prot="public">
          <name>SND_MIXER_SCHN_FRONT_LEFT</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Front left </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___simple_mixer_1ggaf01a92f33cc46d0b3878d65afcc41b97ab9310897c48a0aa06c822d92970b77a7" prot="public">
          <name>SND_MIXER_SCHN_FRONT_RIGHT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Front right </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___simple_mixer_1ggaf01a92f33cc46d0b3878d65afcc41b97ad72538d298df9240b9b776f7019e9c2d" prot="public">
          <name>SND_MIXER_SCHN_REAR_LEFT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Rear left </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___simple_mixer_1ggaf01a92f33cc46d0b3878d65afcc41b97afa66c007bd5deda0b6acb7516c483c62" prot="public">
          <name>SND_MIXER_SCHN_REAR_RIGHT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Rear right </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___simple_mixer_1ggaf01a92f33cc46d0b3878d65afcc41b97a796f68400623ee579ce3d0a913d7ffbd" prot="public">
          <name>SND_MIXER_SCHN_FRONT_CENTER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Front center </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___simple_mixer_1ggaf01a92f33cc46d0b3878d65afcc41b97ae8b2cde33cdb6ba8b7a2f58a69d37e19" prot="public">
          <name>SND_MIXER_SCHN_WOOFER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Woofer </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___simple_mixer_1ggaf01a92f33cc46d0b3878d65afcc41b97aa50f3dbd34b82d2634c0dba82a85080d" prot="public">
          <name>SND_MIXER_SCHN_SIDE_LEFT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Side Left </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___simple_mixer_1ggaf01a92f33cc46d0b3878d65afcc41b97ae95813ea4f45d4fb8c3827adc7d36e7b" prot="public">
          <name>SND_MIXER_SCHN_SIDE_RIGHT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Side Right </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___simple_mixer_1ggaf01a92f33cc46d0b3878d65afcc41b97a709e466b14161e3aba70717b2fc528bd" prot="public">
          <name>SND_MIXER_SCHN_REAR_CENTER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Rear Center </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___simple_mixer_1ggaf01a92f33cc46d0b3878d65afcc41b97a89404ee2c2284ee3b18da54af53f2479" prot="public">
          <name>SND_MIXER_SCHN_LAST</name>
          <initializer>= 31</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___simple_mixer_1ggaf01a92f33cc46d0b3878d65afcc41b97a6f894eb8b9532977e29e99122e995833" prot="public">
          <name>SND_MIXER_SCHN_MONO</name>
          <initializer>= SND_MIXER_SCHN_FRONT_LEFT</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Mono (Front left alias) </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Mixer simple element channel identifier </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="170" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" bodystart="170" bodyend="194"/>
      </memberdef>
      <memberdef kind="enum" id="group___simple_mixer_1gab7031d53c3876396c9880631813979c2" prot="public" static="no">
        <name>snd_mixer_selem_regopt_abstract</name>
        <enumvalue id="group___simple_mixer_1ggab7031d53c3876396c9880631813979c2a807967c1a34b191d53eb65fe4a6f656c" prot="public">
          <name>SND_MIXER_SABSTRACT_NONE</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>no abstraction - try use all universal controls from driver </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___simple_mixer_1ggab7031d53c3876396c9880631813979c2a71c3a86bbb0514b4c5c488741dec000a" prot="public">
          <name>SND_MIXER_SABSTRACT_BASIC</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>basic abstraction - Master,PCM,CD,Aux,Record-Gain etc. </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Mixer simple element - register options - abstraction level </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="197" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" bodystart="197" bodyend="202"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group___mixer_1ga34161447bc01a64f578456ed13d57e33" prot="public" static="no">
        <type>struct _snd_mixer</type>
        <definition>typedef struct _snd_mixer snd_mixer_t</definition>
        <argsstring></argsstring>
        <name>snd_mixer_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Mixer handle </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="254" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___mixer_1ga51c7b205d5afc62342d9dec3ce54d11f" prot="public" static="no">
        <type>struct _snd_mixer_class</type>
        <definition>typedef struct _snd_mixer_class snd_mixer_class_t</definition>
        <argsstring></argsstring>
        <name>snd_mixer_class_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Mixer elements class handle </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="254" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" prot="public" static="no">
        <type>struct _snd_mixer_elem</type>
        <definition>typedef struct _snd_mixer_elem snd_mixer_elem_t</definition>
        <argsstring></argsstring>
        <name>snd_mixer_elem_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Mixer element handle </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="254" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___mixer_1ga8dc213e4c7156e1a0dad485700dcdce8" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* snd_mixer_callback_t) (snd_mixer_t *ctl, unsigned int mask, snd_mixer_elem_t *elem)</definition>
        <argsstring>)(snd_mixer_t *ctl, unsigned int mask, snd_mixer_elem_t *elem)</argsstring>
        <name>snd_mixer_callback_t</name>
        <briefdescription>
<para>Mixer callback function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mixer</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>event mask </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>related mixer element (if any) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="55" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___mixer_1ga667c25f9cbf052f9eaa867a5af271007" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* snd_mixer_elem_callback_t) (snd_mixer_elem_t *elem, unsigned int mask)</definition>
        <argsstring>)(snd_mixer_elem_t *elem, unsigned int mask)</argsstring>
        <name>snd_mixer_elem_callback_t</name>
        <briefdescription>
<para>Mixer element callback function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer element </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>event mask </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="65" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___mixer_1gaf4cc71d58faf35cb8f62006e467b21e8" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* snd_mixer_compare_t) (const snd_mixer_elem_t *e1, const snd_mixer_elem_t *e2)</definition>
        <argsstring>)(const snd_mixer_elem_t *e1, const snd_mixer_elem_t *e2)</argsstring>
        <name>snd_mixer_compare_t</name>
        <briefdescription>
<para>Compare function for sorting mixer elements. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e1</parametername>
</parameternamelist>
<parameterdescription>
<para>First element </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>e2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second element </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>-1 if e1 &lt; e2, 0 if e1 == e2, 1 if e1 &gt; e2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="74" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___mixer_1gaa121b4c6c77665a9482b7a8d2128dd8c" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* snd_mixer_event_t) (snd_mixer_class_t *class_, unsigned int mask, snd_hctl_elem_t *helem, snd_mixer_elem_t *melem)</definition>
        <argsstring>)(snd_mixer_class_t *class_, unsigned int mask, snd_hctl_elem_t *helem, snd_mixer_elem_t *melem)</argsstring>
        <name>snd_mixer_event_t</name>
        <briefdescription>
<para>Event callback for the mixer class. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>class_</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer class </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Event mask (SND_CTL_EVENT_*) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>helem</parametername>
</parameternamelist>
<parameterdescription>
<para>HCTL element which invoked the event </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>melem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer element associated to HCTL element </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>zero if success, otherwise a negative error value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="85" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___simple_mixer_1gac0bfc2b9efcbc308df2daad92983e2ee" prot="public" static="no">
        <type>struct _snd_mixer_selem_id</type>
        <definition>typedef struct _snd_mixer_selem_id snd_mixer_selem_id_t</definition>
        <argsstring></argsstring>
        <name>snd_mixer_selem_id_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Mixer simple element identifier </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="158" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" bodystart="219" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___mixer_1ga240cfebce7d68f22875d76e99cf19394" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_open</definition>
        <argsstring>(snd_mixer_t **mixer, int mode)</argsstring>
        <name>snd_mixer_open</name>
        <param>
          <type><ref refid="group___mixer_1ga34161447bc01a64f578456ed13d57e33" kindref="member">snd_mixer_t</ref> **</type>
          <declname>mixer</declname>
          <defname>mixerp</defname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Opens an empty mixer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mixerp</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned mixer handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Open mode </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="96" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/mixer.c" bodystart="68" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="group___mixer_1ga9deea3f628bf737001d968620cfd3b1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_close</definition>
        <argsstring>(snd_mixer_t *mixer)</argsstring>
        <name>snd_mixer_close</name>
        <param>
          <type><ref refid="group___mixer_1ga34161447bc01a64f578456ed13d57e33" kindref="member">snd_mixer_t</ref> *</type>
          <declname>mixer</declname>
        </param>
        <briefdescription>
<para>Close a mixer and free all related resources. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mixer</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="97" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/mixer.c" bodystart="601" bodyend="626"/>
      </memberdef>
      <memberdef kind="function" id="group___mixer_1gaffccf51ddf8ecdc357b216cb979a2318" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
        <definition>snd_mixer_elem_t* snd_mixer_first_elem</definition>
        <argsstring>(snd_mixer_t *mixer)</argsstring>
        <name>snd_mixer_first_elem</name>
        <param>
          <type><ref refid="group___mixer_1ga34161447bc01a64f578456ed13d57e33" kindref="member">snd_mixer_t</ref> *</type>
          <declname>mixer</declname>
        </param>
        <briefdescription>
<para>get first element for a mixer </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mixer</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to first element </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="98" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/mixer.c" bodystart="788" bodyend="794"/>
      </memberdef>
      <memberdef kind="function" id="group___mixer_1ga51121b263ea3d3ee9367aabfd338ef11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
        <definition>snd_mixer_elem_t* snd_mixer_last_elem</definition>
        <argsstring>(snd_mixer_t *mixer)</argsstring>
        <name>snd_mixer_last_elem</name>
        <param>
          <type><ref refid="group___mixer_1ga34161447bc01a64f578456ed13d57e33" kindref="member">snd_mixer_t</ref> *</type>
          <declname>mixer</declname>
        </param>
        <briefdescription>
<para>get last element for a mixer </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mixer</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to last element </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="99" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/mixer.c" bodystart="801" bodyend="807"/>
      </memberdef>
      <memberdef kind="function" id="group___mixer_1gae0cfb6b50ec2493281107b0649f87cb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_handle_events</definition>
        <argsstring>(snd_mixer_t *mixer)</argsstring>
        <name>snd_mixer_handle_events</name>
        <param>
          <type><ref refid="group___mixer_1ga34161447bc01a64f578456ed13d57e33" kindref="member">snd_mixer_t</ref> *</type>
          <declname>mixer</declname>
        </param>
        <briefdescription>
<para>Handle pending mixer events invoking callbacks. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mixer</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of events that occured on success, otherwise a negative error code on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="100" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/mixer.c" bodystart="840" bodyend="854"/>
      </memberdef>
      <memberdef kind="function" id="group___mixer_1ga8c36e99e3d2ab0cb76a5acd203face45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_attach</definition>
        <argsstring>(snd_mixer_t *mixer, const char *name)</argsstring>
        <name>snd_mixer_attach</name>
        <param>
          <type><ref refid="group___mixer_1ga34161447bc01a64f578456ed13d57e33" kindref="member">snd_mixer_t</ref> *</type>
          <declname>mixer</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Attach an HCTL specified with the CTL device name to an opened mixer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mixer</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>HCTL name (see <ref refid="group___h_control_1ga2a86455eaad4f2730a936d06c62cca29" kindref="member">snd_hctl_open</ref>) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="101" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/mixer.c" bodystart="198" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="group___mixer_1ga01e5feeb925addfc245ce81c037b1397" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_attach_hctl</definition>
        <argsstring>(snd_mixer_t *mixer, snd_hctl_t *hctl)</argsstring>
        <name>snd_mixer_attach_hctl</name>
        <param>
          <type><ref refid="group___mixer_1ga34161447bc01a64f578456ed13d57e33" kindref="member">snd_mixer_t</ref> *</type>
          <declname>mixer</declname>
        </param>
        <param>
          <type><ref refid="group___h_control_1ga13c9ad52c57ab7db06065a7f806b2369" kindref="member">snd_hctl_t</ref> *</type>
          <declname>hctl</declname>
        </param>
        <briefdescription>
<para>Attach an HCTL to an opened mixer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mixer</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hctl</parametername>
</parameternamelist>
<parameterdescription>
<para>the HCTL to be attached </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code</para></simplesect>
Upon error, this function closes the given hctl handle automatically. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="102" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/mixer.c" bodystart="220" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="group___mixer_1ga99ca1c15d46d5f194a216d5e0a8e9229" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_detach</definition>
        <argsstring>(snd_mixer_t *mixer, const char *name)</argsstring>
        <name>snd_mixer_detach</name>
        <param>
          <type><ref refid="group___mixer_1ga34161447bc01a64f578456ed13d57e33" kindref="member">snd_mixer_t</ref> *</type>
          <declname>mixer</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Detach a previously attached HCTL to an opened mixer freeing all related resources. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mixer</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>HCTL previously attached </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="103" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/mixer.c" bodystart="250" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="group___mixer_1ga63b6f8183e08a2b3e6bb83638828e8df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_detach_hctl</definition>
        <argsstring>(snd_mixer_t *mixer, snd_hctl_t *hctl)</argsstring>
        <name>snd_mixer_detach_hctl</name>
        <param>
          <type><ref refid="group___mixer_1ga34161447bc01a64f578456ed13d57e33" kindref="member">snd_mixer_t</ref> *</type>
          <declname>mixer</declname>
        </param>
        <param>
          <type><ref refid="group___h_control_1ga13c9ad52c57ab7db06065a7f806b2369" kindref="member">snd_hctl_t</ref> *</type>
          <declname>hctl</declname>
        </param>
        <briefdescription>
<para>Detach a previously attached HCTL to an opened mixer freeing all related resources. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mixer</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hctl</parametername>
</parameternamelist>
<parameterdescription>
<para>HCTL previously attached </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code</para></simplesect>
Note: The hctl handle is not closed! </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="104" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/mixer.c" bodystart="274" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="group___mixer_1gafbbaedd662ea57e573e09f39ca8b247c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_get_hctl</definition>
        <argsstring>(snd_mixer_t *mixer, const char *name, snd_hctl_t **hctl)</argsstring>
        <name>snd_mixer_get_hctl</name>
        <param>
          <type><ref refid="group___mixer_1ga34161447bc01a64f578456ed13d57e33" kindref="member">snd_mixer_t</ref> *</type>
          <declname>mixer</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="group___h_control_1ga13c9ad52c57ab7db06065a7f806b2369" kindref="member">snd_hctl_t</ref> **</type>
          <declname>hctl</declname>
        </param>
        <briefdescription>
<para>Obtain a HCTL pointer associated to given name. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mixer</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>HCTL previously attached </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hctl</parametername>
</parameternamelist>
<parameterdescription>
<para>HCTL pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="105" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/mixer.c" bodystart="296" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="group___mixer_1gab3ee14782a19e6d62acbdcdb5f9f7786" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_poll_descriptors_count</definition>
        <argsstring>(snd_mixer_t *mixer)</argsstring>
        <name>snd_mixer_poll_descriptors_count</name>
        <param>
          <type><ref refid="group___mixer_1ga34161447bc01a64f578456ed13d57e33" kindref="member">snd_mixer_t</ref> *</type>
          <declname>mixer</declname>
        </param>
        <briefdescription>
<para>get count of poll descriptors for mixer handle </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mixer</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>count of poll descriptors </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="106" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/mixer.c" bodystart="686" bodyend="701"/>
      </memberdef>
      <memberdef kind="function" id="group___mixer_1ga07f7bc33587907988aaffc03ce72367e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_poll_descriptors</definition>
        <argsstring>(snd_mixer_t *mixer, struct pollfd *pfds, unsigned int space)</argsstring>
        <name>snd_mixer_poll_descriptors</name>
        <param>
          <type><ref refid="group___mixer_1ga34161447bc01a64f578456ed13d57e33" kindref="member">snd_mixer_t</ref> *</type>
          <declname>mixer</declname>
        </param>
        <param>
          <type>struct pollfd *</type>
          <declname>pfds</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>space</declname>
        </param>
        <briefdescription>
<para>get poll descriptors </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mixer</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pfds</parametername>
</parameternamelist>
<parameterdescription>
<para>array of poll descriptors </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>space</parametername>
</parameternamelist>
<parameterdescription>
<para>space in the poll descriptor array </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>count of filled descriptors </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="107" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/mixer.c" bodystart="710" bodyend="730"/>
      </memberdef>
      <memberdef kind="function" id="group___mixer_1gab26686311756ee3c66e05766227df818" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_poll_descriptors_revents</definition>
        <argsstring>(snd_mixer_t *mixer, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)</argsstring>
        <name>snd_mixer_poll_descriptors_revents</name>
        <param>
          <type><ref refid="group___mixer_1ga34161447bc01a64f578456ed13d57e33" kindref="member">snd_mixer_t</ref> *</type>
          <declname>mixer</declname>
        </param>
        <param>
          <type>struct pollfd *</type>
          <declname>pfds</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>nfds</declname>
        </param>
        <param>
          <type>unsigned short *</type>
          <declname>revents</declname>
        </param>
        <briefdescription>
<para>get returned events from poll descriptors </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mixer</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pfds</parametername>
</parameternamelist>
<parameterdescription>
<para>array of poll descriptors </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nfds</parametername>
</parameternamelist>
<parameterdescription>
<para>count of poll descriptors </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>revents</parametername>
</parameternamelist>
<parameterdescription>
<para>returned events </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>zero if success, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="108" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/mixer.c" bodystart="740" bodyend="752"/>
      </memberdef>
      <memberdef kind="function" id="group___mixer_1ga24b6077528d04cb9fca072b3ae109aef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_load</definition>
        <argsstring>(snd_mixer_t *mixer)</argsstring>
        <name>snd_mixer_load</name>
        <param>
          <type><ref refid="group___mixer_1ga34161447bc01a64f578456ed13d57e33" kindref="member">snd_mixer_t</ref> *</type>
          <declname>mixer</declname>
        </param>
        <briefdescription>
<para>Load a mixer elements. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mixer</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="109" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/mixer.c" bodystart="568" bodyend="580"/>
      </memberdef>
      <memberdef kind="function" id="group___mixer_1ga93a71c28e82c04e4c732703e309910fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_mixer_free</definition>
        <argsstring>(snd_mixer_t *mixer)</argsstring>
        <name>snd_mixer_free</name>
        <param>
          <type><ref refid="group___mixer_1ga34161447bc01a64f578456ed13d57e33" kindref="member">snd_mixer_t</ref> *</type>
          <declname>mixer</declname>
        </param>
        <briefdescription>
<para>Unload all mixer elements and free all related resources. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mixer</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer handle </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="110" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/mixer.c" bodystart="586" bodyend="594"/>
      </memberdef>
      <memberdef kind="function" id="group___mixer_1ga072846849f4bc2058336fd6601f18a15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_wait</definition>
        <argsstring>(snd_mixer_t *mixer, int timeout)</argsstring>
        <name>snd_mixer_wait</name>
        <param>
          <type><ref refid="group___mixer_1ga34161447bc01a64f578456ed13d57e33" kindref="member">snd_mixer_t</ref> *</type>
          <declname>mixer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Wait for a mixer to become ready (i.e. at least one event pending) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mixer</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum time in milliseconds to wait </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="111" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/mixer.c" bodystart="760" bodyend="781"/>
      </memberdef>
      <memberdef kind="function" id="group___mixer_1gac7e1bbe5d5b69a6ee67d5bced6325a67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_set_compare</definition>
        <argsstring>(snd_mixer_t *mixer, snd_mixer_compare_t msort)</argsstring>
        <name>snd_mixer_set_compare</name>
        <param>
          <type><ref refid="group___mixer_1ga34161447bc01a64f578456ed13d57e33" kindref="member">snd_mixer_t</ref> *</type>
          <declname>mixer</declname>
        </param>
        <param>
          <type><ref refid="group___mixer_1gaf4cc71d58faf35cb8f62006e467b21e8" kindref="member">snd_mixer_compare_t</ref></type>
          <declname>msort</declname>
          <defname>compare</defname>
        </param>
        <briefdescription>
<para>Change mixer compare function and reorder elements. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mixer</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>compare</parametername>
</parameternamelist>
<parameterdescription>
<para>Element compare function </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="112" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/mixer.c" bodystart="666" bodyend="679"/>
      </memberdef>
      <memberdef kind="function" id="group___mixer_1ga691a593ea0a32f9535fff83b00a0a574" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_mixer_set_callback</definition>
        <argsstring>(snd_mixer_t *obj, snd_mixer_callback_t val)</argsstring>
        <name>snd_mixer_set_callback</name>
        <param>
          <type><ref refid="group___mixer_1ga34161447bc01a64f578456ed13d57e33" kindref="member">snd_mixer_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="group___mixer_1ga8dc213e4c7156e1a0dad485700dcdce8" kindref="member">snd_mixer_callback_t</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set callback function for a mixer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>mixer handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>callback function </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="113" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/mixer.c" bodystart="861" bodyend="865"/>
      </memberdef>
      <memberdef kind="function" id="group___mixer_1ga9cfc303fa34eb234efeb52151838f88b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* snd_mixer_get_callback_private</definition>
        <argsstring>(const snd_mixer_t *obj)</argsstring>
        <name>snd_mixer_get_callback_private</name>
        <param>
          <type>const <ref refid="group___mixer_1ga34161447bc01a64f578456ed13d57e33" kindref="member">snd_mixer_t</ref> *</type>
          <declname>obj</declname>
          <defname>mixer</defname>
        </param>
        <briefdescription>
<para>Get callback private value for a mixer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mixer</parametername>
</parameternamelist>
<parameterdescription>
<para>mixer handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>callback private value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="114" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/mixer.c" bodystart="883" bodyend="887"/>
      </memberdef>
      <memberdef kind="function" id="group___mixer_1gab91fc99ac65c866e660d4d8be0cb3e17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_mixer_set_callback_private</definition>
        <argsstring>(snd_mixer_t *obj, void *val)</argsstring>
        <name>snd_mixer_set_callback_private</name>
        <param>
          <type><ref refid="group___mixer_1ga34161447bc01a64f578456ed13d57e33" kindref="member">snd_mixer_t</ref> *</type>
          <declname>obj</declname>
          <defname>mixer</defname>
        </param>
        <param>
          <type>void *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set callback private value for a mixer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mixer</parametername>
</parameternamelist>
<parameterdescription>
<para>mixer handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>callback private value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="115" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/mixer.c" bodystart="872" bodyend="876"/>
      </memberdef>
      <memberdef kind="function" id="group___mixer_1ga3447c190c69cfce4c52df4ad3300e319" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int snd_mixer_get_count</definition>
        <argsstring>(const snd_mixer_t *obj)</argsstring>
        <name>snd_mixer_get_count</name>
        <param>
          <type>const <ref refid="group___mixer_1ga34161447bc01a64f578456ed13d57e33" kindref="member">snd_mixer_t</ref> *</type>
          <declname>obj</declname>
          <defname>mixer</defname>
        </param>
        <briefdescription>
<para>Get elements count for a mixer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mixer</parametername>
</parameternamelist>
<parameterdescription>
<para>mixer handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>elements count </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="116" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/mixer.c" bodystart="894" bodyend="898"/>
      </memberdef>
      <memberdef kind="function" id="group___mixer_1ga6a7bf3805fbbfc3f6f8243e91fbce5f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_class_unregister</definition>
        <argsstring>(snd_mixer_class_t *clss)</argsstring>
        <name>snd_mixer_class_unregister</name>
        <param>
          <type><ref refid="group___mixer_1ga51c7b205d5afc62342d9dec3ce54d11f" kindref="member">snd_mixer_class_t</ref> *</type>
          <declname>clss</declname>
          <defname>class</defname>
        </param>
        <briefdescription>
<para>Unregister mixer element class and remove all its elements. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>class</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer element class </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code</para></simplesect>
Note that the class structure is also deallocated! </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="117" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/mixer.c" bodystart="546" bodyend="561"/>
      </memberdef>
      <memberdef kind="function" id="group___mixer_1ga68254228ef108122b8178087ea0fcc16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
        <definition>snd_mixer_elem_t* snd_mixer_elem_next</definition>
        <argsstring>(snd_mixer_elem_t *elem)</argsstring>
        <name>snd_mixer_elem_next</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
<para>get next mixer element </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>mixer element </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to next element </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="119" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/mixer.c" bodystart="814" bodyend="820"/>
      </memberdef>
      <memberdef kind="function" id="group___mixer_1gaaf9a9dfe1d52f40df2be517621f9474a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
        <definition>snd_mixer_elem_t* snd_mixer_elem_prev</definition>
        <argsstring>(snd_mixer_elem_t *elem)</argsstring>
        <name>snd_mixer_elem_prev</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
<para>get previous mixer element </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>mixer element </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to previous element </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="120" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/mixer.c" bodystart="827" bodyend="833"/>
      </memberdef>
      <memberdef kind="function" id="group___mixer_1ga01e1fd766a313ce513f561bd03c98317" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_mixer_elem_set_callback</definition>
        <argsstring>(snd_mixer_elem_t *obj, snd_mixer_elem_callback_t val)</argsstring>
        <name>snd_mixer_elem_set_callback</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>obj</declname>
          <defname>mixer</defname>
        </param>
        <param>
          <type><ref refid="group___mixer_1ga667c25f9cbf052f9eaa867a5af271007" kindref="member">snd_mixer_elem_callback_t</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set callback function for a mixer element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mixer</parametername>
</parameternamelist>
<parameterdescription>
<para>mixer element </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>callback function </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="121" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/mixer.c" bodystart="905" bodyend="909"/>
      </memberdef>
      <memberdef kind="function" id="group___mixer_1ga78c51ad2e60617137e47ad1d58b45916" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* snd_mixer_elem_get_callback_private</definition>
        <argsstring>(const snd_mixer_elem_t *obj)</argsstring>
        <name>snd_mixer_elem_get_callback_private</name>
        <param>
          <type>const <ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>obj</declname>
          <defname>mixer</defname>
        </param>
        <briefdescription>
<para>Get callback private value for a mixer element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mixer</parametername>
</parameternamelist>
<parameterdescription>
<para>mixer element </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>callback private value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="122" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/mixer.c" bodystart="927" bodyend="931"/>
      </memberdef>
      <memberdef kind="function" id="group___mixer_1ga4fb4ea11326c1cb1fdbf5dac0444507e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_mixer_elem_set_callback_private</definition>
        <argsstring>(snd_mixer_elem_t *obj, void *val)</argsstring>
        <name>snd_mixer_elem_set_callback_private</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>obj</declname>
          <defname>mixer</defname>
        </param>
        <param>
          <type>void *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set callback private value for a mixer element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mixer</parametername>
</parameternamelist>
<parameterdescription>
<para>mixer element </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>callback private value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="123" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/mixer.c" bodystart="916" bodyend="920"/>
      </memberdef>
      <memberdef kind="function" id="group___mixer_1ga1083ba441bb93da13f79bc0cda226ea3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___mixer_1ga18a15493e66cc90ab851e49161d28b4c" kindref="member">snd_mixer_elem_type_t</ref></type>
        <definition>snd_mixer_elem_type_t snd_mixer_elem_get_type</definition>
        <argsstring>(const snd_mixer_elem_t *obj)</argsstring>
        <name>snd_mixer_elem_get_type</name>
        <param>
          <type>const <ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>obj</declname>
          <defname>mixer</defname>
        </param>
        <briefdescription>
<para>Get type for a mixer element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mixer</parametername>
</parameternamelist>
<parameterdescription>
<para>mixer element </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>mixer element type </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="124" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/mixer.c" bodystart="938" bodyend="942"/>
      </memberdef>
      <memberdef kind="function" id="group___mixer_1ga595cbd9394f85f9af4a6b30e748e3930" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_class_register</definition>
        <argsstring>(snd_mixer_class_t *class_, snd_mixer_t *mixer)</argsstring>
        <name>snd_mixer_class_register</name>
        <param>
          <type><ref refid="group___mixer_1ga51c7b205d5afc62342d9dec3ce54d11f" kindref="member">snd_mixer_class_t</ref> *</type>
          <declname>class_</declname>
          <defname>class</defname>
        </param>
        <param>
          <type><ref refid="group___mixer_1ga34161447bc01a64f578456ed13d57e33" kindref="member">snd_mixer_t</ref> *</type>
          <declname>mixer</declname>
        </param>
        <briefdescription>
<para>Register mixer element class. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>class</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer element class </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mixer</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code</para></simplesect>
For use by mixer element class specific code. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="126" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/mixer.c" bodystart="516" bodyend="537"/>
      </memberdef>
      <memberdef kind="function" id="group___mixer_1ga226cf962e72b6132fd61cbd434b28941" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_elem_new</definition>
        <argsstring>(snd_mixer_elem_t **elem, snd_mixer_elem_type_t type, int compare_weight, void *private_data, void(*private_free)(snd_mixer_elem_t *elem))</argsstring>
        <name>snd_mixer_elem_new</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> **</type>
          <declname>elem</declname>
        </param>
        <param>
          <type><ref refid="group___mixer_1ga18a15493e66cc90ab851e49161d28b4c" kindref="member">snd_mixer_elem_type_t</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>compare_weight</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>private_data</declname>
        </param>
        <param>
          <type>void(*)(<ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *elem)</type>
          <declname>private_free</declname>
        </param>
        <briefdescription>
<para>Allocate a new mixer element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned mixer element </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer element type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>compare_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer element compare weight </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>private_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Private data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>private_free</parametername>
</parameternamelist>
<parameterdescription>
<para>Private data free callback </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code</para></simplesect>
For use by mixer element class specific code. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="127" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/mixer.c" bodystart="373" bodyend="389"/>
      </memberdef>
      <memberdef kind="function" id="group___mixer_1ga3b0e73914256f2125d2b7bb48d602457" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_elem_add</definition>
        <argsstring>(snd_mixer_elem_t *elem, snd_mixer_class_t *class_)</argsstring>
        <name>snd_mixer_elem_add</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <param>
          <type><ref refid="group___mixer_1ga51c7b205d5afc62342d9dec3ce54d11f" kindref="member">snd_mixer_class_t</ref> *</type>
          <declname>class_</declname>
          <defname>class</defname>
        </param>
        <briefdescription>
<para>Add an element for a registered mixer element class. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer element </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>class</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer element class </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code</para></simplesect>
For use by mixer element class specific code. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="132" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/mixer.c" bodystart="399" bodyend="434"/>
      </memberdef>
      <memberdef kind="function" id="group___mixer_1gacad36ead935e96f75fe44cf8dd4afa2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_elem_remove</definition>
        <argsstring>(snd_mixer_elem_t *elem)</argsstring>
        <name>snd_mixer_elem_remove</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
<para>Remove a mixer element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer element </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code</para></simplesect>
For use by mixer element class specific code. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="133" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/mixer.c" bodystart="443" bodyend="468"/>
      </memberdef>
      <memberdef kind="function" id="group___mixer_1ga40d8bf56621085d5ed5a7e92ad067e03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_mixer_elem_free</definition>
        <argsstring>(snd_mixer_elem_t *elem)</argsstring>
        <name>snd_mixer_elem_free</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
<para>Free a mixer element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer element </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code</para></simplesect>
For use by mixer element class specific code. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="134" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/mixer.c" bodystart="477" bodyend="482"/>
      </memberdef>
      <memberdef kind="function" id="group___mixer_1gae4a32f9d571201a2bf33a65340dc9afd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_elem_info</definition>
        <argsstring>(snd_mixer_elem_t *elem)</argsstring>
        <name>snd_mixer_elem_info</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
<para>Mixer element informations are changed. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer element </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code</para></simplesect>
For use by mixer element class specific code. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="135" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/mixer.c" bodystart="491" bodyend="494"/>
      </memberdef>
      <memberdef kind="function" id="group___mixer_1ga0d23278769e37532f810cecf2ffffacb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_elem_value</definition>
        <argsstring>(snd_mixer_elem_t *elem)</argsstring>
        <name>snd_mixer_elem_value</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
<para>Mixer element values is changed. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer element </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code</para></simplesect>
For use by mixer element class specific code. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="136" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/mixer.c" bodystart="503" bodyend="506"/>
      </memberdef>
      <memberdef kind="function" id="group___mixer_1gabe7f0255c9a981a6c73a8edf359781cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_elem_attach</definition>
        <argsstring>(snd_mixer_elem_t *melem, snd_hctl_elem_t *helem)</argsstring>
        <name>snd_mixer_elem_attach</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>melem</declname>
        </param>
        <param>
          <type><ref refid="group___h_control_1gaddfb152863e87857d463c7008d72ad74" kindref="member">snd_hctl_elem_t</ref> *</type>
          <declname>helem</declname>
        </param>
        <briefdescription>
<para>Attach an HCTL element to a mixer element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>melem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer element </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>helem</parametername>
</parameternamelist>
<parameterdescription>
<para>HCTL element </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code</para></simplesect>
For use by mixer element class specific code. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="137" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/mixer.c" bodystart="91" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="group___mixer_1ga7413e8f80e2e556c75c6b9fc7d0598f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_elem_detach</definition>
        <argsstring>(snd_mixer_elem_t *melem, snd_hctl_elem_t *helem)</argsstring>
        <name>snd_mixer_elem_detach</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>melem</declname>
        </param>
        <param>
          <type><ref refid="group___h_control_1gaddfb152863e87857d463c7008d72ad74" kindref="member">snd_hctl_elem_t</ref> *</type>
          <declname>helem</declname>
        </param>
        <briefdescription>
<para>Detach an HCTL element from a mixer element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>melem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer element </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>helem</parametername>
</parameternamelist>
<parameterdescription>
<para>HCTL element </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code</para></simplesect>
For use by mixer element class specific code. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="138" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/mixer.c" bodystart="110" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="group___mixer_1gae0541b86ecfc094a172b4cd29bb70fd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_elem_empty</definition>
        <argsstring>(snd_mixer_elem_t *melem)</argsstring>
        <name>snd_mixer_elem_empty</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>melem</declname>
        </param>
        <briefdescription>
<para>Return true if a mixer element does not contain any HCTL elements. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>melem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer element </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if not empty, 1 if empty</para></simplesect>
For use by mixer element class specific code. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="139" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/mixer.c" bodystart="129" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="group___mixer_1ga4cfddf235c06ae83765ecfd45c5a95d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* snd_mixer_elem_get_private</definition>
        <argsstring>(const snd_mixer_elem_t *melem)</argsstring>
        <name>snd_mixer_elem_get_private</name>
        <param>
          <type>const <ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>melem</declname>
          <defname>elem</defname>
        </param>
        <briefdescription>
<para>Get private data associated to give mixer element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer element </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>private data</para></simplesect>
For use by mixer element class specific code. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="140" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/mixer.c" bodystart="357" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="group___mixer_1gaa61b83017a92b67ea27a18777dcd141d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t snd_mixer_class_sizeof</definition>
        <argsstring>(void)</argsstring>
        <name>snd_mixer_class_sizeof</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>get size of <ref refid="group___mixer_1ga51c7b205d5afc62342d9dec3ce54d11f" kindref="member">snd_mixer_class_t</ref> </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>size in bytes </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="142" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/mixer.c" bodystart="949" bodyend="952"/>
      </memberdef>
      <memberdef kind="function" id="group___mixer_1gadc36fd49fdeccc37c41fc700d29adf39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_class_malloc</definition>
        <argsstring>(snd_mixer_class_t **ptr)</argsstring>
        <name>snd_mixer_class_malloc</name>
        <param>
          <type><ref refid="group___mixer_1ga51c7b205d5afc62342d9dec3ce54d11f" kindref="member">snd_mixer_class_t</ref> **</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>allocate an invalid <ref refid="group___mixer_1ga51c7b205d5afc62342d9dec3ce54d11f" kindref="member">snd_mixer_class_t</ref> using standard malloc </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>returned pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="148" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/mixer.c" bodystart="959" bodyend="966"/>
      </memberdef>
      <memberdef kind="function" id="group___mixer_1gafef7028555b5c50b9bb072ba6d441ddb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_mixer_class_free</definition>
        <argsstring>(snd_mixer_class_t *obj)</argsstring>
        <name>snd_mixer_class_free</name>
        <param>
          <type><ref refid="group___mixer_1ga51c7b205d5afc62342d9dec3ce54d11f" kindref="member">snd_mixer_class_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>frees a previously allocated <ref refid="group___mixer_1ga51c7b205d5afc62342d9dec3ce54d11f" kindref="member">snd_mixer_class_t</ref> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to object to free </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="149" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/mixer.c" bodystart="972" bodyend="977"/>
      </memberdef>
      <memberdef kind="function" id="group___mixer_1gabaaa35c5538fec113fffdaff4cbed2fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_mixer_class_copy</definition>
        <argsstring>(snd_mixer_class_t *dst, const snd_mixer_class_t *src)</argsstring>
        <name>snd_mixer_class_copy</name>
        <param>
          <type><ref refid="group___mixer_1ga51c7b205d5afc62342d9dec3ce54d11f" kindref="member">snd_mixer_class_t</ref> *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="group___mixer_1ga51c7b205d5afc62342d9dec3ce54d11f" kindref="member">snd_mixer_class_t</ref> *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>copy one <ref refid="group___mixer_1ga51c7b205d5afc62342d9dec3ce54d11f" kindref="member">snd_mixer_class_t</ref> to another </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to destination </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to source </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="150" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/mixer.c" bodystart="984" bodyend="988"/>
      </memberdef>
      <memberdef kind="function" id="group___mixer_1ga07e5edf36e361b3c1293ed14d2ef5b76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___mixer_1ga34161447bc01a64f578456ed13d57e33" kindref="member">snd_mixer_t</ref> *</type>
        <definition>snd_mixer_t* snd_mixer_class_get_mixer</definition>
        <argsstring>(const snd_mixer_class_t *class_)</argsstring>
        <name>snd_mixer_class_get_mixer</name>
        <param>
          <type>const <ref refid="group___mixer_1ga51c7b205d5afc62342d9dec3ce54d11f" kindref="member">snd_mixer_class_t</ref> *</type>
          <declname>class_</declname>
          <defname>obj</defname>
        </param>
        <briefdescription>
<para>Get a mixer associated to given mixer class. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple class identifier </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>mixer pointer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="151" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/mixer.c" bodystart="995" bodyend="999"/>
      </memberdef>
      <memberdef kind="function" id="group___mixer_1ga5744823b495ae331e7dd60f2abdf3589" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___mixer_1gaa121b4c6c77665a9482b7a8d2128dd8c" kindref="member">snd_mixer_event_t</ref></type>
        <definition>snd_mixer_event_t snd_mixer_class_get_event</definition>
        <argsstring>(const snd_mixer_class_t *class_)</argsstring>
        <name>snd_mixer_class_get_event</name>
        <param>
          <type>const <ref refid="group___mixer_1ga51c7b205d5afc62342d9dec3ce54d11f" kindref="member">snd_mixer_class_t</ref> *</type>
          <declname>class_</declname>
          <defname>obj</defname>
        </param>
        <briefdescription>
<para>Get mixer event callback associated to given mixer class. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple class identifier </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>event callback pointer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="152" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/mixer.c" bodystart="1006" bodyend="1010"/>
      </memberdef>
      <memberdef kind="function" id="group___mixer_1ga95b50447f32262756143cd7d9e76997c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* snd_mixer_class_get_private</definition>
        <argsstring>(const snd_mixer_class_t *class_)</argsstring>
        <name>snd_mixer_class_get_private</name>
        <param>
          <type>const <ref refid="group___mixer_1ga51c7b205d5afc62342d9dec3ce54d11f" kindref="member">snd_mixer_class_t</ref> *</type>
          <declname>class_</declname>
          <defname>obj</defname>
        </param>
        <briefdescription>
<para>Get mixer private data associated to given mixer class. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple class identifier </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>event callback pointer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="153" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/mixer.c" bodystart="1017" bodyend="1021"/>
      </memberdef>
      <memberdef kind="function" id="group___mixer_1gad7182d1d18653709bf26fc53a8b1a94f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___mixer_1gaf4cc71d58faf35cb8f62006e467b21e8" kindref="member">snd_mixer_compare_t</ref></type>
        <definition>snd_mixer_compare_t snd_mixer_class_get_compare</definition>
        <argsstring>(const snd_mixer_class_t *class_)</argsstring>
        <name>snd_mixer_class_get_compare</name>
        <param>
          <type>const <ref refid="group___mixer_1ga51c7b205d5afc62342d9dec3ce54d11f" kindref="member">snd_mixer_class_t</ref> *</type>
          <declname>class_</declname>
          <defname>obj</defname>
        </param>
        <briefdescription>
<para>Get mixer compare callback associated to given mixer class. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple class identifier </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>event callback pointer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="154" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/mixer.c" bodystart="1029" bodyend="1033"/>
      </memberdef>
      <memberdef kind="function" id="group___mixer_1gad0162769035880347ea9af0dbc518e79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_class_set_event</definition>
        <argsstring>(snd_mixer_class_t *class_, snd_mixer_event_t event)</argsstring>
        <name>snd_mixer_class_set_event</name>
        <param>
          <type><ref refid="group___mixer_1ga51c7b205d5afc62342d9dec3ce54d11f" kindref="member">snd_mixer_class_t</ref> *</type>
          <declname>class_</declname>
          <defname>obj</defname>
        </param>
        <param>
          <type><ref refid="group___mixer_1gaa121b4c6c77665a9482b7a8d2128dd8c" kindref="member">snd_mixer_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Set mixer event callback to given mixer class. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple class identifier </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event callback </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>zero if success, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="155" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/mixer.c" bodystart="1041" bodyend="1046"/>
      </memberdef>
      <memberdef kind="function" id="group___mixer_1gaf3b845bb0637fc59cacfe59ef29398d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_class_set_private</definition>
        <argsstring>(snd_mixer_class_t *class_, void *private_data)</argsstring>
        <name>snd_mixer_class_set_private</name>
        <param>
          <type><ref refid="group___mixer_1ga51c7b205d5afc62342d9dec3ce54d11f" kindref="member">snd_mixer_class_t</ref> *</type>
          <declname>class_</declname>
          <defname>obj</defname>
        </param>
        <param>
          <type>void *</type>
          <declname>private_data</declname>
        </param>
        <briefdescription>
<para>Set mixer private data to given mixer class. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple class identifier </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>private_data</parametername>
</parameternamelist>
<parameterdescription>
<para>class private data </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>zero if success, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="156" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/mixer.c" bodystart="1054" bodyend="1059"/>
      </memberdef>
      <memberdef kind="function" id="group___mixer_1gafe066ab71d568f7a616a587da7e3c1a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_class_set_private_free</definition>
        <argsstring>(snd_mixer_class_t *class_, void(*private_free)(snd_mixer_class_t *))</argsstring>
        <name>snd_mixer_class_set_private_free</name>
        <param>
          <type><ref refid="group___mixer_1ga51c7b205d5afc62342d9dec3ce54d11f" kindref="member">snd_mixer_class_t</ref> *</type>
          <declname>class_</declname>
          <defname>obj</defname>
        </param>
        <param>
          <type>void(*)(<ref refid="group___mixer_1ga51c7b205d5afc62342d9dec3ce54d11f" kindref="member">snd_mixer_class_t</ref> *)</type>
          <declname>private_free</declname>
        </param>
        <briefdescription>
<para>Set mixer private data free callback to given mixer class. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple class identifier </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>private_free</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer class private data free callback </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>zero if success, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="157" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/mixer.c" bodystart="1067" bodyend="1072"/>
      </memberdef>
      <memberdef kind="function" id="group___mixer_1gab389fb10998a950207001e3f8abead26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_class_set_compare</definition>
        <argsstring>(snd_mixer_class_t *class_, snd_mixer_compare_t compare)</argsstring>
        <name>snd_mixer_class_set_compare</name>
        <param>
          <type><ref refid="group___mixer_1ga51c7b205d5afc62342d9dec3ce54d11f" kindref="member">snd_mixer_class_t</ref> *</type>
          <declname>class_</declname>
          <defname>obj</defname>
        </param>
        <param>
          <type><ref refid="group___mixer_1gaf4cc71d58faf35cb8f62006e467b21e8" kindref="member">snd_mixer_compare_t</ref></type>
          <declname>compare</declname>
        </param>
        <briefdescription>
<para>Set mixer compare callback to given mixer class. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple class identifier </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>compare</parametername>
</parameternamelist>
<parameterdescription>
<para>the compare callback to be used </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>zero if success, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="158" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/mixer.c" bodystart="1080" bodyend="1085"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1ga37ae8c6874d975efa83a9074a28113b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* snd_mixer_selem_channel_name</definition>
        <argsstring>(snd_mixer_selem_channel_id_t channel)</argsstring>
        <name>snd_mixer_selem_channel_name</name>
        <param>
          <type><ref refid="group___simple_mixer_1gaf01a92f33cc46d0b3878d65afcc41b97" kindref="member">snd_mixer_selem_channel_id_t</ref></type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Return name of mixer simple element channel. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>mixer simple element channel identifier </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>channel name </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="221" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="219" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1gadd686db0b7d2bba9a88112b732b147d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_selem_register</definition>
        <argsstring>(snd_mixer_t *mixer, struct snd_mixer_selem_regopt *options, snd_mixer_class_t **classp)</argsstring>
        <name>snd_mixer_selem_register</name>
        <param>
          <type><ref refid="group___mixer_1ga34161447bc01a64f578456ed13d57e33" kindref="member">snd_mixer_t</ref> *</type>
          <declname>mixer</declname>
        </param>
        <param>
          <type>struct <ref refid="structsnd__mixer__selem__regopt" kindref="compound">snd_mixer_selem_regopt</ref> *</type>
          <declname>options</declname>
        </param>
        <param>
          <type><ref refid="group___mixer_1ga51c7b205d5afc62342d9dec3ce54d11f" kindref="member">snd_mixer_class_t</ref> **</type>
          <declname>classp</declname>
        </param>
        <briefdescription>
<para>Register mixer simple element class. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mixer</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>Options container </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>classp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to returned mixer simple element class handle (or NULL) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="223" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="50" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1ga02aba43d5ae75392b6344c7f8f92fe72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_mixer_selem_get_id</definition>
        <argsstring>(snd_mixer_elem_t *element, snd_mixer_selem_id_t *id)</argsstring>
        <name>snd_mixer_selem_get_id</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>element</declname>
          <defname>elem</defname>
        </param>
        <param>
          <type><ref refid="group___simple_mixer_1gac0bfc2b9efcbc308df2daad92983e2ee" kindref="member">snd_mixer_selem_id_t</ref> *</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Get mixer simple element identifier. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>returned mixer simple element identifier </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="226" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="156" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1ga51329fb3fea12d50209fcf8ebf542492" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* snd_mixer_selem_get_name</definition>
        <argsstring>(snd_mixer_elem_t *elem)</argsstring>
        <name>snd_mixer_selem_get_name</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
<para>Get name part of mixer simple element identifier. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>name part of simple element identifier </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="228" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="171" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1ga11a14cd0d589033d49647d27e12b9cc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int snd_mixer_selem_get_index</definition>
        <argsstring>(snd_mixer_elem_t *elem)</argsstring>
        <name>snd_mixer_selem_get_index</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
<para>Get index part of mixer simple element identifier. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>index part of simple element identifier </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="229" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="184" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1gad9b0c9a6d7956f95132aa42857d962cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
        <definition>snd_mixer_elem_t* snd_mixer_find_selem</definition>
        <argsstring>(snd_mixer_t *mixer, const snd_mixer_selem_id_t *id)</argsstring>
        <name>snd_mixer_find_selem</name>
        <param>
          <type><ref refid="group___mixer_1ga34161447bc01a64f578456ed13d57e33" kindref="member">snd_mixer_t</ref> *</type>
          <declname>mixer</declname>
        </param>
        <param>
          <type>const <ref refid="group___simple_mixer_1gac0bfc2b9efcbc308df2daad92983e2ee" kindref="member">snd_mixer_selem_id_t</ref> *</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Find a mixer simple element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mixer</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element identifier </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>mixer simple element handle or NULL if not found </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="230" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="133" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1ga41eb6c6d7a237dc617115ba4ba91ffbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_selem_is_active</definition>
        <argsstring>(snd_mixer_elem_t *elem)</argsstring>
        <name>snd_mixer_selem_is_active</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
<para>Get info about the active state of a mixer simple element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if not active, 1 if active </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="233" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="245" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1gacdc9e474bb45ca6759a2f9ea878bc1a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_selem_is_playback_mono</definition>
        <argsstring>(snd_mixer_elem_t *elem)</argsstring>
        <name>snd_mixer_selem_is_playback_mono</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
<para>Get info about channels of playback stream of a mixer simple element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if not mono, 1 if mono </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="234" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="256" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1ga621b34fc2c4f47a28fb9b34a3dd820e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_selem_has_playback_channel</definition>
        <argsstring>(snd_mixer_elem_t *obj, snd_mixer_selem_channel_id_t channel)</argsstring>
        <name>snd_mixer_selem_has_playback_channel</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>obj</declname>
          <defname>elem</defname>
        </param>
        <param>
          <type><ref refid="group___simple_mixer_1gaf01a92f33cc46d0b3878d65afcc41b97" kindref="member">snd_mixer_selem_channel_id_t</ref></type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Get info about channels of playback stream of a mixer simple element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element channel identifier </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if channel is not present, 1 if present </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="235" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="268" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1gadc4c2179abd18d7c587cc199bb8e9273" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_selem_is_capture_mono</definition>
        <argsstring>(snd_mixer_elem_t *elem)</argsstring>
        <name>snd_mixer_selem_is_capture_mono</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
<para>Get info about channels of capture stream of a mixer simple element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if not mono, 1 if mono </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="236" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="557" bodyend="562"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1gac05de257374bae60c03ba033344f811e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_selem_has_capture_channel</definition>
        <argsstring>(snd_mixer_elem_t *obj, snd_mixer_selem_channel_id_t channel)</argsstring>
        <name>snd_mixer_selem_has_capture_channel</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>obj</declname>
          <defname>elem</defname>
        </param>
        <param>
          <type><ref refid="group___simple_mixer_1gaf01a92f33cc46d0b3878d65afcc41b97" kindref="member">snd_mixer_selem_channel_id_t</ref></type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Get info about channels of capture stream of a mixer simple element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element channel identifier </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if channel is not present, 1 if present </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="237" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="570" bodyend="575"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1gae75b0133e7beba016589259b30cf8e7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_selem_get_capture_group</definition>
        <argsstring>(snd_mixer_elem_t *elem)</argsstring>
        <name>snd_mixer_selem_get_capture_group</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
<para>Return info about capture switch control of a mixer simple element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>group for switch exclusivity (see <ref refid="group___simple_mixer_1ga1ad2e8afe6f5ad7857b0bdc70048d44d" kindref="member">snd_mixer_selem_has_capture_switch_exclusive</ref>) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="238" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="680" bodyend="688"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1ga08c4099ef62508d5ae7f13bd6affd5a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_selem_has_common_volume</definition>
        <argsstring>(snd_mixer_elem_t *elem)</argsstring>
        <name>snd_mixer_selem_has_common_volume</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
<para>Return true if mixer simple element has only one volume control for both playback and capture. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 separated control, 1 common control </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="239" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="197" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1ga17468934f36929ae2f7af4850f40f851" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_selem_has_playback_volume</definition>
        <argsstring>(snd_mixer_elem_t *elem)</argsstring>
        <name>snd_mixer_selem_has_playback_volume</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
<para>Return info about playback volume control of a mixer simple element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if no control is present, 1 if it&apos;s present </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="240" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="322" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1gaf39321d4b7bb2efac3a3af357e42c6eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_selem_has_playback_volume_joined</definition>
        <argsstring>(snd_mixer_elem_t *elem)</argsstring>
        <name>snd_mixer_selem_has_playback_volume_joined</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
<para>Return info about playback volume control of a mixer simple element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if control is separated per channel, 1 if control acts on all channels together </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="241" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="333" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1ga095d73eab22ef19cabed8732ffc44a7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_selem_has_capture_volume</definition>
        <argsstring>(snd_mixer_elem_t *elem)</argsstring>
        <name>snd_mixer_selem_has_capture_volume</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
<para>Return info about capture volume control of a mixer simple element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if no control is present, 1 if it&apos;s present </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="242" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="625" bodyend="629"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1ga1646edce83681e786da2f1a6befaf113" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_selem_has_capture_volume_joined</definition>
        <argsstring>(snd_mixer_elem_t *elem)</argsstring>
        <name>snd_mixer_selem_has_capture_volume_joined</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
<para>Return info about capture volume control of a mixer simple element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if control is separated per channel, 1 if control acts on all channels together </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="243" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="636" bodyend="640"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1ga468e0188282093c377776683bcea20d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_selem_has_common_switch</definition>
        <argsstring>(snd_mixer_elem_t *elem)</argsstring>
        <name>snd_mixer_selem_has_common_switch</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
<para>Return true if mixer simple element has only one switch control for both playback and capture. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 separated control, 1 common control </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="244" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="208" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1ga4efd34d5ccb384e8db4291bd3aad0760" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_selem_has_playback_switch</definition>
        <argsstring>(snd_mixer_elem_t *elem)</argsstring>
        <name>snd_mixer_selem_has_playback_switch</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
<para>Return info about playback switch control existence of a mixer simple element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if no control is present, 1 if it&apos;s present </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="245" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="344" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1ga162fa35b3cc76e67c14482a2f6b734c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_selem_has_playback_switch_joined</definition>
        <argsstring>(snd_mixer_elem_t *elem)</argsstring>
        <name>snd_mixer_selem_has_playback_switch_joined</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
<para>Return info about playback switch control of a mixer simple element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if control is separated per channel, 1 if control acts on all channels together </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="246" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="355" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1ga6761e23f215d3d048c729a22cfdd952a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_selem_has_capture_switch</definition>
        <argsstring>(snd_mixer_elem_t *elem)</argsstring>
        <name>snd_mixer_selem_has_capture_switch</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
<para>Return info about capture switch control existence of a mixer simple element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if no control is present, 1 if it&apos;s present </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="247" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="647" bodyend="651"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1ga14a6a278ef91593d3c6fc53007627d25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_selem_has_capture_switch_joined</definition>
        <argsstring>(snd_mixer_elem_t *elem)</argsstring>
        <name>snd_mixer_selem_has_capture_switch_joined</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
<para>Return info about capture switch control of a mixer simple element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if control is separated per channel, 1 if control acts on all channels together </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="248" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="658" bodyend="662"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1ga1ad2e8afe6f5ad7857b0bdc70048d44d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_selem_has_capture_switch_exclusive</definition>
        <argsstring>(snd_mixer_elem_t *elem)</argsstring>
        <name>snd_mixer_selem_has_capture_switch_exclusive</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
<para>Return info about capture switch control of a mixer simple element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if control is separated per element, 1 if control acts on other elements too (i.e. only one active at a time inside a group) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="249" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="669" bodyend="673"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1gac8e2c7d0555f58ec790443da87ecbae3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_selem_ask_playback_vol_dB</definition>
        <argsstring>(snd_mixer_elem_t *elem, long value, long *dBvalue)</argsstring>
        <name>snd_mixer_selem_ask_playback_vol_dB</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <param>
          <type>long</type>
          <declname>value</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>dBvalue</declname>
        </param>
        <briefdescription>
<para>Return corresponding dB value to an integer playback volume for a mixer simple element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>value to be converted to dB range </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dBvalue</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to returned dB value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="251" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="368" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1ga87dcbf4b28ba67c8a07cdd79231b9942" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_selem_ask_capture_vol_dB</definition>
        <argsstring>(snd_mixer_elem_t *elem, long value, long *dBvalue)</argsstring>
        <name>snd_mixer_selem_ask_capture_vol_dB</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <param>
          <type>long</type>
          <declname>value</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>dBvalue</declname>
        </param>
        <briefdescription>
<para>Return corresponding dB value to an integer capture volume for a mixer simple element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>value to be converted to dB range </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dBvalue</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to returned dB value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="252" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="697" bodyend="702"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1ga3bf17ce7cb933fa69973cb69ca079f13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_selem_ask_playback_dB_vol</definition>
        <argsstring>(snd_mixer_elem_t *elem, long dBvalue, int dir, long *value)</argsstring>
        <name>snd_mixer_selem_ask_playback_dB_vol</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <param>
          <type>long</type>
          <declname>dBvalue</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Return corresponding integer playback volume for given dB value for a mixer simple element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>value to be converted to dB range </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>rounding mode - rounds up if dir &gt; 0, otherwise rounds down </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dBvalue</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to returned dB value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="253" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="383" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1ga40141aa00e0839bdfa8398b5aac1a0a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_selem_ask_capture_dB_vol</definition>
        <argsstring>(snd_mixer_elem_t *elem, long dBvalue, int dir, long *value)</argsstring>
        <name>snd_mixer_selem_ask_capture_dB_vol</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <param>
          <type>long</type>
          <declname>dBvalue</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Return corresponding integer capture volume for given dB value for a mixer simple element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dBvalue</parametername>
</parameternamelist>
<parameterdescription>
<para>dB value to be converted to integer range </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to returned integer value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>rounding mode - rounds up if dir &gt; 0, otherwise rounds down </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="254" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="712" bodyend="717"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1ga12f6f4124bf45db95f965298c2f318bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_selem_get_playback_volume</definition>
        <argsstring>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, long *value)</argsstring>
        <name>snd_mixer_selem_get_playback_volume</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <param>
          <type><ref refid="group___simple_mixer_1gaf01a92f33cc46d0b3878d65afcc41b97" kindref="member">snd_mixer_selem_channel_id_t</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Return value of playback volume control of a mixer simple element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>mixer simple element channel identifier </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to returned value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="255" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="397" bodyend="402"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1ga3b15557f590f136735a4abee96cf28fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_selem_get_capture_volume</definition>
        <argsstring>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, long *value)</argsstring>
        <name>snd_mixer_selem_get_capture_volume</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <param>
          <type><ref refid="group___simple_mixer_1gaf01a92f33cc46d0b3878d65afcc41b97" kindref="member">snd_mixer_selem_channel_id_t</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Return value of capture volume control of a mixer simple element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>mixer simple element channel identifier </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to returned value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="256" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="726" bodyend="731"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1ga6b5799e7971688e1f2e9ccf977c8a887" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_selem_get_playback_dB</definition>
        <argsstring>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, long *value)</argsstring>
        <name>snd_mixer_selem_get_playback_dB</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <param>
          <type><ref refid="group___simple_mixer_1gaf01a92f33cc46d0b3878d65afcc41b97" kindref="member">snd_mixer_selem_channel_id_t</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Return value of playback volume in dB control of a mixer simple element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>mixer simple element channel identifier </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to returned value (dB * 100) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="257" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="411" bodyend="422"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1ga27bf2c4bd591bcf61b3fe20353bac8da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_selem_get_capture_dB</definition>
        <argsstring>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, long *value)</argsstring>
        <name>snd_mixer_selem_get_capture_dB</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <param>
          <type><ref refid="group___simple_mixer_1gaf01a92f33cc46d0b3878d65afcc41b97" kindref="member">snd_mixer_selem_channel_id_t</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Return value of capture volume in dB control of a mixer simple element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>mixer simple element channel identifier </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to returned value (dB * 100) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="258" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="740" bodyend="745"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1ga55a4f32e711efe4ef09cf041d9fc27f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_selem_get_playback_switch</definition>
        <argsstring>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, int *value)</argsstring>
        <name>snd_mixer_selem_get_playback_switch</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <param>
          <type><ref refid="group___simple_mixer_1gaf01a92f33cc46d0b3878d65afcc41b97" kindref="member">snd_mixer_selem_channel_id_t</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Return value of playback switch control of a mixer simple element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>mixer simple element channel identifier </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to returned value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="259" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="431" bodyend="436"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1ga49f4c3b98ef2353cdaa582e5bf3417a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_selem_get_capture_switch</definition>
        <argsstring>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, int *value)</argsstring>
        <name>snd_mixer_selem_get_capture_switch</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <param>
          <type><ref refid="group___simple_mixer_1gaf01a92f33cc46d0b3878d65afcc41b97" kindref="member">snd_mixer_selem_channel_id_t</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Return value of capture switch control of a mixer simple element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>mixer simple element channel identifier </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to returned value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="260" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="754" bodyend="759"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1ga1e4556740beefc8bed40677a316e60ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_selem_set_playback_volume</definition>
        <argsstring>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, long value)</argsstring>
        <name>snd_mixer_selem_set_playback_volume</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <param>
          <type><ref refid="group___simple_mixer_1gaf01a92f33cc46d0b3878d65afcc41b97" kindref="member">snd_mixer_selem_channel_id_t</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type>long</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set value of playback volume control of a mixer simple element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>mixer simple element channel identifier </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>control value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="261" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="445" bodyend="450"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1ga8aa6b212e1e092e5d67ff11070a433ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_selem_set_capture_volume</definition>
        <argsstring>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, long value)</argsstring>
        <name>snd_mixer_selem_set_capture_volume</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <param>
          <type><ref refid="group___simple_mixer_1gaf01a92f33cc46d0b3878d65afcc41b97" kindref="member">snd_mixer_selem_channel_id_t</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type>long</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set value of capture volume control of a mixer simple element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>mixer simple element channel identifier </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>control value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="262" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="768" bodyend="773"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1ga8bfb52575e4bb06deb30799bc39c0768" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_selem_set_playback_dB</definition>
        <argsstring>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, long value, int dir)</argsstring>
        <name>snd_mixer_selem_set_playback_dB</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <param>
          <type><ref refid="group___simple_mixer_1gaf01a92f33cc46d0b3878d65afcc41b97" kindref="member">snd_mixer_selem_channel_id_t</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type>long</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Set value in dB of playback volume control of a mixer simple element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>mixer simple element channel identifier </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>control value in dB * 100 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>rounding mode - rounds up if dir &gt; 0, otherwise rounds down </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="263" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="460" bodyend="465"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1gac1af2ccb94c19e7f616338791707c2eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_selem_set_capture_dB</definition>
        <argsstring>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, long value, int dir)</argsstring>
        <name>snd_mixer_selem_set_capture_dB</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <param>
          <type><ref refid="group___simple_mixer_1gaf01a92f33cc46d0b3878d65afcc41b97" kindref="member">snd_mixer_selem_channel_id_t</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type>long</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Set value in dB of capture volume control of a mixer simple element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>mixer simple element channel identifier </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>control value in dB * 100 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>rounding mode - rounds up if dir &gt; 0, otherwise rounds down </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="264" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="783" bodyend="788"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1ga2567351a2a7a70e6dda81f5ccc38d04b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_selem_set_playback_volume_all</definition>
        <argsstring>(snd_mixer_elem_t *elem, long value)</argsstring>
        <name>snd_mixer_selem_set_playback_volume_all</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <param>
          <type>long</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set value of playback volume control for all channels of a mixer simple element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>control value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="265" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="473" bodyend="488"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1ga0e6e40f799c9a4042444a4e26194d451" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_selem_set_capture_volume_all</definition>
        <argsstring>(snd_mixer_elem_t *elem, long value)</argsstring>
        <name>snd_mixer_selem_set_capture_volume_all</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <param>
          <type>long</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set value of capture volume control for all channels of a mixer simple element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>control value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="266" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="796" bodyend="811"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1ga555df8c54f170ebe7f389eb7a8d04cc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_selem_set_playback_dB_all</definition>
        <argsstring>(snd_mixer_elem_t *elem, long value, int dir)</argsstring>
        <name>snd_mixer_selem_set_playback_dB_all</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <param>
          <type>long</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Set value in dB of playback volume control for all channels of a mixer simple element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>control value in dB * 100 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>rounding mode - rounds up if dir &gt; 0, otherwise rounds down </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="267" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="497" bodyend="512"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1ga395321949ec6444ca4590f0ca3eac6b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_selem_set_capture_dB_all</definition>
        <argsstring>(snd_mixer_elem_t *elem, long value, int dir)</argsstring>
        <name>snd_mixer_selem_set_capture_dB_all</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <param>
          <type>long</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Set value in dB of capture volume control for all channels of a mixer simple element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>control value in dB * 100 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>rounding mode - rounds up if dir &gt; 0, otherwise rounds down </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="268" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="820" bodyend="835"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1ga1a9b7c48b94d8cbeffc6847f3b884dcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_selem_set_playback_switch</definition>
        <argsstring>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, int value)</argsstring>
        <name>snd_mixer_selem_set_playback_switch</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <param>
          <type><ref refid="group___simple_mixer_1gaf01a92f33cc46d0b3878d65afcc41b97" kindref="member">snd_mixer_selem_channel_id_t</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set value of playback switch control of a mixer simple element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>mixer simple element channel identifier </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>control value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="269" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="521" bodyend="526"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1ga3de8f16807b23cdf9399f86a5eb3a353" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_selem_set_capture_switch</definition>
        <argsstring>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, int value)</argsstring>
        <name>snd_mixer_selem_set_capture_switch</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <param>
          <type><ref refid="group___simple_mixer_1gaf01a92f33cc46d0b3878d65afcc41b97" kindref="member">snd_mixer_selem_channel_id_t</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set value of capture switch control of a mixer simple element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>mixer simple element channel identifier </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>control value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="270" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="844" bodyend="849"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1gaa3e28640247b4eef389269b92f5b4a9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_selem_set_playback_switch_all</definition>
        <argsstring>(snd_mixer_elem_t *elem, int value)</argsstring>
        <name>snd_mixer_selem_set_playback_switch_all</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set value of playback switch control for all channels of a mixer simple element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>control value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="271" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="534" bodyend="550"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1gad43024c7d21c38cde7b440cdc6a85c07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_selem_set_capture_switch_all</definition>
        <argsstring>(snd_mixer_elem_t *elem, int value)</argsstring>
        <name>snd_mixer_selem_set_capture_switch_all</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set value of capture switch control for all channels of a mixer simple element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>control value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="272" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="857" bodyend="872"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1ga09557e90c11fbd37aeed30938338698b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_selem_get_playback_volume_range</definition>
        <argsstring>(snd_mixer_elem_t *elem, long *min, long *max)</argsstring>
        <name>snd_mixer_selem_get_playback_volume_range</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>min</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>max</declname>
        </param>
        <briefdescription>
<para>Get range for playback volume of a mixer simple element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to returned minimum </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to returned maximum </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="273" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="280" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1gad874cffabe541956b610858bcb38ba59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_selem_get_playback_dB_range</definition>
        <argsstring>(snd_mixer_elem_t *elem, long *min, long *max)</argsstring>
        <name>snd_mixer_selem_get_playback_dB_range</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>min</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>max</declname>
        </param>
        <briefdescription>
<para>Get range in dB for playback volume of a mixer simple element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to returned minimum (dB * 100) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to returned maximum (dB * 100) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="275" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="294" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1gaf4b095372a07bcdf769d74fa73c803d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_selem_set_playback_volume_range</definition>
        <argsstring>(snd_mixer_elem_t *elem, long min, long max)</argsstring>
        <name>snd_mixer_selem_set_playback_volume_range</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <param>
          <type>long</type>
          <declname>min</declname>
        </param>
        <param>
          <type>long</type>
          <declname>max</declname>
        </param>
        <briefdescription>
<para>Set range for playback volume of a mixer simple element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum volume value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum volume value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="277" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="308" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1ga95e2624e7aaa7624e89121ce3f63b9dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_selem_get_capture_volume_range</definition>
        <argsstring>(snd_mixer_elem_t *elem, long *min, long *max)</argsstring>
        <name>snd_mixer_selem_get_capture_volume_range</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>min</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>max</declname>
        </param>
        <briefdescription>
<para>Get range for capture volume of a mixer simple element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to returned minimum </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to returned maximum </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="279" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="583" bodyend="589"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1ga332241fcda7a9364b4d7830b592ba6a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_selem_get_capture_dB_range</definition>
        <argsstring>(snd_mixer_elem_t *elem, long *min, long *max)</argsstring>
        <name>snd_mixer_selem_get_capture_dB_range</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>min</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>max</declname>
        </param>
        <briefdescription>
<para>Get range in dB for capture volume of a mixer simple element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to returned minimum (dB * 100) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to returned maximum (dB * 100) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="281" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="597" bodyend="603"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1ga608663233daecd6b373aba808f5fc427" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_selem_set_capture_volume_range</definition>
        <argsstring>(snd_mixer_elem_t *elem, long min, long max)</argsstring>
        <name>snd_mixer_selem_set_capture_volume_range</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <param>
          <type>long</type>
          <declname>min</declname>
        </param>
        <param>
          <type>long</type>
          <declname>max</declname>
        </param>
        <briefdescription>
<para>Set range for capture volume of a mixer simple element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum volume value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum volume value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="283" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="611" bodyend="618"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1gab367abc11dae3681978c2f831afd1e37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_selem_is_enumerated</definition>
        <argsstring>(snd_mixer_elem_t *elem)</argsstring>
        <name>snd_mixer_selem_is_enumerated</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
<para>Return true if mixer simple element is an enumerated control. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 normal volume/switch control, 1 enumerated control </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="286" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="879" bodyend="883"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1gaed68ad405d2c2e9447e2fa1d4f5d1107" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_selem_is_enum_playback</definition>
        <argsstring>(snd_mixer_elem_t *elem)</argsstring>
        <name>snd_mixer_selem_is_enum_playback</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
<para>Return true if mixer simple enumerated element belongs to the playback direction. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 no playback direction, 1 playback direction </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="287" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="890" bodyend="894"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1ga90c5c5c0428fd0d6722c5a84348a39b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_selem_is_enum_capture</definition>
        <argsstring>(snd_mixer_elem_t *elem)</argsstring>
        <name>snd_mixer_selem_is_enum_capture</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
<para>Return true if mixer simple enumerated element belongs to the capture direction. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 no capture direction, 1 capture direction </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="288" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="901" bodyend="905"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1gab803bca4a9c322e1efe87950b62431b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_selem_get_enum_items</definition>
        <argsstring>(snd_mixer_elem_t *elem)</argsstring>
        <name>snd_mixer_selem_get_enum_items</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
<para>Return the number of enumerated items of the given mixer simple element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of enumerated items, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="289" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="912" bodyend="917"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1gacbae7ca76dc02dd172c80f8f704dd8c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_selem_get_enum_item_name</definition>
        <argsstring>(snd_mixer_elem_t *elem, unsigned int idx, size_t maxlen, char *str)</argsstring>
        <name>snd_mixer_selem_get_enum_item_name</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>idx</declname>
          <defname>item</defname>
        </param>
        <param>
          <type>size_t</type>
          <declname>maxlen</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>str</declname>
          <defname>buf</defname>
        </param>
        <briefdescription>
<para>get the enumerated item string for the given mixer simple element </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>item</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the enumerated item to query </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxlen</parametername>
</parameternamelist>
<parameterdescription>
<para>the maximal length to be stored </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>the buffer to store the name string </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="290" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="927" bodyend="934"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1ga6679dc52033e29b88da32f5bbd45f205" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_selem_get_enum_item</definition>
        <argsstring>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, unsigned int *idxp)</argsstring>
        <name>snd_mixer_selem_get_enum_item</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <param>
          <type><ref refid="group___simple_mixer_1gaf01a92f33cc46d0b3878d65afcc41b97" kindref="member">snd_mixer_selem_channel_id_t</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>idxp</declname>
          <defname>itemp</defname>
        </param>
        <briefdescription>
<para>get the current selected enumerated item for the given mixer simple element </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>mixer simple element channel identifier </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>itemp</parametername>
</parameternamelist>
<parameterdescription>
<para>the pointer to store the index of the enumerated item </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="291" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="943" bodyend="950"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1gadcba6291c0382676ee442311c0ff1a8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_selem_set_enum_item</definition>
        <argsstring>(snd_mixer_elem_t *elem, snd_mixer_selem_channel_id_t channel, unsigned int idx)</argsstring>
        <name>snd_mixer_selem_set_enum_item</name>
        <param>
          <type><ref refid="group___mixer_1ga9bb5eb24e4feea6c1a04c79b77938ef9" kindref="member">snd_mixer_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <param>
          <type><ref refid="group___simple_mixer_1gaf01a92f33cc46d0b3878d65afcc41b97" kindref="member">snd_mixer_selem_channel_id_t</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>idx</declname>
          <defname>item</defname>
        </param>
        <briefdescription>
<para>set the current selected enumerated item for the given mixer simple element </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>mixer simple element channel identifier </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>item</parametername>
</parameternamelist>
<parameterdescription>
<para>the enumerated item index </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="292" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="959" bodyend="966"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1ga29705a6b18fe910d2b7aeb98531d5056" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t snd_mixer_selem_id_sizeof</definition>
        <argsstring>(void)</argsstring>
        <name>snd_mixer_selem_id_sizeof</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>get size of <ref refid="group___simple_mixer_1gac0bfc2b9efcbc308df2daad92983e2ee" kindref="member">snd_mixer_selem_id_t</ref> </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>size in bytes </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="294" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="972" bodyend="975"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1gac48d80bc60d03959c43a3ec6caca8498" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_selem_id_malloc</definition>
        <argsstring>(snd_mixer_selem_id_t **ptr)</argsstring>
        <name>snd_mixer_selem_id_malloc</name>
        <param>
          <type><ref refid="group___simple_mixer_1gac0bfc2b9efcbc308df2daad92983e2ee" kindref="member">snd_mixer_selem_id_t</ref> **</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>allocate an invalid <ref refid="group___simple_mixer_1gac0bfc2b9efcbc308df2daad92983e2ee" kindref="member">snd_mixer_selem_id_t</ref> using standard malloc </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>returned pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="300" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="982" bodyend="989"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1ga2a6f790706e3ed64e1fb0f61177d13c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_mixer_selem_id_free</definition>
        <argsstring>(snd_mixer_selem_id_t *obj)</argsstring>
        <name>snd_mixer_selem_id_free</name>
        <param>
          <type><ref refid="group___simple_mixer_1gac0bfc2b9efcbc308df2daad92983e2ee" kindref="member">snd_mixer_selem_id_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>frees a previously allocated <ref refid="group___simple_mixer_1gac0bfc2b9efcbc308df2daad92983e2ee" kindref="member">snd_mixer_selem_id_t</ref> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to object to free </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="301" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="995" bodyend="998"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1ga089d6e51b1b92fb51ff2cb771071a169" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_mixer_selem_id_copy</definition>
        <argsstring>(snd_mixer_selem_id_t *dst, const snd_mixer_selem_id_t *src)</argsstring>
        <name>snd_mixer_selem_id_copy</name>
        <param>
          <type><ref refid="group___simple_mixer_1gac0bfc2b9efcbc308df2daad92983e2ee" kindref="member">snd_mixer_selem_id_t</ref> *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="group___simple_mixer_1gac0bfc2b9efcbc308df2daad92983e2ee" kindref="member">snd_mixer_selem_id_t</ref> *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>copy one <ref refid="group___simple_mixer_1gac0bfc2b9efcbc308df2daad92983e2ee" kindref="member">snd_mixer_selem_id_t</ref> to another </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to destination </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to source </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="302" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="1005" bodyend="1009"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1gae54797dd9e4382d67718899047fa1087" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* snd_mixer_selem_id_get_name</definition>
        <argsstring>(const snd_mixer_selem_id_t *obj)</argsstring>
        <name>snd_mixer_selem_id_get_name</name>
        <param>
          <type>const <ref refid="group___simple_mixer_1gac0bfc2b9efcbc308df2daad92983e2ee" kindref="member">snd_mixer_selem_id_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Get name part of a mixer simple element identifier. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element identifier </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>name part </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="303" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="1016" bodyend="1020"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1gabe5105469fa31b85a52253e709733638" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int snd_mixer_selem_id_get_index</definition>
        <argsstring>(const snd_mixer_selem_id_t *obj)</argsstring>
        <name>snd_mixer_selem_id_get_index</name>
        <param>
          <type>const <ref refid="group___simple_mixer_1gac0bfc2b9efcbc308df2daad92983e2ee" kindref="member">snd_mixer_selem_id_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Get index part of a mixer simple element identifier. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element identifier </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>index part </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="304" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="1027" bodyend="1031"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1gad127341c44087525e1c715044d7a3919" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_mixer_selem_id_set_name</definition>
        <argsstring>(snd_mixer_selem_id_t *obj, const char *val)</argsstring>
        <name>snd_mixer_selem_id_set_name</name>
        <param>
          <type><ref refid="group___simple_mixer_1gac0bfc2b9efcbc308df2daad92983e2ee" kindref="member">snd_mixer_selem_id_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set name part of a mixer simple element identifier. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element identifier </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>name part </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="305" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="1038" bodyend="1043"/>
      </memberdef>
      <memberdef kind="function" id="group___simple_mixer_1ga02bf0b9758ed4146eec38cd964b7621d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_mixer_selem_id_set_index</definition>
        <argsstring>(snd_mixer_selem_id_t *obj, unsigned int val)</argsstring>
        <name>snd_mixer_selem_id_set_index</name>
        <param>
          <type><ref refid="group___simple_mixer_1gac0bfc2b9efcbc308df2daad92983e2ee" kindref="member">snd_mixer_selem_id_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set index part of a mixer simple element identifier. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer simple element identifier </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>index part </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h" line="306" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple.c" bodystart="1050" bodyend="1054"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Application interface library for the ALSA driver. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Jaroslav Kysela <ulink url="mailto:perex@perex.cz">perex@perex.cz</ulink> </para></simplesect>
<simplesect kind="author"><para>Abramo Bagnara <ulink url="mailto:abramo@alsa-project.org">abramo@alsa-project.org</ulink> </para></simplesect>
<simplesect kind="author"><para>Takashi Iwai <ulink url="mailto:tiwai@suse.de">tiwai@suse.de</ulink> </para></simplesect>
<simplesect kind="date"><para>1998-2001</para></simplesect>
Application interface library for the ALSA driver </para>    </detaileddescription>
    <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/mixer.h"/>
  </compounddef>
</doxygen>
