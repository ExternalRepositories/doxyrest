<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="hwdep_8c" kind="file" language="C++">
    <compoundname>hwdep.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">fcntl.h</includes>
    <includes local="no">sys/ioctl.h</includes>
    <includes local="yes">hwdep_local.h</includes>
    <includes local="no">limits.h</includes>
    <includes local="yes">local.h</includes>
    <incdepgraph>
      <node id="237">
        <label>stdlib.h</label>
      </node>
      <node id="240">
        <label>fcntl.h</label>
      </node>
      <node id="241">
        <label>sys/ioctl.h</label>
      </node>
      <node id="243">
        <label>limits.h</label>
      </node>
      <node id="239">
        <label>string.h</label>
      </node>
      <node id="242">
        <label>hwdep_local.h</label>
      </node>
      <node id="238">
        <label>unistd.h</label>
      </node>
      <node id="244">
        <label>local.h</label>
      </node>
      <node id="235">
        <label>/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c</label>
        <link refid="hwdep_8c"/>
        <childnode refid="236" relation="include">
        </childnode>
        <childnode refid="237" relation="include">
        </childnode>
        <childnode refid="238" relation="include">
        </childnode>
        <childnode refid="239" relation="include">
        </childnode>
        <childnode refid="240" relation="include">
        </childnode>
        <childnode refid="241" relation="include">
        </childnode>
        <childnode refid="242" relation="include">
        </childnode>
        <childnode refid="243" relation="include">
        </childnode>
        <childnode refid="244" relation="include">
        </childnode>
      </node>
      <node id="236">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="hwdep_8c_1acbf5f1a5b83685759f50f687426235ea" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_hwdep_open_conf</definition>
        <argsstring>(snd_hwdep_t **hwdep, const char *name, snd_config_t *hwdep_root, snd_config_t *hwdep_conf, int mode)</argsstring>
        <name>snd_hwdep_open_conf</name>
        <param>
          <type><ref refid="group___hw_dep_1ga1f13b151f43d06b257c71570010b2ed0" kindref="member">snd_hwdep_t</ref> **</type>
          <declname>hwdep</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>hwdep_root</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>hwdep_conf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" line="39" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" bodystart="39" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="hwdep_8c_1a863cb866abc203f03427b1faad7257b9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_hwdep_open_noupdate</definition>
        <argsstring>(snd_hwdep_t **hwdep, snd_config_t *root, const char *name, int mode)</argsstring>
        <name>snd_hwdep_open_noupdate</name>
        <param>
          <type><ref refid="group___hw_dep_1ga1f13b151f43d06b257c71570010b2ed0" kindref="member">snd_hwdep_t</ref> **</type>
          <declname>hwdep</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>root</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" line="145" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" bodystart="145" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="group___hw_dep_1gaade8a9030fadb398fdb6d139f360f07e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_hwdep_open</definition>
        <argsstring>(snd_hwdep_t **hwdep, const char *name, int mode)</argsstring>
        <name>snd_hwdep_open</name>
        <param>
          <type><ref refid="group___hw_dep_1ga1f13b151f43d06b257c71570010b2ed0" kindref="member">snd_hwdep_t</ref> **</type>
          <declname>hwdep</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Opens a new connection to the HwDep interface. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hwdep</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned handle (NULL if not wanted) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>ASCII identifier of the HwDep handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Open mode </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code</para></simplesect>
Opens a new connection to the HwDep interface specified with an ASCII identifier and mode. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" line="169" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" bodystart="169" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="hwdep_8c_1a162c6ca2e4c9f9dc6dd65a987ca6b118" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_hwdep_open_lconf</definition>
        <argsstring>(snd_hwdep_t **hwdep, const char *name, int mode, snd_config_t *lconf)</argsstring>
        <name>snd_hwdep_open_lconf</name>
        <param>
          <type><ref refid="group___hw_dep_1ga1f13b151f43d06b257c71570010b2ed0" kindref="member">snd_hwdep_t</ref> **</type>
          <declname>hwdep</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>lconf</declname>
        </param>
        <briefdescription>
<para>Opens a new connection to the HwDep interface using local configuration. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hwdep</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned handle (NULL if not wanted) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>ASCII identifier of the HwDep handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Open mode </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lconf</parametername>
</parameternamelist>
<parameterdescription>
<para>The local configuration tree </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code</para></simplesect>
Opens a new connection to the HwDep interface specified with an ASCII identifier and mode. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" line="194" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" bodystart="194" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="group___hw_dep_1ga35ba1e894c069b37012604abf1432314" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_hwdep_close</definition>
        <argsstring>(snd_hwdep_t *hwdep)</argsstring>
        <name>snd_hwdep_close</name>
        <param>
          <type><ref refid="group___hw_dep_1ga1f13b151f43d06b257c71570010b2ed0" kindref="member">snd_hwdep_t</ref> *</type>
          <declname>hwdep</declname>
        </param>
        <briefdescription>
<para>close HwDep handle </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hwdep</parametername>
</parameternamelist>
<parameterdescription>
<para>HwDep handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code</para></simplesect>
Closes the specified HwDep handle and frees all associated resources. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" line="209" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" bodystart="209" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="hwdep_8c_1a26ee56a9b3711414ce6687e8dc0ea646" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* snd_hwdep_name</definition>
        <argsstring>(snd_hwdep_t *hwdep)</argsstring>
        <name>snd_hwdep_name</name>
        <param>
          <type><ref refid="group___hw_dep_1ga1f13b151f43d06b257c71570010b2ed0" kindref="member">snd_hwdep_t</ref> *</type>
          <declname>hwdep</declname>
        </param>
        <briefdescription>
<para>get identifier of HwDep handle </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hwdep</parametername>
</parameternamelist>
<parameterdescription>
<para>a Hwdep handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ascii identifier of HwDep handle</para></simplesect>
Returns the ASCII identifier of given HwDep handle. It&apos;s the same identifier specified in <ref refid="group___hw_dep_1gaade8a9030fadb398fdb6d139f360f07e" kindref="member">snd_hwdep_open()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" line="229" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" bodystart="229" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="hwdep_8c_1a4f94fc58c4ee20fd845eb11df435107a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___hw_dep_1ga839de1d3a2bf9495cc631c08099bca79" kindref="member">snd_hwdep_type_t</ref></type>
        <definition>snd_hwdep_type_t snd_hwdep_type</definition>
        <argsstring>(snd_hwdep_t *hwdep)</argsstring>
        <name>snd_hwdep_type</name>
        <param>
          <type><ref refid="group___hw_dep_1ga1f13b151f43d06b257c71570010b2ed0" kindref="member">snd_hwdep_t</ref> *</type>
          <declname>hwdep</declname>
        </param>
        <briefdescription>
<para>get type of HwDep handle </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hwdep</parametername>
</parameternamelist>
<parameterdescription>
<para>a HwDep handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>type of HwDep handle</para></simplesect>
Returns the type <ref refid="group___hw_dep_1ga839de1d3a2bf9495cc631c08099bca79" kindref="member">snd_hwdep_type_t</ref> of given HwDep handle. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" line="242" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" bodystart="242" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="group___hw_dep_1gacc4e48e9d9fa90fb5e35b3502cfe6f7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_hwdep_poll_descriptors_count</definition>
        <argsstring>(snd_hwdep_t *hwdep)</argsstring>
        <name>snd_hwdep_poll_descriptors_count</name>
        <param>
          <type><ref refid="group___hw_dep_1ga1f13b151f43d06b257c71570010b2ed0" kindref="member">snd_hwdep_t</ref> *</type>
          <declname>hwdep</declname>
        </param>
        <briefdescription>
<para>get count of poll descriptors for HwDep handle </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hwdep</parametername>
</parameternamelist>
<parameterdescription>
<para>HwDep handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>count of poll descriptors </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" line="253" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" bodystart="253" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="group___hw_dep_1ga179b89384deb4c5a76b7017e6ba6af88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_hwdep_poll_descriptors</definition>
        <argsstring>(snd_hwdep_t *hwdep, struct pollfd *pfds, unsigned int space)</argsstring>
        <name>snd_hwdep_poll_descriptors</name>
        <param>
          <type><ref refid="group___hw_dep_1ga1f13b151f43d06b257c71570010b2ed0" kindref="member">snd_hwdep_t</ref> *</type>
          <declname>hwdep</declname>
        </param>
        <param>
          <type>struct pollfd *</type>
          <declname>pfds</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>space</declname>
        </param>
        <briefdescription>
<para>get poll descriptors </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hwdep</parametername>
</parameternamelist>
<parameterdescription>
<para>HwDep handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pfds</parametername>
</parameternamelist>
<parameterdescription>
<para>array of poll descriptors </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>space</parametername>
</parameternamelist>
<parameterdescription>
<para>space in the poll descriptor array </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>count of filled descriptors </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" line="266" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" bodystart="266" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="group___hw_dep_1ga654b2c89f1e6bc16e590161340f1e3d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_hwdep_poll_descriptors_revents</definition>
        <argsstring>(snd_hwdep_t *hwdep, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)</argsstring>
        <name>snd_hwdep_poll_descriptors_revents</name>
        <param>
          <type><ref refid="group___hw_dep_1ga1f13b151f43d06b257c71570010b2ed0" kindref="member">snd_hwdep_t</ref> *</type>
          <declname>hwdep</declname>
        </param>
        <param>
          <type>struct pollfd *</type>
          <declname>pfds</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>nfds</declname>
        </param>
        <param>
          <type>unsigned short *</type>
          <declname>revents</declname>
        </param>
        <briefdescription>
<para>get returned events from poll descriptors </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hwdep</parametername>
</parameternamelist>
<parameterdescription>
<para>HwDep handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pfds</parametername>
</parameternamelist>
<parameterdescription>
<para>array of poll descriptors </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nfds</parametername>
</parameternamelist>
<parameterdescription>
<para>count of poll descriptors </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>revents</parametername>
</parameternamelist>
<parameterdescription>
<para>returned events </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>zero if success, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" line="297" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" bodystart="297" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="group___hw_dep_1ga6eaa5f13367625587fdd955fb4cb4c51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_hwdep_nonblock</definition>
        <argsstring>(snd_hwdep_t *hwdep, int nonblock)</argsstring>
        <name>snd_hwdep_nonblock</name>
        <param>
          <type><ref refid="group___hw_dep_1ga1f13b151f43d06b257c71570010b2ed0" kindref="member">snd_hwdep_t</ref> *</type>
          <declname>hwdep</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nonblock</declname>
        </param>
        <briefdescription>
<para>set nonblock mode </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hwdep</parametername>
</parameternamelist>
<parameterdescription>
<para>HwDep handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nonblock</parametername>
</parameternamelist>
<parameterdescription>
<para>0 = block, 1 = nonblock mode </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" line="313" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" bodystart="313" bodyend="324"/>
      </memberdef>
      <memberdef kind="function" id="group___hw_dep_1gad39906514d5d04b7ebcc190382b8bd27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t snd_hwdep_info_sizeof</definition>
        <argsstring>()</argsstring>
        <name>snd_hwdep_info_sizeof</name>
        <briefdescription>
<para>get size of the snd_hwdep_info_t structure in bytes </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>size of the snd_hwdep_info_t structure in bytes </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" line="330" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" bodystart="330" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="group___hw_dep_1gab6831cd666bea427ab3779710e90a857" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_hwdep_info_malloc</definition>
        <argsstring>(snd_hwdep_info_t **info)</argsstring>
        <name>snd_hwdep_info_malloc</name>
        <param>
          <type><ref refid="group___hw_dep_1ga12be97323a913a065524c01fb163cb29" kindref="member">snd_hwdep_info_t</ref> **</type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>allocate a new snd_hwdep_info_t structure </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>returned pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code if fails</para></simplesect>
Allocates a new snd_hwdep_info_t structure using the standard malloc C library function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" line="343" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" bodystart="343" bodyend="350"/>
      </memberdef>
      <memberdef kind="function" id="group___hw_dep_1ga9e19ef5118f808962689c3d947af1a00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_hwdep_info_free</definition>
        <argsstring>(snd_hwdep_info_t *info)</argsstring>
        <name>snd_hwdep_info_free</name>
        <param>
          <type><ref refid="group___hw_dep_1ga12be97323a913a065524c01fb163cb29" kindref="member">snd_hwdep_info_t</ref> *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>frees the snd_hwdep_info_t structure </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the snd_hwdep_info_t structure to free</para></parameterdescription>
</parameteritem>
</parameterlist>
Frees the given snd_hwdep_info_t structure using the standard free C library function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" line="359" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" bodystart="359" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="group___hw_dep_1ga3132936fc99968e59df02711d2927018" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_hwdep_info_copy</definition>
        <argsstring>(snd_hwdep_info_t *dst, const snd_hwdep_info_t *src)</argsstring>
        <name>snd_hwdep_info_copy</name>
        <param>
          <type><ref refid="group___hw_dep_1ga12be97323a913a065524c01fb163cb29" kindref="member">snd_hwdep_info_t</ref> *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="group___hw_dep_1ga12be97323a913a065524c01fb163cb29" kindref="member">snd_hwdep_info_t</ref> *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>copy one snd_hwdep_info_t structure to another </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>destination snd_hwdep_info_t structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>source snd_hwdep_info_t structure </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" line="370" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" bodystart="370" bodyend="374"/>
      </memberdef>
      <memberdef kind="function" id="group___hw_dep_1ga04193d4395908c0e31ac826ac05d3824" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_hwdep_info_get_card</definition>
        <argsstring>(const snd_hwdep_info_t *obj)</argsstring>
        <name>snd_hwdep_info_get_card</name>
        <param>
          <type>const <ref refid="group___hw_dep_1ga12be97323a913a065524c01fb163cb29" kindref="member">snd_hwdep_info_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>get hwdep card number </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_hwdep_info_t structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>hwdep card number </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" line="381" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" bodystart="381" bodyend="385"/>
      </memberdef>
      <memberdef kind="function" id="group___hw_dep_1ga23deebecc5e88b0124222ebf73999c24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int snd_hwdep_info_get_device</definition>
        <argsstring>(const snd_hwdep_info_t *info)</argsstring>
        <name>snd_hwdep_info_get_device</name>
        <param>
          <type>const <ref refid="group___hw_dep_1ga12be97323a913a065524c01fb163cb29" kindref="member">snd_hwdep_info_t</ref> *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>get hwdep device number </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_hwdep_info_t structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>hwdep device number </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" line="392" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" bodystart="392" bodyend="396"/>
      </memberdef>
      <memberdef kind="function" id="group___hw_dep_1ga80bb1ca217fa051086e7f2ab5821ee34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* snd_hwdep_info_get_id</definition>
        <argsstring>(const snd_hwdep_info_t *obj)</argsstring>
        <name>snd_hwdep_info_get_id</name>
        <param>
          <type>const <ref refid="group___hw_dep_1ga12be97323a913a065524c01fb163cb29" kindref="member">snd_hwdep_info_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>get hwdep driver identifier </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_hwdep_info_t structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>hwdep driver identifier </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" line="403" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" bodystart="403" bodyend="407"/>
      </memberdef>
      <memberdef kind="function" id="group___hw_dep_1gaf7f6251acc0f26d6fefc2c28fcf90c6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* snd_hwdep_info_get_name</definition>
        <argsstring>(const snd_hwdep_info_t *obj)</argsstring>
        <name>snd_hwdep_info_get_name</name>
        <param>
          <type>const <ref refid="group___hw_dep_1ga12be97323a913a065524c01fb163cb29" kindref="member">snd_hwdep_info_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>get hwdep driver name </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_hwdep_info_t structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>hwdep driver name </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" line="414" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" bodystart="414" bodyend="418"/>
      </memberdef>
      <memberdef kind="function" id="group___hw_dep_1ga7d846bea699c0917f54d75fe5d76a58e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___hw_dep_1ga288eb9342aaea8317a7bfa03b22feaca" kindref="member">snd_hwdep_iface_t</ref></type>
        <definition>snd_hwdep_iface_t snd_hwdep_info_get_iface</definition>
        <argsstring>(const snd_hwdep_info_t *obj)</argsstring>
        <name>snd_hwdep_info_get_iface</name>
        <param>
          <type>const <ref refid="group___hw_dep_1ga12be97323a913a065524c01fb163cb29" kindref="member">snd_hwdep_info_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>get hwdep protocol interface </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_hwdep_info_t structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>hwdep protocol interface </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" line="425" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" bodystart="425" bodyend="429"/>
      </memberdef>
      <memberdef kind="function" id="group___hw_dep_1ga5f497ef1c3a675af203923d93eda4202" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_hwdep_info_set_device</definition>
        <argsstring>(snd_hwdep_info_t *obj, unsigned int val)</argsstring>
        <name>snd_hwdep_info_set_device</name>
        <param>
          <type><ref refid="group___hw_dep_1ga12be97323a913a065524c01fb163cb29" kindref="member">snd_hwdep_info_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>set hwdep device number </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_hwdep_info_t structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>hwdep device </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" line="436" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" bodystart="436" bodyend="440"/>
      </memberdef>
      <memberdef kind="function" id="group___hw_dep_1ga97f208875f4ec6a253f088e3c2c084c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_hwdep_info</definition>
        <argsstring>(snd_hwdep_t *hwdep, snd_hwdep_info_t *info)</argsstring>
        <name>snd_hwdep_info</name>
        <param>
          <type><ref refid="group___hw_dep_1ga1f13b151f43d06b257c71570010b2ed0" kindref="member">snd_hwdep_t</ref> *</type>
          <declname>hwdep</declname>
        </param>
        <param>
          <type><ref refid="group___hw_dep_1ga12be97323a913a065524c01fb163cb29" kindref="member">snd_hwdep_info_t</ref> *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>get information about HwDep handle </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hwdep</parametername>
</parameternamelist>
<parameterdescription>
<para>HwDep handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_hwdep_info_t structure to be filled </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" line="448" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" bodystart="448" bodyend="453"/>
      </memberdef>
      <memberdef kind="function" id="group___hw_dep_1ga74f5260b0f5f779932bfe7afcf68ecb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_hwdep_ioctl</definition>
        <argsstring>(snd_hwdep_t *hwdep, unsigned int request, void *arg)</argsstring>
        <name>snd_hwdep_ioctl</name>
        <param>
          <type><ref refid="group___hw_dep_1ga1f13b151f43d06b257c71570010b2ed0" kindref="member">snd_hwdep_t</ref> *</type>
          <declname>hwdep</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>request</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>do hardware dependent ioctl </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hwdep</parametername>
</parameternamelist>
<parameterdescription>
<para>HwDep handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>request</parametername>
</parameternamelist>
<parameterdescription>
<para>ioctl command </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>ioctl argument </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" line="462" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" bodystart="462" bodyend="466"/>
      </memberdef>
      <memberdef kind="function" id="group___hw_dep_1ga4c158ce0db68b8bfac1a00abe5e2ffcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssize_t</type>
        <definition>ssize_t snd_hwdep_write</definition>
        <argsstring>(snd_hwdep_t *hwdep, const void *buffer, size_t size)</argsstring>
        <name>snd_hwdep_write</name>
        <param>
          <type><ref refid="group___hw_dep_1ga1f13b151f43d06b257c71570010b2ed0" kindref="member">snd_hwdep_t</ref> *</type>
          <declname>hwdep</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>write bytes using HwDep handle </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hwdep</parametername>
</parameternamelist>
<parameterdescription>
<para>HwDep handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer containing bytes to write </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>output buffer size in bytes </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" line="474" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" bodystart="474" bodyend="480"/>
      </memberdef>
      <memberdef kind="function" id="group___hw_dep_1ga7ef0c6e7ae7b838d509dd09b800b321f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssize_t</type>
        <definition>ssize_t snd_hwdep_read</definition>
        <argsstring>(snd_hwdep_t *hwdep, void *buffer, size_t size)</argsstring>
        <name>snd_hwdep_read</name>
        <param>
          <type><ref refid="group___hw_dep_1ga1f13b151f43d06b257c71570010b2ed0" kindref="member">snd_hwdep_t</ref> *</type>
          <declname>hwdep</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>read bytes using HwDep handle </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hwdep</parametername>
</parameternamelist>
<parameterdescription>
<para>HwDep handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer to store the input bytes </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>input buffer size in bytes </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" line="488" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" bodystart="488" bodyend="494"/>
      </memberdef>
      <memberdef kind="function" id="group___hw_dep_1gaf071b6171019a11a72367cc7f9613f5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_hwdep_dsp_status</definition>
        <argsstring>(snd_hwdep_t *hwdep, snd_hwdep_dsp_status_t *info)</argsstring>
        <name>snd_hwdep_dsp_status</name>
        <param>
          <type><ref refid="group___hw_dep_1ga1f13b151f43d06b257c71570010b2ed0" kindref="member">snd_hwdep_t</ref> *</type>
          <declname>hwdep</declname>
        </param>
        <param>
          <type><ref refid="group___hw_dep_1ga904ac34d4d2af6c080aa01d9d70f6ef2" kindref="member">snd_hwdep_dsp_status_t</ref> *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>get the DSP status information </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hwdep</parametername>
</parameternamelist>
<parameterdescription>
<para>HwDep handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_hwdep_dsp_status_t structure to be filled </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" line="502" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" bodystart="502" bodyend="507"/>
      </memberdef>
      <memberdef kind="function" id="group___hw_dep_1ga7316c8ce8d4ba06b58e6536e3cf96223" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_hwdep_dsp_load</definition>
        <argsstring>(snd_hwdep_t *hwdep, snd_hwdep_dsp_image_t *block)</argsstring>
        <name>snd_hwdep_dsp_load</name>
        <param>
          <type><ref refid="group___hw_dep_1ga1f13b151f43d06b257c71570010b2ed0" kindref="member">snd_hwdep_t</ref> *</type>
          <declname>hwdep</declname>
        </param>
        <param>
          <type><ref refid="group___hw_dep_1ga041c777902d3888a5b000ccd305f32ce" kindref="member">snd_hwdep_dsp_image_t</ref> *</type>
          <declname>block</declname>
        </param>
        <briefdescription>
<para>load the DSP block </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hwdep</parametername>
</parameternamelist>
<parameterdescription>
<para>HwDep handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>block</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_hwdep_dsp_image_t structure to transfer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" line="515" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" bodystart="515" bodyend="520"/>
      </memberdef>
      <memberdef kind="function" id="group___hw_dep_1ga54205faff69bdd35b996863094bafada" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t snd_hwdep_dsp_status_sizeof</definition>
        <argsstring>()</argsstring>
        <name>snd_hwdep_dsp_status_sizeof</name>
        <briefdescription>
<para>get size of the snd_hwdep_dsp_status_t structure in bytes </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>size of the snd_hwdep_dsp_status_t structure in bytes </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" line="526" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" bodystart="526" bodyend="529"/>
      </memberdef>
      <memberdef kind="function" id="group___hw_dep_1ga444c5bd71b0a3756084450dfb7528c6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_hwdep_dsp_status_malloc</definition>
        <argsstring>(snd_hwdep_dsp_status_t **info)</argsstring>
        <name>snd_hwdep_dsp_status_malloc</name>
        <param>
          <type><ref refid="group___hw_dep_1ga904ac34d4d2af6c080aa01d9d70f6ef2" kindref="member">snd_hwdep_dsp_status_t</ref> **</type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>allocate a new snd_hwdep_dsp_status_t structure </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>returned pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code if fails</para></simplesect>
Allocates a new snd_hwdep_dsp_status_t structure using the standard malloc C library function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" line="539" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" bodystart="539" bodyend="546"/>
      </memberdef>
      <memberdef kind="function" id="group___hw_dep_1gaa7d3a0f8f01805b10342581893e9671e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_hwdep_dsp_status_free</definition>
        <argsstring>(snd_hwdep_dsp_status_t *info)</argsstring>
        <name>snd_hwdep_dsp_status_free</name>
        <param>
          <type><ref refid="group___hw_dep_1ga904ac34d4d2af6c080aa01d9d70f6ef2" kindref="member">snd_hwdep_dsp_status_t</ref> *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>frees the snd_hwdep_dsp_status_t structure </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the snd_hwdep_dsp_status_t structure to free</para></parameterdescription>
</parameteritem>
</parameterlist>
Frees the given snd_hwdep_dsp_status_t structure using the standard free C library function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" line="555" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" bodystart="555" bodyend="559"/>
      </memberdef>
      <memberdef kind="function" id="group___hw_dep_1gacc06c08ac09beec6b50fddf5496ce25b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_hwdep_dsp_status_copy</definition>
        <argsstring>(snd_hwdep_dsp_status_t *dst, const snd_hwdep_dsp_status_t *src)</argsstring>
        <name>snd_hwdep_dsp_status_copy</name>
        <param>
          <type><ref refid="group___hw_dep_1ga904ac34d4d2af6c080aa01d9d70f6ef2" kindref="member">snd_hwdep_dsp_status_t</ref> *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="group___hw_dep_1ga904ac34d4d2af6c080aa01d9d70f6ef2" kindref="member">snd_hwdep_dsp_status_t</ref> *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>copy one snd_hwdep_dsp_status_t structure to another </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>destination snd_hwdep_dsp_status_t structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>source snd_hwdep_dsp_status_t structure </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" line="566" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" bodystart="566" bodyend="570"/>
      </memberdef>
      <memberdef kind="function" id="group___hw_dep_1ga52f6b403c2a4947c647043fdd7c5dbf7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int snd_hwdep_dsp_status_get_version</definition>
        <argsstring>(const snd_hwdep_dsp_status_t *obj)</argsstring>
        <name>snd_hwdep_dsp_status_get_version</name>
        <param>
          <type>const <ref refid="group___hw_dep_1ga904ac34d4d2af6c080aa01d9d70f6ef2" kindref="member">snd_hwdep_dsp_status_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>get the driver version of dsp loader </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_hwdep_dsp_status_t structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the driver version </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" line="577" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" bodystart="577" bodyend="581"/>
      </memberdef>
      <memberdef kind="function" id="group___hw_dep_1ga3f62477a689ef9e84048f7ba8e33a792" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* snd_hwdep_dsp_status_get_id</definition>
        <argsstring>(const snd_hwdep_dsp_status_t *obj)</argsstring>
        <name>snd_hwdep_dsp_status_get_id</name>
        <param>
          <type>const <ref refid="group___hw_dep_1ga904ac34d4d2af6c080aa01d9d70f6ef2" kindref="member">snd_hwdep_dsp_status_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>get the driver id of dsp loader </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_hwdep_dsp_status_t structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the driver id string </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" line="588" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" bodystart="588" bodyend="592"/>
      </memberdef>
      <memberdef kind="function" id="group___hw_dep_1gac49bce861455b700ba79c3eb9f73aae9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int snd_hwdep_dsp_status_get_num_dsps</definition>
        <argsstring>(const snd_hwdep_dsp_status_t *obj)</argsstring>
        <name>snd_hwdep_dsp_status_get_num_dsps</name>
        <param>
          <type>const <ref refid="group___hw_dep_1ga904ac34d4d2af6c080aa01d9d70f6ef2" kindref="member">snd_hwdep_dsp_status_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>get number of dsp blocks </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_hwdep_dsp_status_t structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of dsp blocks </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" line="599" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" bodystart="599" bodyend="603"/>
      </memberdef>
      <memberdef kind="function" id="group___hw_dep_1ga6c5e57aaf95a248814897bd80e12edf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int snd_hwdep_dsp_status_get_dsp_loaded</definition>
        <argsstring>(const snd_hwdep_dsp_status_t *info)</argsstring>
        <name>snd_hwdep_dsp_status_get_dsp_loaded</name>
        <param>
          <type>const <ref refid="group___hw_dep_1ga904ac34d4d2af6c080aa01d9d70f6ef2" kindref="member">snd_hwdep_dsp_status_t</ref> *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>get the bit flags of the loaded dsp blocks </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_hwdep_dsp_status_t structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the big flags of the loaded dsp blocks </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" line="610" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" bodystart="610" bodyend="614"/>
      </memberdef>
      <memberdef kind="function" id="group___hw_dep_1gaf49d8044583b6f0c890bbb6a493734e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int snd_hwdep_dsp_status_get_chip_ready</definition>
        <argsstring>(const snd_hwdep_dsp_status_t *obj)</argsstring>
        <name>snd_hwdep_dsp_status_get_chip_ready</name>
        <param>
          <type>const <ref refid="group___hw_dep_1ga904ac34d4d2af6c080aa01d9d70f6ef2" kindref="member">snd_hwdep_dsp_status_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>get the chip status of dsp loader </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_hwdep_dsp_status_t structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>non-zero if all DSP blocks are loaded and the chip is ready </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" line="621" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" bodystart="621" bodyend="625"/>
      </memberdef>
      <memberdef kind="function" id="group___hw_dep_1ga8a5e773b145d973ea5c75057974a371d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t snd_hwdep_dsp_image_sizeof</definition>
        <argsstring>()</argsstring>
        <name>snd_hwdep_dsp_image_sizeof</name>
        <briefdescription>
<para>get size of the snd_hwdep_dsp_image_t structure in bytes </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>size of the snd_hwdep_dsp_image_t structure in bytes </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" line="631" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" bodystart="631" bodyend="634"/>
      </memberdef>
      <memberdef kind="function" id="group___hw_dep_1gacf44ffc69400d7d195809c18cb71f89d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_hwdep_dsp_image_malloc</definition>
        <argsstring>(snd_hwdep_dsp_image_t **info)</argsstring>
        <name>snd_hwdep_dsp_image_malloc</name>
        <param>
          <type><ref refid="group___hw_dep_1ga041c777902d3888a5b000ccd305f32ce" kindref="member">snd_hwdep_dsp_image_t</ref> **</type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>allocate a new snd_hwdep_dsp_image_t structure </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>returned pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code if fails</para></simplesect>
Allocates a new snd_hwdep_dsp_image_t structure using the standard malloc C library function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" line="644" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" bodystart="644" bodyend="651"/>
      </memberdef>
      <memberdef kind="function" id="group___hw_dep_1ga95c9c00e3b9b20ba6a92ac9d14c5cfdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_hwdep_dsp_image_free</definition>
        <argsstring>(snd_hwdep_dsp_image_t *info)</argsstring>
        <name>snd_hwdep_dsp_image_free</name>
        <param>
          <type><ref refid="group___hw_dep_1ga041c777902d3888a5b000ccd305f32ce" kindref="member">snd_hwdep_dsp_image_t</ref> *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>frees the snd_hwdep_dsp_image_t structure </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the snd_hwdep_dsp_image_t structure to free</para></parameterdescription>
</parameteritem>
</parameterlist>
Frees the given snd_hwdep_dsp_image_t structure using the standard free C library function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" line="660" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" bodystart="660" bodyend="664"/>
      </memberdef>
      <memberdef kind="function" id="group___hw_dep_1ga4178c718645804dffde98bf210e447b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_hwdep_dsp_image_copy</definition>
        <argsstring>(snd_hwdep_dsp_image_t *dst, const snd_hwdep_dsp_image_t *src)</argsstring>
        <name>snd_hwdep_dsp_image_copy</name>
        <param>
          <type><ref refid="group___hw_dep_1ga041c777902d3888a5b000ccd305f32ce" kindref="member">snd_hwdep_dsp_image_t</ref> *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="group___hw_dep_1ga041c777902d3888a5b000ccd305f32ce" kindref="member">snd_hwdep_dsp_image_t</ref> *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>copy one snd_hwdep_dsp_image_t structure to another </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>destination snd_hwdep_dsp_image_t structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>source snd_hwdep_dsp_image_t structure </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" line="671" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" bodystart="671" bodyend="675"/>
      </memberdef>
      <memberdef kind="function" id="group___hw_dep_1gada5fa0eaa5a4a941dc5b79ae1897db76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int snd_hwdep_dsp_image_get_index</definition>
        <argsstring>(const snd_hwdep_dsp_image_t *obj)</argsstring>
        <name>snd_hwdep_dsp_image_get_index</name>
        <param>
          <type>const <ref refid="group___hw_dep_1ga041c777902d3888a5b000ccd305f32ce" kindref="member">snd_hwdep_dsp_image_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>get the DSP block index </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_hwdep_dsp_image_t structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the index of the DSP block </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" line="682" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" bodystart="682" bodyend="686"/>
      </memberdef>
      <memberdef kind="function" id="group___hw_dep_1ga025e4656f44f73d8c372b8b10285f202" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* snd_hwdep_dsp_image_get_name</definition>
        <argsstring>(const snd_hwdep_dsp_image_t *obj)</argsstring>
        <name>snd_hwdep_dsp_image_get_name</name>
        <param>
          <type>const <ref refid="group___hw_dep_1ga041c777902d3888a5b000ccd305f32ce" kindref="member">snd_hwdep_dsp_image_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>get the name of the DSP block </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_hwdep_dsp_image_t structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the name string of the DSP block </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" line="693" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" bodystart="693" bodyend="697"/>
      </memberdef>
      <memberdef kind="function" id="group___hw_dep_1gaf6087e4530245055c8cceaa74df629aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t snd_hwdep_dsp_image_get_length</definition>
        <argsstring>(const snd_hwdep_dsp_image_t *obj)</argsstring>
        <name>snd_hwdep_dsp_image_get_length</name>
        <param>
          <type>const <ref refid="group___hw_dep_1ga041c777902d3888a5b000ccd305f32ce" kindref="member">snd_hwdep_dsp_image_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>get the length of the DSP block </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_hwdep_dsp_image_t structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the length of the DSP block in bytes </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" line="704" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" bodystart="704" bodyend="708"/>
      </memberdef>
      <memberdef kind="function" id="group___hw_dep_1ga330539511a4fe2936351b34a26cf96ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const void *</type>
        <definition>const void* snd_hwdep_dsp_image_get_image</definition>
        <argsstring>(const snd_hwdep_dsp_image_t *obj)</argsstring>
        <name>snd_hwdep_dsp_image_get_image</name>
        <param>
          <type>const <ref refid="group___hw_dep_1ga041c777902d3888a5b000ccd305f32ce" kindref="member">snd_hwdep_dsp_image_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>get the image pointer of the DSP block </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_hwdep_dsp_image_t structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the image pointer of the DSP block </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" line="715" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" bodystart="715" bodyend="719"/>
      </memberdef>
      <memberdef kind="function" id="group___hw_dep_1ga6e93c88a4595ac0915211dca5f46ab72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_hwdep_dsp_image_set_index</definition>
        <argsstring>(snd_hwdep_dsp_image_t *obj, unsigned int index)</argsstring>
        <name>snd_hwdep_dsp_image_set_index</name>
        <param>
          <type><ref refid="group___hw_dep_1ga041c777902d3888a5b000ccd305f32ce" kindref="member">snd_hwdep_dsp_image_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>set the DSP block index </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_hwdep_dsp_image_t structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index value to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" line="726" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" bodystart="726" bodyend="730"/>
      </memberdef>
      <memberdef kind="function" id="group___hw_dep_1gab6529c1bf1aba5bf2abdbbf157a4e9e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_hwdep_dsp_image_set_name</definition>
        <argsstring>(snd_hwdep_dsp_image_t *obj, const char *name)</argsstring>
        <name>snd_hwdep_dsp_image_set_name</name>
        <param>
          <type><ref refid="group___hw_dep_1ga041c777902d3888a5b000ccd305f32ce" kindref="member">snd_hwdep_dsp_image_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>set the name of the DSP block </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_hwdep_dsp_image_t structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name string </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" line="737" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" bodystart="737" bodyend="742"/>
      </memberdef>
      <memberdef kind="function" id="group___hw_dep_1ga6de5750e29632c68af2648dcb11a1429" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_hwdep_dsp_image_set_length</definition>
        <argsstring>(snd_hwdep_dsp_image_t *obj, size_t length)</argsstring>
        <name>snd_hwdep_dsp_image_set_length</name>
        <param>
          <type><ref refid="group___hw_dep_1ga041c777902d3888a5b000ccd305f32ce" kindref="member">snd_hwdep_dsp_image_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>set the DSP block length </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_hwdep_dsp_image_t structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>the length of the DSP block </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" line="749" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" bodystart="749" bodyend="753"/>
      </memberdef>
      <memberdef kind="function" id="group___hw_dep_1ga3da9921e2aab7ab9ed91a39c4f3f6a0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_hwdep_dsp_image_set_image</definition>
        <argsstring>(snd_hwdep_dsp_image_t *obj, void *image)</argsstring>
        <name>snd_hwdep_dsp_image_set_image</name>
        <param>
          <type><ref refid="group___hw_dep_1ga041c777902d3888a5b000ccd305f32ce" kindref="member">snd_hwdep_dsp_image_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>image</declname>
        </param>
        <briefdescription>
<para>set the DSP block image pointer </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_hwdep_dsp_image_t structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>image</parametername>
</parameternamelist>
<parameterdescription>
<para>the DSP image pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" line="760" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c" bodystart="760" bodyend="764"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>HwDep Interface (hardware dependent) </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Jaroslav Kysela <ulink url="mailto:perex@perex.cz">perex@perex.cz</ulink> </para></simplesect>
<simplesect kind="date"><para>2000-2001</para></simplesect>
HwDep (hardware dependent) Interface is designed for individual hardware access. This interface does not cover any API specification. </para>    </detaileddescription>
    <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/hwdep/hwdep.c"/>
  </compounddef>
</doxygen>
