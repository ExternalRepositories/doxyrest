<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="topology_8h" kind="file" language="C++">
    <compoundname>topology.h</compoundname>
    <includes local="no">stdint.h</includes>
    <incdepgraph>
      <node id="87">
        <label>stdint.h</label>
      </node>
      <node id="86">
        <label>/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/topology.h</label>
        <link refid="topology_8h"/>
        <childnode refid="87" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structsnd__tplg__tlv__template" prot="public">snd_tplg_tlv_template</innerclass>
    <innerclass refid="structsnd__tplg__tlv__dbscale__template" prot="public">snd_tplg_tlv_dbscale_template</innerclass>
    <innerclass refid="structsnd__tplg__channel__elem" prot="public">snd_tplg_channel_elem</innerclass>
    <innerclass refid="structsnd__tplg__channel__map__template" prot="public">snd_tplg_channel_map_template</innerclass>
    <innerclass refid="structsnd__tplg__pdata__template" prot="public">snd_tplg_pdata_template</innerclass>
    <innerclass refid="structsnd__tplg__io__ops__template" prot="public">snd_tplg_io_ops_template</innerclass>
    <innerclass refid="structsnd__tplg__ctl__template" prot="public">snd_tplg_ctl_template</innerclass>
    <innerclass refid="structsnd__tplg__mixer__template" prot="public">snd_tplg_mixer_template</innerclass>
    <innerclass refid="structsnd__tplg__enum__template" prot="public">snd_tplg_enum_template</innerclass>
    <innerclass refid="structsnd__tplg__bytes__template" prot="public">snd_tplg_bytes_template</innerclass>
    <innerclass refid="structsnd__tplg__graph__elem" prot="public">snd_tplg_graph_elem</innerclass>
    <innerclass refid="structsnd__tplg__graph__template" prot="public">snd_tplg_graph_template</innerclass>
    <innerclass refid="structsnd__tplg__widget__template" prot="public">snd_tplg_widget_template</innerclass>
    <innerclass refid="structsnd__tplg__stream__template" prot="public">snd_tplg_stream_template</innerclass>
    <innerclass refid="structsnd__tplg__stream__caps__template" prot="public">snd_tplg_stream_caps_template</innerclass>
    <innerclass refid="structsnd__tplg__pcm__template" prot="public">snd_tplg_pcm_template</innerclass>
    <innerclass refid="structsnd__tplg__hw__config__template" prot="public">snd_tplg_hw_config_template</innerclass>
    <innerclass refid="structsnd__tplg__dai__template" prot="public">snd_tplg_dai_template</innerclass>
    <innerclass refid="structsnd__tplg__link__template" prot="public">snd_tplg_link_template</innerclass>
    <innerclass refid="structsnd__tplg__obj__template__t" prot="public">snd_tplg_obj_template_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__topology_1ga166b4ca9decf8ffd675f06c96d265490" prot="public" static="no">
        <name>SND_TPLG_MAX_CHAN</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximum number of channels supported in one control </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/topology.h" line="727" column="9" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/topology.h" bodystart="727" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__topology_1ga465b5b8dea36052ad6fb12e2886f8757" prot="public" static="no">
        <name>snd_tplg_type</name>
        <enumvalue id="group__topology_1gga465b5b8dea36052ad6fb12e2886f8757aaf27c1cc4c621a45d46432326a1aa888" prot="public">
          <name>SND_TPLG_TYPE_TLV</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>TLV Data </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__topology_1gga465b5b8dea36052ad6fb12e2886f8757a96c0e408a18ede418d5e88b15a1a092d" prot="public">
          <name>SND_TPLG_TYPE_MIXER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Mixer control </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__topology_1gga465b5b8dea36052ad6fb12e2886f8757acd5e9bf0971828063b10a6ce1c5f5d06" prot="public">
          <name>SND_TPLG_TYPE_ENUM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Enumerated control </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__topology_1gga465b5b8dea36052ad6fb12e2886f8757a001f35143cd77fc5d1ffcf943197f05f" prot="public">
          <name>SND_TPLG_TYPE_TEXT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Text data </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__topology_1gga465b5b8dea36052ad6fb12e2886f8757a465f9e3757181d5cfc2198b072445f96" prot="public">
          <name>SND_TPLG_TYPE_DATA</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Private data </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__topology_1gga465b5b8dea36052ad6fb12e2886f8757abfabfba93f42f3480ba1a157b040d2c9" prot="public">
          <name>SND_TPLG_TYPE_BYTES</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Byte control </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__topology_1gga465b5b8dea36052ad6fb12e2886f8757a0f7aab87018f1c08cf34d85331eaf04e" prot="public">
          <name>SND_TPLG_TYPE_STREAM_CONFIG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>PCM Stream configuration </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__topology_1gga465b5b8dea36052ad6fb12e2886f8757a0aaae49f2f43033ea4492a244ff4d6c7" prot="public">
          <name>SND_TPLG_TYPE_STREAM_CAPS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>PCM Stream capabilities </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__topology_1gga465b5b8dea36052ad6fb12e2886f8757ab9c96aed8ec27baa5174b95c1a48f24e" prot="public">
          <name>SND_TPLG_TYPE_PCM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>PCM stream device </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__topology_1gga465b5b8dea36052ad6fb12e2886f8757ad4dc07d95c540edc290caa096f782638" prot="public">
          <name>SND_TPLG_TYPE_DAPM_WIDGET</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>DAPM widget </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__topology_1gga465b5b8dea36052ad6fb12e2886f8757a60c8b0cf1870569f70e09efe0a1335fa" prot="public">
          <name>SND_TPLG_TYPE_DAPM_GRAPH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>DAPM graph elements </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__topology_1gga465b5b8dea36052ad6fb12e2886f8757a8f1276de125c64cd18d4de09f077057b" prot="public">
          <name>SND_TPLG_TYPE_BE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>BE DAI link </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__topology_1gga465b5b8dea36052ad6fb12e2886f8757a88677abcdb522863847c547c5f48ab46" prot="public">
          <name>SND_TPLG_TYPE_CC</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Hostless codec &lt;-&gt; codec link </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__topology_1gga465b5b8dea36052ad6fb12e2886f8757a0728bac919b44131c4181976964aba47" prot="public">
          <name>SND_TPLG_TYPE_MANIFEST</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Topology manifest </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__topology_1gga465b5b8dea36052ad6fb12e2886f8757a3a9bcd3df54f0eb979b8e30611dca531" prot="public">
          <name>SND_TPLG_TYPE_TOKEN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Vendor tokens </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__topology_1gga465b5b8dea36052ad6fb12e2886f8757ac8749fd8387d76b060e8954286e05403" prot="public">
          <name>SND_TPLG_TYPE_TUPLE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Vendor tuples </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__topology_1gga465b5b8dea36052ad6fb12e2886f8757a6c902fd43a05f900a35c8e73dc853755" prot="public">
          <name>SND_TPLG_TYPE_LINK</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Physical DAI link </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__topology_1gga465b5b8dea36052ad6fb12e2886f8757a418ddc4b18fd0f9998dbc5eaddfd3bea" prot="public">
          <name>SND_TPLG_TYPE_HW_CONFIG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Link HW config </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__topology_1gga465b5b8dea36052ad6fb12e2886f8757a6163e1b023ee7a14c6ddd555df9083a3" prot="public">
          <name>SND_TPLG_TYPE_DAI</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Physical DAI </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Topology object types </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/topology.h" line="733" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/topology.h" bodystart="733" bodyend="753"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__topology_1ga85fcf522a65a5da8f57d83eec2eea98e" prot="public" static="no">
        <type>struct snd_tplg</type>
        <definition>typedef struct snd_tplg snd_tplg_t</definition>
        <argsstring></argsstring>
        <name>snd_tplg_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Topology context </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/topology.h" line="418" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/topology.h" bodystart="730" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__topology_1ga33eea73f6e3a5a1cdb4af78482fd007b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__topology_1ga85fcf522a65a5da8f57d83eec2eea98e" kindref="member">snd_tplg_t</ref> *</type>
        <definition>snd_tplg_t* snd_tplg_new</definition>
        <argsstring>(void)</argsstring>
        <name>snd_tplg_new</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Create a new topology parser instance. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>New topology parser instance </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/topology.h" line="759" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/parser.c" bodystart="449" bodyend="484"/>
      </memberdef>
      <memberdef kind="function" id="group__topology_1gad0311f45ec180cced72c0500f42b14f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_tplg_free</definition>
        <argsstring>(snd_tplg_t *tplg)</argsstring>
        <name>snd_tplg_free</name>
        <param>
          <type><ref refid="group__topology_1ga85fcf522a65a5da8f57d83eec2eea98e" kindref="member">snd_tplg_t</ref> *</type>
          <declname>tplg</declname>
        </param>
        <briefdescription>
<para>Free a topology parser instance. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tplg</parametername>
</parameternamelist>
<parameterdescription>
<para>Topology parser instance </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/topology.h" line="765" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/parser.c" bodystart="486" bodyend="511"/>
      </memberdef>
      <memberdef kind="function" id="group__topology_1ga32610ecd4d4d3d8b298ed6eea9ee19cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_tplg_build_file</definition>
        <argsstring>(snd_tplg_t *tplg, const char *infile, const char *outfile)</argsstring>
        <name>snd_tplg_build_file</name>
        <param>
          <type><ref refid="group__topology_1ga85fcf522a65a5da8f57d83eec2eea98e" kindref="member">snd_tplg_t</ref> *</type>
          <declname>tplg</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>infile</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>outfile</declname>
        </param>
        <briefdescription>
<para>Parse and build topology text file into binary file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tplg</parametername>
</parameternamelist>
<parameterdescription>
<para>Topology instance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>infile</parametername>
</parameternamelist>
<parameterdescription>
<para>Topology text input file to be parsed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outfile</parametername>
</parameternamelist>
<parameterdescription>
<para>Binary topology output file. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero on success, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/topology.h" line="774" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/parser.c" bodystart="310" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="group__topology_1gac4682edcfc48f7f4c90c238ebffc0260" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_tplg_verbose</definition>
        <argsstring>(snd_tplg_t *tplg, int verbose)</argsstring>
        <name>snd_tplg_verbose</name>
        <param>
          <type><ref refid="group__topology_1ga85fcf522a65a5da8f57d83eec2eea98e" kindref="member">snd_tplg_t</ref> *</type>
          <declname>tplg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>verbose</declname>
        </param>
        <briefdescription>
<para>Enable verbose reporting of binary file output. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tplg</parametername>
</parameternamelist>
<parameterdescription>
<para>Topology Instance </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>verbose</parametername>
</parameternamelist>
<parameterdescription>
<para>Enable verbose output level if non zero </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/topology.h" line="782" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/parser.c" bodystart="434" bodyend="437"/>
      </memberdef>
      <memberdef kind="function" id="group__topology_1ga05ff9c8d200b65c8511ef498443e0f5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_tplg_add_object</definition>
        <argsstring>(snd_tplg_t *tplg, snd_tplg_obj_template_t *t)</argsstring>
        <name>snd_tplg_add_object</name>
        <param>
          <type><ref refid="group__topology_1ga85fcf522a65a5da8f57d83eec2eea98e" kindref="member">snd_tplg_t</ref> *</type>
          <declname>tplg</declname>
        </param>
        <param>
          <type><ref refid="structsnd__tplg__obj__template__t" kindref="compound">snd_tplg_obj_template_t</ref> *</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Register topology template object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tplg</parametername>
</parameternamelist>
<parameterdescription>
<para>Topology instance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>Template object. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero on success, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/topology.h" line="1063" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/parser.c" bodystart="356" bodyend="381"/>
      </memberdef>
      <memberdef kind="function" id="group__topology_1ga537e8f4fa495e40f8fc9a8d7c4ea8840" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_tplg_build</definition>
        <argsstring>(snd_tplg_t *tplg, const char *outfile)</argsstring>
        <name>snd_tplg_build</name>
        <param>
          <type><ref refid="group__topology_1ga85fcf522a65a5da8f57d83eec2eea98e" kindref="member">snd_tplg_t</ref> *</type>
          <declname>tplg</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>outfile</declname>
        </param>
        <briefdescription>
<para>Build all registered topology data into binary file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tplg</parametername>
</parameternamelist>
<parameterdescription>
<para>Topology instance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outfile</parametername>
</parameternamelist>
<parameterdescription>
<para>Binary topology output file. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero on success, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/topology.h" line="1071" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/parser.c" bodystart="383" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="group__topology_1gabbb1cc2f7389e77d2d31919296e7e896" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_tplg_set_manifest_data</definition>
        <argsstring>(snd_tplg_t *tplg, const void *data, int len)</argsstring>
        <name>snd_tplg_set_manifest_data</name>
        <param>
          <type><ref refid="group__topology_1ga85fcf522a65a5da8f57d83eec2eea98e" kindref="member">snd_tplg_t</ref> *</type>
          <declname>tplg</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Attach private data to topology manifest. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tplg</parametername>
</parameternamelist>
<parameterdescription>
<para>Topology instance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Private data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of data in bytes. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero on success, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/topology.h" line="1080" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/parser.c" bodystart="412" bodyend="425"/>
      </memberdef>
      <memberdef kind="function" id="group__topology_1ga389e200fa8c0b4b2c4c7352486874620" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_tplg_set_version</definition>
        <argsstring>(snd_tplg_t *tplg, unsigned int version)</argsstring>
        <name>snd_tplg_set_version</name>
        <param>
          <type><ref refid="group__topology_1ga85fcf522a65a5da8f57d83eec2eea98e" kindref="member">snd_tplg_t</ref> *</type>
          <declname>tplg</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>version</declname>
        </param>
        <briefdescription>
<para>Set an optional vendor specific version number. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tplg</parametername>
</parameternamelist>
<parameterdescription>
<para>Topology instance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>version</parametername>
</parameternamelist>
<parameterdescription>
<para>Vendor specific version number. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero on success, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/topology.h" line="1088" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/topology/parser.c" bodystart="427" bodyend="432"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/topology.h"/>
  </compounddef>
</doxygen>
