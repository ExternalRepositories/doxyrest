<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="pcm__softvol_8c" kind="file" language="C++">
    <compoundname>pcm_softvol.c</compoundname>
    <includes local="yes">bswap.h</includes>
    <includes local="no">math.h</includes>
    <includes local="yes">pcm_local.h</includes>
    <includes local="yes">pcm_plugin.h</includes>
    <incdepgraph>
      <node id="641">
        <label>pcm_plugin.h</label>
      </node>
      <node id="639">
        <label>math.h</label>
      </node>
      <node id="640">
        <label>pcm_local.h</label>
      </node>
      <node id="637">
        <label>/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_softvol.c</label>
        <link refid="pcm__softvol_8c"/>
        <childnode refid="638" relation="include">
        </childnode>
        <childnode refid="639" relation="include">
        </childnode>
        <childnode refid="640" relation="include">
        </childnode>
        <childnode refid="641" relation="include">
        </childnode>
      </node>
      <node id="638">
        <label>bswap.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="pcm__softvol_8c_1ab489e78a0a2b084a24b899fdef5a5945" prot="public" static="no">
        <name>GET_VOL_SCALE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_softvol.c" line="327" column="10" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_softvol.c" bodystart="327" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="pcm__softvol_8c_1a053bcbb701e426f91233fc0a377fd603" prot="public" static="yes" mutable="no">
        <type>const snd_pcm_ops_t</type>
        <definition>const snd_pcm_ops_t snd_pcm_softvol_ops</definition>
        <argsstring></argsstring>
        <name>snd_pcm_softvol_ops</name>
        <initializer>= {
	.close = snd_pcm_softvol_close,
	.info = snd_pcm_generic_info,
	.hw_refine = snd_pcm_softvol_hw_refine,
	.hw_params = snd_pcm_softvol_hw_params,
	.hw_free = snd_pcm_generic_hw_free,
	.sw_params = snd_pcm_generic_sw_params,
	.channel_info = snd_pcm_generic_channel_info,
	.dump = snd_pcm_softvol_dump,
	.nonblock = snd_pcm_generic_nonblock,
	.async = snd_pcm_generic_async,
	.mmap = snd_pcm_generic_mmap,
	.munmap = snd_pcm_generic_munmap,
	.query_chmaps = snd_pcm_generic_query_chmaps,
	.get_chmap = snd_pcm_generic_get_chmap,
	.set_chmap = snd_pcm_generic_set_chmap,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_softvol.c" line="815" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_softvol.c" bodystart="815" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="pcm__softvol_8c_1a1a42f0a20e551d4cf84eff23240d8fe5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void softvol_convert_stereo_vol</definition>
        <argsstring>(snd_pcm_softvol_t *svol, const snd_pcm_channel_area_t *dst_areas, snd_pcm_uframes_t dst_offset, const snd_pcm_channel_area_t *src_areas, snd_pcm_uframes_t src_offset, unsigned int channels, snd_pcm_uframes_t frames)</argsstring>
        <name>softvol_convert_stereo_vol</name>
        <param>
          <type>snd_pcm_softvol_t *</type>
          <declname>svol</declname>
        </param>
        <param>
          <type>const <ref refid="structsnd__pcm__channel__area__t" kindref="compound">snd_pcm_channel_area_t</ref> *</type>
          <declname>dst_areas</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref></type>
          <declname>dst_offset</declname>
        </param>
        <param>
          <type>const <ref refid="structsnd__pcm__channel__area__t" kindref="compound">snd_pcm_channel_area_t</ref> *</type>
          <declname>src_areas</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref></type>
          <declname>src_offset</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>channels</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref></type>
          <declname>frames</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_softvol.c" line="273" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_softvol.c" bodystart="273" bodyend="324"/>
      </memberdef>
      <memberdef kind="function" id="pcm__softvol_8c_1ae0bfb8833d78bf8157e4a095e77af727" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void softvol_convert_mono_vol</definition>
        <argsstring>(snd_pcm_softvol_t *svol, const snd_pcm_channel_area_t *dst_areas, snd_pcm_uframes_t dst_offset, const snd_pcm_channel_area_t *src_areas, snd_pcm_uframes_t src_offset, unsigned int channels, snd_pcm_uframes_t frames)</argsstring>
        <name>softvol_convert_mono_vol</name>
        <param>
          <type>snd_pcm_softvol_t *</type>
          <declname>svol</declname>
        </param>
        <param>
          <type>const <ref refid="structsnd__pcm__channel__area__t" kindref="compound">snd_pcm_channel_area_t</ref> *</type>
          <declname>dst_areas</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref></type>
          <declname>dst_offset</declname>
        </param>
        <param>
          <type>const <ref refid="structsnd__pcm__channel__area__t" kindref="compound">snd_pcm_channel_area_t</ref> *</type>
          <declname>src_areas</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref></type>
          <declname>src_offset</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>channels</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref></type>
          <declname>frames</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_softvol.c" line="330" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_softvol.c" bodystart="330" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="pcm__softvol_8c_1ab929e6a8c55166aa8179720c83b2f43a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void get_current_volume</definition>
        <argsstring>(snd_pcm_softvol_t *svol)</argsstring>
        <name>get_current_volume</name>
        <param>
          <type>snd_pcm_softvol_t *</type>
          <declname>svol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_softvol.c" line="382" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_softvol.c" bodystart="382" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="pcm__softvol_8c_1ade70d58eac84e77dbb35dd303eaec84a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void softvol_free</definition>
        <argsstring>(snd_pcm_softvol_t *svol)</argsstring>
        <name>softvol_free</name>
        <param>
          <type>snd_pcm_softvol_t *</type>
          <declname>svol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_softvol.c" line="397" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_softvol.c" bodystart="397" bodyend="406"/>
      </memberdef>
      <memberdef kind="function" id="pcm__softvol_8c_1a0cf271ea226ce6ee6913b5e0c8b02e5e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_pcm_softvol_close</definition>
        <argsstring>(snd_pcm_t *pcm)</argsstring>
        <name>snd_pcm_softvol_close</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_softvol.c" line="408" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_softvol.c" bodystart="408" bodyend="413"/>
      </memberdef>
      <memberdef kind="function" id="pcm__softvol_8c_1ae0ab5b9d523aee6c81af8daf808abf74" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_pcm_softvol_hw_refine_cprepare</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)</argsstring>
        <name>snd_pcm_softvol_hw_refine_cprepare</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_softvol.c" line="415" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_softvol.c" bodystart="415" bodyend="450"/>
      </memberdef>
      <memberdef kind="function" id="pcm__softvol_8c_1a169827e64c5998096d90af9d7dc3e308" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_pcm_softvol_hw_refine_sprepare</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *sparams)</argsstring>
        <name>snd_pcm_softvol_hw_refine_sprepare</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>sparams</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_softvol.c" line="452" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_softvol.c" bodystart="452" bodyend="464"/>
      </memberdef>
      <memberdef kind="function" id="pcm__softvol_8c_1ab9e77b150ff44fa30d52df885abe6e2d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int check_access_mask</definition>
        <argsstring>(snd_pcm_hw_params_t *src, snd_pcm_hw_params_t *dst)</argsstring>
        <name>check_access_mask</name>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_softvol.c" line="469" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_softvol.c" bodystart="469" bodyend="496"/>
      </memberdef>
      <memberdef kind="function" id="pcm__softvol_8c_1a961f3d2c7cf5a6f24cd4744823dbc464" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_pcm_softvol_hw_refine_schange</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_hw_params_t *sparams)</argsstring>
        <name>snd_pcm_softvol_hw_refine_schange</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>sparams</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_softvol.c" line="498" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_softvol.c" bodystart="498" bodyend="525"/>
      </memberdef>
      <memberdef kind="function" id="pcm__softvol_8c_1a72270a90168dfbf26be646e06422053a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_pcm_softvol_hw_refine_cchange</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_hw_params_t *sparams)</argsstring>
        <name>snd_pcm_softvol_hw_refine_cchange</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>sparams</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_softvol.c" line="527" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_softvol.c" bodystart="527" bodyend="554"/>
      </memberdef>
      <memberdef kind="function" id="pcm__softvol_8c_1a4ed5b942f89e9496df5d44437552b901" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_pcm_softvol_hw_refine</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)</argsstring>
        <name>snd_pcm_softvol_hw_refine</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_softvol.c" line="556" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_softvol.c" bodystart="556" bodyend="564"/>
      </memberdef>
      <memberdef kind="function" id="pcm__softvol_8c_1adf4e8ab7115ec13fca703872259a67e0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_pcm_softvol_hw_params</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)</argsstring>
        <name>snd_pcm_softvol_hw_params</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_softvol.c" line="566" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_softvol.c" bodystart="566" bodyend="588"/>
      </memberdef>
      <memberdef kind="function" id="pcm__softvol_8c_1a7012ffe89efe0a9beddc646e604c2853" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref></type>
        <definition>static snd_pcm_uframes_t snd_pcm_softvol_write_areas</definition>
        <argsstring>(snd_pcm_t *pcm, const snd_pcm_channel_area_t *areas, snd_pcm_uframes_t offset, snd_pcm_uframes_t size, const snd_pcm_channel_area_t *slave_areas, snd_pcm_uframes_t slave_offset, snd_pcm_uframes_t *slave_sizep)</argsstring>
        <name>snd_pcm_softvol_write_areas</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type>const <ref refid="structsnd__pcm__channel__area__t" kindref="compound">snd_pcm_channel_area_t</ref> *</type>
          <declname>areas</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref></type>
          <declname>offset</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type>const <ref refid="structsnd__pcm__channel__area__t" kindref="compound">snd_pcm_channel_area_t</ref> *</type>
          <declname>slave_areas</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref></type>
          <declname>slave_offset</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref> *</type>
          <declname>slave_sizep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_softvol.c" line="591" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_softvol.c" bodystart="591" bodyend="611"/>
      </memberdef>
      <memberdef kind="function" id="pcm__softvol_8c_1a05764a4b6aa1f645d5cbb536ad20037f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref></type>
        <definition>static snd_pcm_uframes_t snd_pcm_softvol_read_areas</definition>
        <argsstring>(snd_pcm_t *pcm, const snd_pcm_channel_area_t *areas, snd_pcm_uframes_t offset, snd_pcm_uframes_t size, const snd_pcm_channel_area_t *slave_areas, snd_pcm_uframes_t slave_offset, snd_pcm_uframes_t *slave_sizep)</argsstring>
        <name>snd_pcm_softvol_read_areas</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type>const <ref refid="structsnd__pcm__channel__area__t" kindref="compound">snd_pcm_channel_area_t</ref> *</type>
          <declname>areas</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref></type>
          <declname>offset</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type>const <ref refid="structsnd__pcm__channel__area__t" kindref="compound">snd_pcm_channel_area_t</ref> *</type>
          <declname>slave_areas</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref></type>
          <declname>slave_offset</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref> *</type>
          <declname>slave_sizep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_softvol.c" line="614" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_softvol.c" bodystart="614" bodyend="634"/>
      </memberdef>
      <memberdef kind="function" id="pcm__softvol_8c_1a796ddde45874a3dc576de20c399abd4f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void snd_pcm_softvol_dump</definition>
        <argsstring>(snd_pcm_t *pcm, snd_output_t *out)</argsstring>
        <name>snd_pcm_softvol_dump</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___output_1ga49729cc6454539495c1f5b6e95cd474a" kindref="member">snd_output_t</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_softvol.c" line="636" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_softvol.c" bodystart="636" bodyend="654"/>
      </memberdef>
      <memberdef kind="function" id="pcm__softvol_8c_1aed29b0008f196f33becddc2654e7b977" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int add_tlv_info</definition>
        <argsstring>(snd_pcm_softvol_t *svol, snd_ctl_elem_info_t *cinfo)</argsstring>
        <name>add_tlv_info</name>
        <param>
          <type>snd_pcm_softvol_t *</type>
          <declname>svol</declname>
        </param>
        <param>
          <type><ref refid="group___control_1ga2cae0bb76df919368e4ff9a7021dd3ab" kindref="member">snd_ctl_elem_info_t</ref> *</type>
          <declname>cinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_softvol.c" line="656" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_softvol.c" bodystart="656" bodyend="664"/>
      </memberdef>
      <memberdef kind="function" id="pcm__softvol_8c_1a786c11b8e0811eaa4fb7ea34646de141" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int add_user_ctl</definition>
        <argsstring>(snd_pcm_softvol_t *svol, snd_ctl_elem_info_t *cinfo, int count)</argsstring>
        <name>add_user_ctl</name>
        <param>
          <type>snd_pcm_softvol_t *</type>
          <declname>svol</declname>
        </param>
        <param>
          <type><ref refid="group___control_1ga2cae0bb76df919368e4ff9a7021dd3ab" kindref="member">snd_ctl_elem_info_t</ref> *</type>
          <declname>cinfo</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_softvol.c" line="666" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_softvol.c" bodystart="666" bodyend="691"/>
      </memberdef>
      <memberdef kind="function" id="pcm__softvol_8c_1ab997c6f169583ba12c410413155bcd78" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int softvol_load_control</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_softvol_t *svol, int ctl_card, snd_ctl_elem_id_t *ctl_id, int cchannels, double min_dB, double max_dB, int resolution)</argsstring>
        <name>softvol_load_control</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type>snd_pcm_softvol_t *</type>
          <declname>svol</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ctl_card</declname>
        </param>
        <param>
          <type><ref refid="group___control_1gad6c3746f1925bfec6a4fd0e913430e55" kindref="member">snd_ctl_elem_id_t</ref> *</type>
          <declname>ctl_id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cchannels</declname>
        </param>
        <param>
          <type>double</type>
          <declname>min_dB</declname>
        </param>
        <param>
          <type>double</type>
          <declname>max_dB</declname>
        </param>
        <param>
          <type>int</type>
          <declname>resolution</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_softvol.c" line="699" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_softvol.c" bodystart="699" bodyend="813"/>
      </memberdef>
      <memberdef kind="function" id="pcm__softvol_8c_1ad569db39824bb0a31c73dd9d4948a4b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_softvol_open</definition>
        <argsstring>(snd_pcm_t **pcmp, const char *name, snd_pcm_format_t sformat, int ctl_card, snd_ctl_elem_id_t *ctl_id, int cchannels, double min_dB, double max_dB, int resolution, snd_pcm_t *slave, int close_slave)</argsstring>
        <name>snd_pcm_softvol_open</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> **</type>
          <declname>pcmp</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gaa14b7f26877a812acbb39811364177f8" kindref="member">snd_pcm_format_t</ref></type>
          <declname>sformat</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ctl_card</declname>
        </param>
        <param>
          <type><ref refid="group___control_1gad6c3746f1925bfec6a4fd0e913430e55" kindref="member">snd_ctl_elem_id_t</ref> *</type>
          <declname>ctl_id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cchannels</declname>
        </param>
        <param>
          <type>double</type>
          <declname>min_dB</declname>
        </param>
        <param>
          <type>double</type>
          <declname>max_dB</declname>
        </param>
        <param>
          <type>int</type>
          <declname>resolution</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>slave</declname>
        </param>
        <param>
          <type>int</type>
          <declname>close_slave</declname>
        </param>
        <briefdescription>
<para>Creates a new SoftVolume PCM. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcmp</parametername>
</parameternamelist>
<parameterdescription>
<para>Returns created PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of PCM </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sformat</parametername>
</parameternamelist>
<parameterdescription>
<para>Slave format </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ctl_card</parametername>
</parameternamelist>
<parameterdescription>
<para>card index of the control </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ctl_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The control element </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cchannels</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM channels </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min_dB</parametername>
</parameternamelist>
<parameterdescription>
<para>minimal dB value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_dB</parametername>
</parameternamelist>
<parameterdescription>
<para>maximal dB value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>resolution</parametername>
</parameternamelist>
<parameterdescription>
<para>resolution of control </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>slave</parametername>
</parameternamelist>
<parameterdescription>
<para>Slave PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>close_slave</parametername>
</parameternamelist>
<parameterdescription>
<para>When set, the slave PCM handle is closed with copy PCM </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>zero</parametername>
</parameternamelist>
<parameterdescription>
<para>on success otherwise a negative error code </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="warning"><para>Using of this function might be dangerous in the sense of compatibility reasons. The prototype might be freely changed in future. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_softvol.c" line="851" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_softvol.c" bodystart="851" bodyend="919"/>
      </memberdef>
      <memberdef kind="function" id="group___plugin___s_d_k_1ga6cc0e84dc2822458b4ed163071a51ecd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_parse_control_id</definition>
        <argsstring>(snd_config_t *conf, snd_ctl_elem_id_t *ctl_id, int *cardp, int *cchannelsp, int *hwctlp)</argsstring>
        <name>snd_pcm_parse_control_id</name>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>conf</declname>
        </param>
        <param>
          <type><ref refid="group___control_1gad6c3746f1925bfec6a4fd0e913430e55" kindref="member">snd_ctl_elem_id_t</ref> *</type>
          <declname>ctl_id</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>cardp</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>cchannelsp</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>hwctlp</declname>
        </param>
        <briefdescription>
<para>Parse control element id from the config. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conf</parametername>
</parameternamelist>
<parameterdescription>
<para>the config tree to parse </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ctl_id</parametername>
</parameternamelist>
<parameterdescription>
<para>the pointer to store the resultant control element id </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cardp</parametername>
</parameternamelist>
<parameterdescription>
<para>the pointer to store the card index </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cchannelsp</parametername>
</parameternamelist>
<parameterdescription>
<para>the pointer to store the number of channels (optional) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hwctlp</parametername>
</parameternamelist>
<parameterdescription>
<para>the pointer to store the h/w control flag (optional) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, or a negative error code</para></simplesect>
This function parses the given config tree to retrieve the control element id and the card index. It&apos;s used by softvol. External PCM plugins can use this function for creating or assigining their controls.</para><para>cchannelsp and hwctlp arguments are optional. Set NULL if not necessary. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_softvol.c" line="922" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_misc.c" bodystart="737" bodyend="863"/>
      </memberdef>
      <memberdef kind="function" id="pcm__softvol_8c_1a4347460ac616c9a323681021c6498d0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _snd_pcm_softvol_open</definition>
        <argsstring>(snd_pcm_t **pcmp, const char *name, snd_config_t *root, snd_config_t *conf, snd_pcm_stream_t stream, int mode)</argsstring>
        <name>_snd_pcm_softvol_open</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> **</type>
          <declname>pcmp</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>root</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>conf</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gac23b43ff55add78638e503b9cc892c24" kindref="member">snd_pcm_stream_t</ref></type>
          <declname>stream</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Creates a new Soft Volume PCM. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcmp</parametername>
</parameternamelist>
<parameterdescription>
<para>Returns created PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of PCM </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>root</parametername>
</parameternamelist>
<parameterdescription>
<para>Root configuration node </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>conf</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration node with Soft Volume PCM description </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stream</parametername>
</parameternamelist>
<parameterdescription>
<para>Stream type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Stream mode </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>zero</parametername>
</parameternamelist>
<parameterdescription>
<para>on success otherwise a negative error code </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="warning"><para>Using of this function might be dangerous in the sense of compatibility reasons. The prototype might be freely changed in future. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_softvol.c" line="988" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_softvol.c" bodystart="988" bodyend="1108"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>PCM Soft Volume Plugin Interface. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Takashi Iwai <ulink url="mailto:tiwai@suse.de">tiwai@suse.de</ulink> </para></simplesect>
<simplesect kind="date"><para>2004 </para></simplesect>
</para>    </detaileddescription>
    <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_softvol.c"/>
  </compounddef>
</doxygen>
