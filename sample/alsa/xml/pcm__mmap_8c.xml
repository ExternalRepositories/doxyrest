<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="pcm__mmap_8c" kind="file" language="C++">
    <compoundname>pcm_mmap.c</compoundname>
    <includes local="yes">config.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">malloc.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">sys/poll.h</includes>
    <includes local="no">sys/mman.h</includes>
    <includes local="yes">pcm_local.h</includes>
    <incdepgraph>
      <node id="542">
        <label>/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_mmap.c</label>
        <link refid="pcm__mmap_8c"/>
        <childnode refid="543" relation="include">
        </childnode>
        <childnode refid="544" relation="include">
        </childnode>
        <childnode refid="545" relation="include">
        </childnode>
        <childnode refid="546" relation="include">
        </childnode>
        <childnode refid="547" relation="include">
        </childnode>
        <childnode refid="548" relation="include">
        </childnode>
        <childnode refid="549" relation="include">
        </childnode>
      </node>
      <node id="548">
        <label>sys/mman.h</label>
      </node>
      <node id="547">
        <label>sys/poll.h</label>
      </node>
      <node id="545">
        <label>malloc.h</label>
      </node>
      <node id="546">
        <label>string.h</label>
      </node>
      <node id="549">
        <label>pcm_local.h</label>
      </node>
      <node id="543">
        <label>config.h</label>
      </node>
      <node id="544">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="pcm__mmap_8c_1adf0d90c384713fe96e82b3ddb81f3f0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_pcm_mmap_appl_backward</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_uframes_t frames)</argsstring>
        <name>snd_pcm_mmap_appl_backward</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref></type>
          <declname>frames</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_mmap.c" line="32" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_mmap.c" bodystart="32" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="pcm__mmap_8c_1a4d847b0de45395888f2f8a62b8bfdabb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_pcm_mmap_appl_forward</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_uframes_t frames)</argsstring>
        <name>snd_pcm_mmap_appl_forward</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref></type>
          <declname>frames</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_mmap.c" line="41" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_mmap.c" bodystart="41" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="pcm__mmap_8c_1a255d707e0f5f35ac13e5dfdea46f6d82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_pcm_mmap_hw_backward</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_uframes_t frames)</argsstring>
        <name>snd_pcm_mmap_hw_backward</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref></type>
          <declname>frames</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_mmap.c" line="50" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_mmap.c" bodystart="50" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="pcm__mmap_8c_1a901098cecc3b6e3cfda87547b641b85e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_pcm_mmap_hw_forward</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_uframes_t frames)</argsstring>
        <name>snd_pcm_mmap_hw_forward</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref></type>
          <declname>frames</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_mmap.c" line="59" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_mmap.c" bodystart="59" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="pcm__mmap_8c_1aeba22f0c3e8304363840509cfd7750ef" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___p_c_m_1ga71cdfa37e258d2210b8bd0216bf0c36c" kindref="member">snd_pcm_sframes_t</ref></type>
        <definition>static snd_pcm_sframes_t snd_pcm_mmap_write_areas</definition>
        <argsstring>(snd_pcm_t *pcm, const snd_pcm_channel_area_t *areas, snd_pcm_uframes_t offset, snd_pcm_uframes_t size)</argsstring>
        <name>snd_pcm_mmap_write_areas</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type>const <ref refid="structsnd__pcm__channel__area__t" kindref="compound">snd_pcm_channel_area_t</ref> *</type>
          <declname>areas</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref></type>
          <declname>offset</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_mmap.c" line="68" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_mmap.c" bodystart="68" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="pcm__mmap_8c_1accbe1f94b69fa0b0a30da8f21931297d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___p_c_m_1ga71cdfa37e258d2210b8bd0216bf0c36c" kindref="member">snd_pcm_sframes_t</ref></type>
        <definition>static snd_pcm_sframes_t snd_pcm_mmap_read_areas</definition>
        <argsstring>(snd_pcm_t *pcm, const snd_pcm_channel_area_t *areas, snd_pcm_uframes_t offset, snd_pcm_uframes_t size)</argsstring>
        <name>snd_pcm_mmap_read_areas</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type>const <ref refid="structsnd__pcm__channel__area__t" kindref="compound">snd_pcm_channel_area_t</ref> *</type>
          <declname>areas</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref></type>
          <declname>offset</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_mmap.c" line="100" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_mmap.c" bodystart="100" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___direct_1ga5a9ee8e1e764b12da6d54dfa195f7c52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___p_c_m_1ga71cdfa37e258d2210b8bd0216bf0c36c" kindref="member">snd_pcm_sframes_t</ref></type>
        <definition>snd_pcm_sframes_t snd_pcm_mmap_writei</definition>
        <argsstring>(snd_pcm_t *pcm, const void *buffer, snd_pcm_uframes_t size)</argsstring>
        <name>snd_pcm_mmap_writei</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Write interleaved frames to a PCM using direct buffer (mmap) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>frames containing buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>frames to be written </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a positive number of frames actually written otherwise a negative error code </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>-EBADFD</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM is not in the right state (<ref refid="group___p_c_m_1gga61ac499cb3701ce536d4d83725908860a3eb4a3b75c7d2adb22f1829f3f738b27" kindref="member">SND_PCM_STATE_PREPARED</ref> or <ref refid="group___p_c_m_1gga61ac499cb3701ce536d4d83725908860a86f6fbc796881f19fde0e1957f878147" kindref="member">SND_PCM_STATE_RUNNING</ref>) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EPIPE</parametername>
</parameternamelist>
<parameterdescription>
<para>an underrun occurred </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ESTRPIPE</parametername>
</parameternamelist>
<parameterdescription>
<para>a suspend event occurred (stream is suspended and waiting for an application recovery)</para></parameterdescription>
</parameteritem>
</parameterlist>
If the blocking behaviour is selected, then routine waits until all requested bytes are played or put to the playback ring buffer. The count of bytes can be less only if a signal or underrun occurred.</para><para>If the non-blocking behaviour is selected, then routine doesn&apos;t wait at all. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_mmap.c" line="149" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_mmap.c" bodystart="149" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___direct_1ga092b1a7f387e9fc2977649bfd43b0958" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___p_c_m_1ga71cdfa37e258d2210b8bd0216bf0c36c" kindref="member">snd_pcm_sframes_t</ref></type>
        <definition>snd_pcm_sframes_t snd_pcm_mmap_writen</definition>
        <argsstring>(snd_pcm_t *pcm, void **bufs, snd_pcm_uframes_t size)</argsstring>
        <name>snd_pcm_mmap_writen</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type>void **</type>
          <declname>bufs</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Write non interleaved frames to a PCM using direct buffer (mmap) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufs</parametername>
</parameternamelist>
<parameterdescription>
<para>frames containing buffers (one for each channel) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>frames to be written </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a positive number of frames actually written otherwise a negative error code </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>-EBADFD</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM is not in the right state (<ref refid="group___p_c_m_1gga61ac499cb3701ce536d4d83725908860a3eb4a3b75c7d2adb22f1829f3f738b27" kindref="member">SND_PCM_STATE_PREPARED</ref> or <ref refid="group___p_c_m_1gga61ac499cb3701ce536d4d83725908860a86f6fbc796881f19fde0e1957f878147" kindref="member">SND_PCM_STATE_RUNNING</ref>) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EPIPE</parametername>
</parameternamelist>
<parameterdescription>
<para>an underrun occurred </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ESTRPIPE</parametername>
</parameternamelist>
<parameterdescription>
<para>a suspend event occurred (stream is suspended and waiting for an application recovery)</para></parameterdescription>
</parameteritem>
</parameterlist>
If the blocking behaviour is selected, then routine waits until all requested bytes are played or put to the playback ring buffer. The count of bytes can be less only if a signal or underrun occurred.</para><para>If the non-blocking behaviour is selected, then routine doesn&apos;t wait at all. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_mmap.c" line="174" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_mmap.c" bodystart="174" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___direct_1ga24b6c538c8d7ddd0776ee65f8fb909eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___p_c_m_1ga71cdfa37e258d2210b8bd0216bf0c36c" kindref="member">snd_pcm_sframes_t</ref></type>
        <definition>snd_pcm_sframes_t snd_pcm_mmap_readi</definition>
        <argsstring>(snd_pcm_t *pcm, void *buffer, snd_pcm_uframes_t size)</argsstring>
        <name>snd_pcm_mmap_readi</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Read interleaved frames from a PCM using direct buffer (mmap) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>frames containing buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>frames to be written </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a positive number of frames actually read otherwise a negative error code </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>-EBADFD</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM is not in the right state (<ref refid="group___p_c_m_1gga61ac499cb3701ce536d4d83725908860a3eb4a3b75c7d2adb22f1829f3f738b27" kindref="member">SND_PCM_STATE_PREPARED</ref> or <ref refid="group___p_c_m_1gga61ac499cb3701ce536d4d83725908860a86f6fbc796881f19fde0e1957f878147" kindref="member">SND_PCM_STATE_RUNNING</ref>) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EPIPE</parametername>
</parameternamelist>
<parameterdescription>
<para>an overrun occurred </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ESTRPIPE</parametername>
</parameternamelist>
<parameterdescription>
<para>a suspend event occurred (stream is suspended and waiting for an application recovery)</para></parameterdescription>
</parameteritem>
</parameterlist>
If the blocking behaviour was selected, then routine waits until all requested bytes are filled. The count of bytes can be less only if a signal or underrun occurred.</para><para>If the non-blocking behaviour is selected, then routine doesn&apos;t wait at all. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_mmap.c" line="199" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_mmap.c" bodystart="199" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___direct_1ga29ce9af60eafb67f0303418a176bf3ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___p_c_m_1ga71cdfa37e258d2210b8bd0216bf0c36c" kindref="member">snd_pcm_sframes_t</ref></type>
        <definition>snd_pcm_sframes_t snd_pcm_mmap_readn</definition>
        <argsstring>(snd_pcm_t *pcm, void **bufs, snd_pcm_uframes_t size)</argsstring>
        <name>snd_pcm_mmap_readn</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type>void **</type>
          <declname>bufs</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Read non interleaved frames to a PCM using direct buffer (mmap) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufs</parametername>
</parameternamelist>
<parameterdescription>
<para>frames containing buffers (one for each channel) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>frames to be written </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a positive number of frames actually read otherwise a negative error code </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>-EBADFD</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM is not in the right state (<ref refid="group___p_c_m_1gga61ac499cb3701ce536d4d83725908860a3eb4a3b75c7d2adb22f1829f3f738b27" kindref="member">SND_PCM_STATE_PREPARED</ref> or <ref refid="group___p_c_m_1gga61ac499cb3701ce536d4d83725908860a86f6fbc796881f19fde0e1957f878147" kindref="member">SND_PCM_STATE_RUNNING</ref>) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-EPIPE</parametername>
</parameternamelist>
<parameterdescription>
<para>an overrun occurred </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-ESTRPIPE</parametername>
</parameternamelist>
<parameterdescription>
<para>a suspend event occurred (stream is suspended and waiting for an application recovery)</para></parameterdescription>
</parameteritem>
</parameterlist>
If the blocking behaviour was selected, then routine waits until all requested bytes are filled. The count of bytes can be less only if a signal or underrun occurred.</para><para>If the non-blocking behaviour is selected, then routine doesn&apos;t wait at all. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_mmap.c" line="224" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_mmap.c" bodystart="224" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="pcm__mmap_8c_1af0e27ae26bf18bb9698a8e4a6c3712d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_channel_info_shm</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_channel_info_t *info, int shmid)</argsstring>
        <name>snd_pcm_channel_info_shm</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type>snd_pcm_channel_info_t *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>int</type>
          <declname>shmid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_mmap.c" line="232" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_mmap.c" bodystart="232" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="pcm__mmap_8c_1a1d8350517036daaf9a9154720dbc737b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_mmap</definition>
        <argsstring>(snd_pcm_t *pcm)</argsstring>
        <name>snd_pcm_mmap</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_mmap.c" line="259" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_mmap.c" bodystart="259" bodyend="436"/>
      </memberdef>
      <memberdef kind="function" id="pcm__mmap_8c_1a201e04efb9c9adb9299bf665931ee722" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_munmap</definition>
        <argsstring>(snd_pcm_t *pcm)</argsstring>
        <name>snd_pcm_munmap</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_mmap.c" line="438" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_mmap.c" bodystart="438" bodyend="514"/>
      </memberdef>
      <memberdef kind="function" id="pcm__mmap_8c_1a71a994458b91c2f2f95b183d8649301a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___p_c_m_1ga71cdfa37e258d2210b8bd0216bf0c36c" kindref="member">snd_pcm_sframes_t</ref></type>
        <definition>snd_pcm_sframes_t snd_pcm_write_mmap</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_uframes_t offset, snd_pcm_uframes_t size)</argsstring>
        <name>snd_pcm_write_mmap</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref></type>
          <declname>offset</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_mmap.c" line="517" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_mmap.c" bodystart="517" bodyend="570"/>
      </memberdef>
      <memberdef kind="function" id="pcm__mmap_8c_1ad20489dc18c4a32bb630f7ad0c8ab4fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___p_c_m_1ga71cdfa37e258d2210b8bd0216bf0c36c" kindref="member">snd_pcm_sframes_t</ref></type>
        <definition>snd_pcm_sframes_t snd_pcm_read_mmap</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_uframes_t offset, snd_pcm_uframes_t size)</argsstring>
        <name>snd_pcm_read_mmap</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref></type>
          <declname>offset</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_mmap.c" line="573" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_mmap.c" bodystart="573" bodyend="626"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_mmap.c"/>
  </compounddef>
</doxygen>
