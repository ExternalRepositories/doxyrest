<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="pcm__ladspa_8c" kind="file" language="C++">
    <compoundname>pcm_ladspa.c</compoundname>
    <includes local="no">dirent.h</includes>
    <includes local="no">locale.h</includes>
    <includes local="no">math.h</includes>
    <includes local="yes">pcm_local.h</includes>
    <includes local="yes">pcm_plugin.h</includes>
    <includes local="yes">ladspa.h</includes>
    <incdepgraph>
      <node id="511">
        <label>pcm_plugin.h</label>
      </node>
      <node id="506">
        <label>/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c</label>
        <link refid="pcm__ladspa_8c"/>
        <childnode refid="507" relation="include">
        </childnode>
        <childnode refid="508" relation="include">
        </childnode>
        <childnode refid="509" relation="include">
        </childnode>
        <childnode refid="510" relation="include">
        </childnode>
        <childnode refid="511" relation="include">
        </childnode>
        <childnode refid="512" relation="include">
        </childnode>
      </node>
      <node id="512">
        <label>ladspa.h</label>
      </node>
      <node id="509">
        <label>math.h</label>
      </node>
      <node id="510">
        <label>pcm_local.h</label>
      </node>
      <node id="508">
        <label>locale.h</label>
      </node>
      <node id="507">
        <label>dirent.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="pcm__ladspa_8c_1a8ec5a42d3ec036ed5d2fdd19dd67587b" prot="public" static="yes" mutable="no">
        <type>const snd_pcm_ops_t</type>
        <definition>const snd_pcm_ops_t snd_pcm_ladspa_ops</definition>
        <argsstring></argsstring>
        <name>snd_pcm_ladspa_ops</name>
        <initializer>= {
	.close = snd_pcm_ladspa_close,
	.info = snd_pcm_generic_info,
	.hw_refine = snd_pcm_ladspa_hw_refine,
	.hw_params = snd_pcm_ladspa_hw_params,
	.hw_free = snd_pcm_ladspa_hw_free,
	.sw_params = snd_pcm_generic_sw_params,
	.channel_info = snd_pcm_generic_channel_info,
	.dump = snd_pcm_ladspa_dump,
	.nonblock = snd_pcm_generic_nonblock,
	.async = snd_pcm_generic_async,
	.mmap = snd_pcm_generic_mmap,
	.munmap = snd_pcm_generic_munmap,
	.query_chmaps = snd_pcm_generic_query_chmaps,
	.get_chmap = snd_pcm_generic_get_chmap,
	.set_chmap = snd_pcm_generic_set_chmap,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" line="1068" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" bodystart="1068" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="pcm__ladspa_8c_1a5d81cd6274df4d843a83e767e57c7ff2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>static unsigned int snd_pcm_ladspa_count_ports</definition>
        <argsstring>(snd_pcm_ladspa_plugin_t *lplug, LADSPA_PortDescriptor pdesc)</argsstring>
        <name>snd_pcm_ladspa_count_ports</name>
        <param>
          <type>snd_pcm_ladspa_plugin_t *</type>
          <declname>lplug</declname>
        </param>
        <param>
          <type>LADSPA_PortDescriptor</type>
          <declname>pdesc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" line="113" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" bodystart="113" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="pcm__ladspa_8c_1afc1df479cbd93e41c23b1ca11d4948ba" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_pcm_ladspa_find_port</definition>
        <argsstring>(unsigned int *res, snd_pcm_ladspa_plugin_t *lplug, LADSPA_PortDescriptor pdesc, unsigned int port_idx)</argsstring>
        <name>snd_pcm_ladspa_find_port</name>
        <param>
          <type>unsigned int *</type>
          <declname>res</declname>
        </param>
        <param>
          <type>snd_pcm_ladspa_plugin_t *</type>
          <declname>lplug</declname>
        </param>
        <param>
          <type>LADSPA_PortDescriptor</type>
          <declname>pdesc</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>port_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" line="124" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" bodystart="124" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="pcm__ladspa_8c_1af1338278db54d511d9815237bd8aca98" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_pcm_ladspa_find_sport</definition>
        <argsstring>(unsigned int *res, snd_pcm_ladspa_plugin_t *lplug, LADSPA_PortDescriptor pdesc, const char *port_name)</argsstring>
        <name>snd_pcm_ladspa_find_sport</name>
        <param>
          <type>unsigned int *</type>
          <declname>res</declname>
        </param>
        <param>
          <type>snd_pcm_ladspa_plugin_t *</type>
          <declname>lplug</declname>
        </param>
        <param>
          <type>LADSPA_PortDescriptor</type>
          <declname>pdesc</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>port_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" line="142" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" bodystart="142" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="pcm__ladspa_8c_1ae38164d8faecf2a46234fab9baef8097" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_pcm_ladspa_find_port_idx</definition>
        <argsstring>(unsigned int *res, snd_pcm_ladspa_plugin_t *lplug, LADSPA_PortDescriptor pdesc, unsigned int port)</argsstring>
        <name>snd_pcm_ladspa_find_port_idx</name>
        <param>
          <type>unsigned int *</type>
          <declname>res</declname>
        </param>
        <param>
          <type>snd_pcm_ladspa_plugin_t *</type>
          <declname>lplug</declname>
        </param>
        <param>
          <type>LADSPA_PortDescriptor</type>
          <declname>pdesc</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" line="158" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" bodystart="158" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="pcm__ladspa_8c_1ab5c9ed2d034e694f66b73f3b9ca1cf2d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void snd_pcm_ladspa_free_io</definition>
        <argsstring>(snd_pcm_ladspa_plugin_io_t *io)</argsstring>
        <name>snd_pcm_ladspa_free_io</name>
        <param>
          <type>snd_pcm_ladspa_plugin_io_t *</type>
          <declname>io</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" line="175" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" bodystart="175" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="pcm__ladspa_8c_1a854c8a67749e967f167e2f26a1ea8453" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void snd_pcm_ladspa_free_plugins</definition>
        <argsstring>(struct list_head *plugins)</argsstring>
        <name>snd_pcm_ladspa_free_plugins</name>
        <param>
          <type>struct list_head *</type>
          <declname>plugins</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" line="181" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" bodystart="181" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="pcm__ladspa_8c_1ac16d9fa6834f152c8a52d783293a4cb9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void snd_pcm_ladspa_free</definition>
        <argsstring>(snd_pcm_ladspa_t *ladspa)</argsstring>
        <name>snd_pcm_ladspa_free</name>
        <param>
          <type>snd_pcm_ladspa_t *</type>
          <declname>ladspa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" line="195" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" bodystart="195" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="pcm__ladspa_8c_1ae7596632fa9b564adc7208c9bf4de44a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_pcm_ladspa_close</definition>
        <argsstring>(snd_pcm_t *pcm)</argsstring>
        <name>snd_pcm_ladspa_close</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" line="208" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" bodystart="208" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="pcm__ladspa_8c_1aecd766f7511032e46765d4b08fba8aed" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_pcm_ladspa_hw_refine_cprepare</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)</argsstring>
        <name>snd_pcm_ladspa_hw_refine_cprepare</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" line="216" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" bodystart="216" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="pcm__ladspa_8c_1a20d9c3035e0699244ac5ffeb73b1651e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_pcm_ladspa_hw_refine_sprepare</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *sparams)</argsstring>
        <name>snd_pcm_ladspa_hw_refine_sprepare</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>sparams</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" line="240" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" bodystart="240" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="pcm__ladspa_8c_1aab15d5c2f9eac2bdd111416ca3970365" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_pcm_ladspa_hw_refine_schange</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_hw_params_t *sparams)</argsstring>
        <name>snd_pcm_ladspa_hw_refine_schange</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>sparams</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" line="254" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" bodystart="254" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="pcm__ladspa_8c_1a613a2975da0303970cf9411531a8d456" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_pcm_ladspa_hw_refine_cchange</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params, snd_pcm_hw_params_t *sparams)</argsstring>
        <name>snd_pcm_ladspa_hw_refine_cchange</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>sparams</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" line="272" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" bodystart="272" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="pcm__ladspa_8c_1a0bd53a3f1d462ef828dbe1d5b77b11cb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_pcm_ladspa_hw_refine</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)</argsstring>
        <name>snd_pcm_ladspa_hw_refine</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" line="290" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" bodystart="290" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="pcm__ladspa_8c_1a32e443dd22b63ab7e8d41f34268c425f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_pcm_ladspa_hw_params</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)</argsstring>
        <name>snd_pcm_ladspa_hw_params</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" line="300" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" bodystart="300" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="pcm__ladspa_8c_1a016ebabac6ac4cc086c3939872b49afd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void snd_pcm_ladspa_free_eps</definition>
        <argsstring>(snd_pcm_ladspa_eps_t *eps)</argsstring>
        <name>snd_pcm_ladspa_free_eps</name>
        <param>
          <type>snd_pcm_ladspa_eps_t *</type>
          <declname>eps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" line="313" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" bodystart="313" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="pcm__ladspa_8c_1a1c2209217c51b7ef6b83202248b8ca6b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void snd_pcm_ladspa_free_instances</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_ladspa_t *ladspa, int cleanup)</argsstring>
        <name>snd_pcm_ladspa_free_instances</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type>snd_pcm_ladspa_t *</type>
          <declname>ladspa</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cleanup</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" line="319" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" bodystart="319" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="pcm__ladspa_8c_1af554b6231b699c40b8d8d97e0ea68c6d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_pcm_ladspa_add_to_carray</definition>
        <argsstring>(snd_pcm_ladspa_array_t *array, unsigned int idx, unsigned int val)</argsstring>
        <name>snd_pcm_ladspa_add_to_carray</name>
        <param>
          <type>snd_pcm_ladspa_array_t *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" line="361" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" bodystart="361" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="pcm__ladspa_8c_1a93885f25ff53ed669690858496385af2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_pcm_ladspa_add_to_array</definition>
        <argsstring>(snd_pcm_ladspa_array_t *array, unsigned int idx, unsigned int val)</argsstring>
        <name>snd_pcm_ladspa_add_to_array</name>
        <param>
          <type>snd_pcm_ladspa_array_t *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" line="386" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" bodystart="386" bodyend="404"/>
      </memberdef>
      <memberdef kind="function" id="pcm__ladspa_8c_1abb2ee2e1ae9e82723f93dc64ce8c5c54" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_pcm_ladspa_connect_plugin1</definition>
        <argsstring>(snd_pcm_ladspa_plugin_t *plugin, snd_pcm_ladspa_plugin_io_t *io, snd_pcm_ladspa_eps_t *eps)</argsstring>
        <name>snd_pcm_ladspa_connect_plugin1</name>
        <param>
          <type>snd_pcm_ladspa_plugin_t *</type>
          <declname>plugin</declname>
        </param>
        <param>
          <type>snd_pcm_ladspa_plugin_io_t *</type>
          <declname>io</declname>
        </param>
        <param>
          <type>snd_pcm_ladspa_eps_t *</type>
          <declname>eps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" line="406" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" bodystart="406" bodyend="442"/>
      </memberdef>
      <memberdef kind="function" id="pcm__ladspa_8c_1ae82e9236db5cc3b1cb6919cbc5fea9ed" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_pcm_ladspa_connect_plugin</definition>
        <argsstring>(snd_pcm_ladspa_plugin_t *plugin, snd_pcm_ladspa_instance_t *instance)</argsstring>
        <name>snd_pcm_ladspa_connect_plugin</name>
        <param>
          <type>snd_pcm_ladspa_plugin_t *</type>
          <declname>plugin</declname>
        </param>
        <param>
          <type>snd_pcm_ladspa_instance_t *</type>
          <declname>instance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" line="444" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" bodystart="444" bodyend="456"/>
      </memberdef>
      <memberdef kind="function" id="pcm__ladspa_8c_1a93d3d5ece98fb1c984aad9bce714d7d5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_pcm_ladspa_connect_plugin_duplicate1</definition>
        <argsstring>(snd_pcm_ladspa_plugin_t *plugin, snd_pcm_ladspa_plugin_io_t *io, snd_pcm_ladspa_eps_t *eps, unsigned int idx)</argsstring>
        <name>snd_pcm_ladspa_connect_plugin_duplicate1</name>
        <param>
          <type>snd_pcm_ladspa_plugin_t *</type>
          <declname>plugin</declname>
        </param>
        <param>
          <type>snd_pcm_ladspa_plugin_io_t *</type>
          <declname>io</declname>
        </param>
        <param>
          <type>snd_pcm_ladspa_eps_t *</type>
          <declname>eps</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" line="458" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" bodystart="458" bodyend="487"/>
      </memberdef>
      <memberdef kind="function" id="pcm__ladspa_8c_1a363aa18912fcaea8d45ebd213106883f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_pcm_ladspa_connect_plugin_duplicate</definition>
        <argsstring>(snd_pcm_ladspa_plugin_t *plugin, snd_pcm_ladspa_plugin_io_t *in_io, snd_pcm_ladspa_plugin_io_t *out_io, snd_pcm_ladspa_instance_t *instance, unsigned int idx)</argsstring>
        <name>snd_pcm_ladspa_connect_plugin_duplicate</name>
        <param>
          <type>snd_pcm_ladspa_plugin_t *</type>
          <declname>plugin</declname>
        </param>
        <param>
          <type>snd_pcm_ladspa_plugin_io_t *</type>
          <declname>in_io</declname>
        </param>
        <param>
          <type>snd_pcm_ladspa_plugin_io_t *</type>
          <declname>out_io</declname>
        </param>
        <param>
          <type>snd_pcm_ladspa_instance_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" line="489" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" bodystart="489" bodyend="504"/>
      </memberdef>
      <memberdef kind="function" id="pcm__ladspa_8c_1a602404683fd8ff155620ed744f6cbd1b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void snd_pcm_ladspa_get_default_cvalue</definition>
        <argsstring>(const LADSPA_Descriptor *desc, unsigned int port, LADSPA_Data *val)</argsstring>
        <name>snd_pcm_ladspa_get_default_cvalue</name>
        <param>
          <type>const LADSPA_Descriptor *</type>
          <declname>desc</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>port</declname>
        </param>
        <param>
          <type>LADSPA_Data *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" line="506" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" bodystart="506" bodyend="566"/>
      </memberdef>
      <memberdef kind="function" id="pcm__ladspa_8c_1a026d4f2790a18ee56c9e8f481ba910f6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_pcm_ladspa_connect_controls</definition>
        <argsstring>(snd_pcm_ladspa_plugin_t *plugin, snd_pcm_ladspa_plugin_io_t *io, snd_pcm_ladspa_instance_t *instance)</argsstring>
        <name>snd_pcm_ladspa_connect_controls</name>
        <param>
          <type>snd_pcm_ladspa_plugin_t *</type>
          <declname>plugin</declname>
        </param>
        <param>
          <type>snd_pcm_ladspa_plugin_io_t *</type>
          <declname>io</declname>
        </param>
        <param>
          <type>snd_pcm_ladspa_instance_t *</type>
          <declname>instance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" line="568" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" bodystart="568" bodyend="586"/>
      </memberdef>
      <memberdef kind="function" id="pcm__ladspa_8c_1ae29c2478ef0b7616763561b479df219c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_pcm_ladspa_check_connect</definition>
        <argsstring>(snd_pcm_ladspa_plugin_t *plugin, snd_pcm_ladspa_plugin_io_t *io, snd_pcm_ladspa_eps_t *eps, unsigned int depth)</argsstring>
        <name>snd_pcm_ladspa_check_connect</name>
        <param>
          <type>snd_pcm_ladspa_plugin_t *</type>
          <declname>plugin</declname>
        </param>
        <param>
          <type>snd_pcm_ladspa_plugin_io_t *</type>
          <declname>io</declname>
        </param>
        <param>
          <type>snd_pcm_ladspa_eps_t *</type>
          <declname>eps</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" line="588" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" bodystart="588" bodyend="609"/>
      </memberdef>
      <memberdef kind="function" id="pcm__ladspa_8c_1abbf450fc266ccbcdf882713b0310f9b1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_pcm_ladspa_allocate_instances</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_ladspa_t *ladspa)</argsstring>
        <name>snd_pcm_ladspa_allocate_instances</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type>snd_pcm_ladspa_t *</type>
          <declname>ladspa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" line="611" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" bodystart="611" bodyend="677"/>
      </memberdef>
      <memberdef kind="function" id="pcm__ladspa_8c_1a7aadaad4563e0afe9bd9beece8188bdd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LADSPA_Data *</type>
        <definition>static LADSPA_Data* snd_pcm_ladspa_allocate_zero</definition>
        <argsstring>(snd_pcm_ladspa_t *ladspa, unsigned int idx)</argsstring>
        <name>snd_pcm_ladspa_allocate_zero</name>
        <param>
          <type>snd_pcm_ladspa_t *</type>
          <declname>ladspa</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" line="679" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" bodystart="679" bodyend="684"/>
      </memberdef>
      <memberdef kind="function" id="pcm__ladspa_8c_1ad84f861be723236c0e4976d4bcf624c9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_pcm_ladspa_allocate_memory</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_ladspa_t *ladspa)</argsstring>
        <name>snd_pcm_ladspa_allocate_memory</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type>snd_pcm_ladspa_t *</type>
          <declname>ladspa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" line="686" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" bodystart="686" bodyend="821"/>
      </memberdef>
      <memberdef kind="function" id="pcm__ladspa_8c_1a0217954418ba52c720af2cac63beed38" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_pcm_ladspa_init</definition>
        <argsstring>(snd_pcm_t *pcm)</argsstring>
        <name>snd_pcm_ladspa_init</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" line="823" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" bodystart="823" bodyend="840"/>
      </memberdef>
      <memberdef kind="function" id="pcm__ladspa_8c_1ab4acb3387c3422c5cae33ad654c71cc3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_pcm_ladspa_hw_free</definition>
        <argsstring>(snd_pcm_t *pcm)</argsstring>
        <name>snd_pcm_ladspa_hw_free</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" line="842" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" bodystart="842" bodyend="848"/>
      </memberdef>
      <memberdef kind="function" id="pcm__ladspa_8c_1ad3bd11851e373f24977fee2c3c0d827c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref></type>
        <definition>static snd_pcm_uframes_t snd_pcm_ladspa_write_areas</definition>
        <argsstring>(snd_pcm_t *pcm, const snd_pcm_channel_area_t *areas, snd_pcm_uframes_t offset, snd_pcm_uframes_t size, const snd_pcm_channel_area_t *slave_areas, snd_pcm_uframes_t slave_offset, snd_pcm_uframes_t *slave_sizep)</argsstring>
        <name>snd_pcm_ladspa_write_areas</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type>const <ref refid="structsnd__pcm__channel__area__t" kindref="compound">snd_pcm_channel_area_t</ref> *</type>
          <declname>areas</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref></type>
          <declname>offset</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type>const <ref refid="structsnd__pcm__channel__area__t" kindref="compound">snd_pcm_channel_area_t</ref> *</type>
          <declname>slave_areas</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref></type>
          <declname>slave_offset</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref> *</type>
          <declname>slave_sizep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" line="851" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" bodystart="851" bodyend="909"/>
      </memberdef>
      <memberdef kind="function" id="pcm__ladspa_8c_1a91f9a7ce9c09911a9f4cb675ad1d6df0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref></type>
        <definition>static snd_pcm_uframes_t snd_pcm_ladspa_read_areas</definition>
        <argsstring>(snd_pcm_t *pcm, const snd_pcm_channel_area_t *areas, snd_pcm_uframes_t offset, snd_pcm_uframes_t size, const snd_pcm_channel_area_t *slave_areas, snd_pcm_uframes_t slave_offset, snd_pcm_uframes_t *slave_sizep)</argsstring>
        <name>snd_pcm_ladspa_read_areas</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type>const <ref refid="structsnd__pcm__channel__area__t" kindref="compound">snd_pcm_channel_area_t</ref> *</type>
          <declname>areas</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref></type>
          <declname>offset</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type>const <ref refid="structsnd__pcm__channel__area__t" kindref="compound">snd_pcm_channel_area_t</ref> *</type>
          <declname>slave_areas</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref></type>
          <declname>slave_offset</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref> *</type>
          <declname>slave_sizep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" line="912" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" bodystart="912" bodyend="970"/>
      </memberdef>
      <memberdef kind="function" id="pcm__ladspa_8c_1a1f9761114aa912d4e66e7d0e0839fe57" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void snd_pcm_ladspa_dump_direction</definition>
        <argsstring>(snd_pcm_ladspa_plugin_t *plugin, snd_pcm_ladspa_plugin_io_t *io, snd_output_t *out)</argsstring>
        <name>snd_pcm_ladspa_dump_direction</name>
        <param>
          <type>snd_pcm_ladspa_plugin_t *</type>
          <declname>plugin</declname>
        </param>
        <param>
          <type>snd_pcm_ladspa_plugin_io_t *</type>
          <declname>io</declname>
        </param>
        <param>
          <type><ref refid="group___output_1ga49729cc6454539495c1f5b6e95cd474a" kindref="member">snd_output_t</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" line="972" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" bodystart="972" bodyend="997"/>
      </memberdef>
      <memberdef kind="function" id="pcm__ladspa_8c_1adbcc807e46772499e3bd88d6d03352e7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void snd_pcm_ladspa_dump_array</definition>
        <argsstring>(snd_output_t *out, snd_pcm_ladspa_array_t *array, snd_pcm_ladspa_plugin_t *plugin)</argsstring>
        <name>snd_pcm_ladspa_dump_array</name>
        <param>
          <type><ref refid="group___output_1ga49729cc6454539495c1f5b6e95cd474a" kindref="member">snd_output_t</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>snd_pcm_ladspa_array_t *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>snd_pcm_ladspa_plugin_t *</type>
          <declname>plugin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" line="999" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" bodystart="999" bodyend="1019"/>
      </memberdef>
      <memberdef kind="function" id="pcm__ladspa_8c_1a17eb0f7211be980a0353b7fdb9d10397" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void snd_pcm_ladspa_plugins_dump</definition>
        <argsstring>(struct list_head *list, snd_output_t *out)</argsstring>
        <name>snd_pcm_ladspa_plugins_dump</name>
        <param>
          <type>struct list_head *</type>
          <declname>list</declname>
        </param>
        <param>
          <type><ref refid="group___output_1ga49729cc6454539495c1f5b6e95cd474a" kindref="member">snd_output_t</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" line="1021" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" bodystart="1021" bodyend="1049"/>
      </memberdef>
      <memberdef kind="function" id="pcm__ladspa_8c_1a4c5e35a1f0d68a1ffaaa94bd16d02d74" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void snd_pcm_ladspa_dump</definition>
        <argsstring>(snd_pcm_t *pcm, snd_output_t *out)</argsstring>
        <name>snd_pcm_ladspa_dump</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___output_1ga49729cc6454539495c1f5b6e95cd474a" kindref="member">snd_output_t</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" line="1051" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" bodystart="1051" bodyend="1066"/>
      </memberdef>
      <memberdef kind="function" id="pcm__ladspa_8c_1a3dcdcce02d1c3fe72a3ab2f7c339d91c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_pcm_ladspa_check_file</definition>
        <argsstring>(snd_pcm_ladspa_plugin_t *const plugin, const char *filename, const char *label, const unsigned long ladspa_id)</argsstring>
        <name>snd_pcm_ladspa_check_file</name>
        <param>
          <type>snd_pcm_ladspa_plugin_t *const</type>
          <declname>plugin</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>label</declname>
        </param>
        <param>
          <type>const unsigned long</type>
          <declname>ladspa_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" line="1086" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" bodystart="1086" bodyend="1142"/>
      </memberdef>
      <memberdef kind="function" id="pcm__ladspa_8c_1aa7ea24ca1f03199063276288dac01491" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_pcm_ladspa_check_dir</definition>
        <argsstring>(snd_pcm_ladspa_plugin_t *const plugin, const char *path, const char *label, const unsigned long ladspa_id)</argsstring>
        <name>snd_pcm_ladspa_check_dir</name>
        <param>
          <type>snd_pcm_ladspa_plugin_t *const</type>
          <declname>plugin</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>label</declname>
        </param>
        <param>
          <type>const unsigned long</type>
          <declname>ladspa_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" line="1144" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" bodystart="1144" bodyend="1192"/>
      </memberdef>
      <memberdef kind="function" id="pcm__ladspa_8c_1a7cbd95e709a90363f7b5035d71c95fbf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_pcm_ladspa_look_for_plugin</definition>
        <argsstring>(snd_pcm_ladspa_plugin_t *const plugin, const char *path, const char *label, const long ladspa_id)</argsstring>
        <name>snd_pcm_ladspa_look_for_plugin</name>
        <param>
          <type>snd_pcm_ladspa_plugin_t *const</type>
          <declname>plugin</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>label</declname>
        </param>
        <param>
          <type>const long</type>
          <declname>ladspa_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" line="1194" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" bodystart="1194" bodyend="1223"/>
      </memberdef>
      <memberdef kind="function" id="pcm__ladspa_8c_1aae72b3bda3cd52e8702dc42a1219f325" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_pcm_ladspa_add_default_controls</definition>
        <argsstring>(snd_pcm_ladspa_plugin_t *lplug, snd_pcm_ladspa_plugin_io_t *io)</argsstring>
        <name>snd_pcm_ladspa_add_default_controls</name>
        <param>
          <type>snd_pcm_ladspa_plugin_t *</type>
          <declname>lplug</declname>
        </param>
        <param>
          <type>snd_pcm_ladspa_plugin_io_t *</type>
          <declname>io</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" line="1225" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" bodystart="1225" bodyend="1249"/>
      </memberdef>
      <memberdef kind="function" id="pcm__ladspa_8c_1a6285ad7839b49828beb93a29bb9e8f03" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_pcm_ladspa_parse_controls</definition>
        <argsstring>(snd_pcm_ladspa_plugin_t *lplug, snd_pcm_ladspa_plugin_io_t *io, snd_config_t *controls)</argsstring>
        <name>snd_pcm_ladspa_parse_controls</name>
        <param>
          <type>snd_pcm_ladspa_plugin_t *</type>
          <declname>lplug</declname>
        </param>
        <param>
          <type>snd_pcm_ladspa_plugin_io_t *</type>
          <declname>io</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>controls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" line="1251" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" bodystart="1251" bodyend="1295"/>
      </memberdef>
      <memberdef kind="function" id="pcm__ladspa_8c_1a97ab3ff955bc8511dd22a81b25e93b93" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_pcm_ladspa_parse_bindings</definition>
        <argsstring>(snd_pcm_ladspa_plugin_t *lplug, snd_pcm_ladspa_plugin_io_t *io, snd_config_t *bindings)</argsstring>
        <name>snd_pcm_ladspa_parse_bindings</name>
        <param>
          <type>snd_pcm_ladspa_plugin_t *</type>
          <declname>lplug</declname>
        </param>
        <param>
          <type>snd_pcm_ladspa_plugin_io_t *</type>
          <declname>io</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>bindings</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" line="1297" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" bodystart="1297" bodyend="1369"/>
      </memberdef>
      <memberdef kind="function" id="pcm__ladspa_8c_1a9be39adefa0d03041ab1ff7fa9dbc18a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_pcm_ladspa_parse_ioconfig</definition>
        <argsstring>(snd_pcm_ladspa_plugin_t *lplug, snd_pcm_ladspa_plugin_io_t *io, snd_config_t *conf)</argsstring>
        <name>snd_pcm_ladspa_parse_ioconfig</name>
        <param>
          <type>snd_pcm_ladspa_plugin_t *</type>
          <declname>lplug</declname>
        </param>
        <param>
          <type>snd_pcm_ladspa_plugin_io_t *</type>
          <declname>io</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>conf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" line="1371" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" bodystart="1371" bodyend="1424"/>
      </memberdef>
      <memberdef kind="function" id="pcm__ladspa_8c_1ad3c0f34a1fc908fd86d19cd36afd1e3d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_pcm_ladspa_add_plugin</definition>
        <argsstring>(struct list_head *list, const char *path, snd_config_t *plugin, int reverse)</argsstring>
        <name>snd_pcm_ladspa_add_plugin</name>
        <param>
          <type>struct list_head *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>plugin</declname>
        </param>
        <param>
          <type>int</type>
          <declname>reverse</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" line="1426" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" bodystart="1426" bodyend="1526"/>
      </memberdef>
      <memberdef kind="function" id="pcm__ladspa_8c_1a4e98e4a60c89e888a849ffe9cd1d4f3e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_pcm_ladspa_build_plugins</definition>
        <argsstring>(struct list_head *list, const char *path, snd_config_t *plugins, int reverse)</argsstring>
        <name>snd_pcm_ladspa_build_plugins</name>
        <param>
          <type>struct list_head *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>plugins</declname>
        </param>
        <param>
          <type>int</type>
          <declname>reverse</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" line="1528" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" bodystart="1528" bodyend="1569"/>
      </memberdef>
      <memberdef kind="function" id="pcm__ladspa_8c_1adcc43e9aeb068d3f8e1cd17d7f8a92cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_ladspa_open</definition>
        <argsstring>(snd_pcm_t **pcmp, const char *name, const char *ladspa_path, unsigned int channels, snd_config_t *ladspa_pplugins, snd_config_t *ladspa_cplugins, snd_pcm_t *slave, int close_slave)</argsstring>
        <name>snd_pcm_ladspa_open</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> **</type>
          <declname>pcmp</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>ladspa_path</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>channels</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>ladspa_pplugins</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>ladspa_cplugins</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>slave</declname>
        </param>
        <param>
          <type>int</type>
          <declname>close_slave</declname>
        </param>
        <briefdescription>
<para>Creates a new LADSPA&lt;-&gt;ALSA Plugin. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcmp</parametername>
</parameternamelist>
<parameterdescription>
<para>Returns created PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of PCM </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ladspa_path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path for LADSPA plugins </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channels</parametername>
</parameternamelist>
<parameterdescription>
<para>Force input channel count to LADSPA plugin chain, 0 = no force (auto) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ladspa_pplugins</parametername>
</parameternamelist>
<parameterdescription>
<para>The playback configuration </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ladspa_cplugins</parametername>
</parameternamelist>
<parameterdescription>
<para>The capture configuration </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>slave</parametername>
</parameternamelist>
<parameterdescription>
<para>Slave PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>close_slave</parametername>
</parameternamelist>
<parameterdescription>
<para>When set, the slave PCM handle is closed with copy PCM </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>zero</parametername>
</parameternamelist>
<parameterdescription>
<para>on success otherwise a negative error code </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="warning"><para>Using of this function might be dangerous in the sense of compatibility reasons. The prototype might be freely changed in future. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" line="1586" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" bodystart="1586" bodyend="1650"/>
      </memberdef>
      <memberdef kind="function" id="pcm__ladspa_8c_1af310f491d26253256cdf8589334a64d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _snd_pcm_ladspa_open</definition>
        <argsstring>(snd_pcm_t **pcmp, const char *name, snd_config_t *root, snd_config_t *conf, snd_pcm_stream_t stream, int mode)</argsstring>
        <name>_snd_pcm_ladspa_open</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> **</type>
          <declname>pcmp</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>root</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>conf</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gac23b43ff55add78638e503b9cc892c24" kindref="member">snd_pcm_stream_t</ref></type>
          <declname>stream</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Creates a new LADSPA&lt;-&gt;ALSA PCM. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcmp</parametername>
</parameternamelist>
<parameterdescription>
<para>Returns created PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of PCM </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>root</parametername>
</parameternamelist>
<parameterdescription>
<para>Root configuration node </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>conf</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration node with LADSPA&lt;-&gt;ALSA PCM description </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stream</parametername>
</parameternamelist>
<parameterdescription>
<para>Stream type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Stream mode </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>zero</parametername>
</parameternamelist>
<parameterdescription>
<para>on success otherwise a negative error code </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="warning"><para>Using of this function might be dangerous in the sense of compatibility reasons. The prototype might be freely changed in future. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" line="1733" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c" bodystart="1733" bodyend="1805"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>ALSA Plugin &lt;-&gt; LADSPA Plugin Interface. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Jaroslav Kysela <ulink url="mailto:perex@perex.cz">perex@perex.cz</ulink> </para></simplesect>
<simplesect kind="author"><para>Jaroslav Kysela <ulink url="mailto:perex@perex.cz">perex@perex.cz</ulink> </para></simplesect>
<simplesect kind="date"><para>2001,2006 </para></simplesect>
</para>    </detaileddescription>
    <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_ladspa.c"/>
  </compounddef>
</doxygen>
