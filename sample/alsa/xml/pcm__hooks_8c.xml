<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="pcm__hooks_8c" kind="file" language="C++">
    <compoundname>pcm_hooks.c</compoundname>
    <includes local="yes">pcm_local.h</includes>
    <includes local="yes">pcm_generic.h</includes>
    <incdepgraph>
      <node id="474">
        <label>/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_hooks.c</label>
        <link refid="pcm__hooks_8c"/>
        <childnode refid="475" relation="include">
        </childnode>
        <childnode refid="476" relation="include">
        </childnode>
      </node>
      <node id="475">
        <label>pcm_local.h</label>
      </node>
      <node id="476">
        <label>pcm_generic.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="pcm__hooks_8c_1a58ee3fa4162ba66b0616dd856260b5d5" prot="public" static="yes" mutable="no">
        <type>const snd_pcm_ops_t</type>
        <definition>const snd_pcm_ops_t snd_pcm_hooks_ops</definition>
        <argsstring></argsstring>
        <name>snd_pcm_hooks_ops</name>
        <initializer>= {
	.close = snd_pcm_hooks_close,
	.info = snd_pcm_generic_info,
	.hw_refine = snd_pcm_generic_hw_refine,
	.hw_params = snd_pcm_hooks_hw_params,
	.hw_free = snd_pcm_hooks_hw_free,
	.sw_params = snd_pcm_generic_sw_params,
	.channel_info = snd_pcm_generic_channel_info,
	.dump = snd_pcm_hooks_dump,
	.nonblock = snd_pcm_generic_nonblock,
	.async = snd_pcm_generic_async,
	.mmap = snd_pcm_generic_mmap,
	.munmap = snd_pcm_generic_munmap,
	.query_chmaps = snd_pcm_generic_query_chmaps,
	.get_chmap = snd_pcm_generic_get_chmap,
	.set_chmap = snd_pcm_generic_set_chmap,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_hooks.c" line="155" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_hooks.c" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pcm__hooks_8c_1ad0acc11f9049ccab7a9d51f6dd767e54" prot="public" static="yes" mutable="no">
        <type>const snd_pcm_fast_ops_t</type>
        <definition>const snd_pcm_fast_ops_t snd_pcm_hooks_fast_ops</definition>
        <argsstring></argsstring>
        <name>snd_pcm_hooks_fast_ops</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_hooks.c" line="173" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_hooks.c" bodystart="173" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="pcm__hooks_8c_1aad7c43904af13f1a3fbe3f52733aa93c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int hook_add_dlobj</definition>
        <argsstring>(snd_pcm_t *pcm, void *dlobj)</argsstring>
        <name>hook_add_dlobj</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>dlobj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_hooks.c" line="58" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_hooks.c" bodystart="58" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="pcm__hooks_8c_1a9530c6610e62703cf1e508a75ae3cc91" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void hook_remove_dlobj</definition>
        <argsstring>(struct snd_pcm_hook_dllist *dl)</argsstring>
        <name>hook_remove_dlobj</name>
        <param>
          <type>struct snd_pcm_hook_dllist *</type>
          <declname>dl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_hooks.c" line="72" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_hooks.c" bodystart="72" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="pcm__hooks_8c_1ad36899d4e29db26c626ad585beea15d6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_pcm_hooks_close</definition>
        <argsstring>(snd_pcm_t *pcm)</argsstring>
        <name>snd_pcm_hooks_close</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_hooks.c" line="79" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_hooks.c" bodystart="79" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="pcm__hooks_8c_1a9012d897dbb9075433ee843591fb0099" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_pcm_hooks_hw_params</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)</argsstring>
        <name>snd_pcm_hooks_hw_params</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_hooks.c" line="111" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_hooks.c" bodystart="111" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="pcm__hooks_8c_1aff061a9b5108b2759f4372bc557f6662" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_pcm_hooks_hw_free</definition>
        <argsstring>(snd_pcm_t *pcm)</argsstring>
        <name>snd_pcm_hooks_hw_free</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_hooks.c" line="127" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_hooks.c" bodystart="127" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="pcm__hooks_8c_1a1bd3aefd7a44831c8e9c432effcbffe8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void snd_pcm_hooks_dump</definition>
        <argsstring>(snd_pcm_t *pcm, snd_output_t *out)</argsstring>
        <name>snd_pcm_hooks_dump</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___output_1ga49729cc6454539495c1f5b6e95cd474a" kindref="member">snd_output_t</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_hooks.c" line="143" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_hooks.c" bodystart="143" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="pcm__hooks_8c_1a0355f8ca87a7361b1c3fdd36baf05175" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hooks_open</definition>
        <argsstring>(snd_pcm_t **pcmp, const char *name, snd_pcm_t *slave, int close_slave)</argsstring>
        <name>snd_pcm_hooks_open</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> **</type>
          <declname>pcmp</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>slave</declname>
        </param>
        <param>
          <type>int</type>
          <declname>close_slave</declname>
        </param>
        <briefdescription>
<para>Creates a new hooks PCM. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcmp</parametername>
</parameternamelist>
<parameterdescription>
<para>Returns created PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of PCM </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>slave</parametername>
</parameternamelist>
<parameterdescription>
<para>Slave PCM </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>close_slave</parametername>
</parameternamelist>
<parameterdescription>
<para>If set, slave PCM handle is closed when hooks PCM is closed </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>zero</parametername>
</parameternamelist>
<parameterdescription>
<para>on success otherwise a negative error code </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="warning"><para>Using of this function might be dangerous in the sense of compatibility reasons. The prototype might be freely changed in future. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_hooks.c" line="216" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_hooks.c" bodystart="216" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="pcm__hooks_8c_1ac7f38dbea95f405407005f6b924674e1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_pcm_hook_add_conf</definition>
        <argsstring>(snd_pcm_t *pcm, snd_config_t *root, snd_config_t *conf)</argsstring>
        <name>snd_pcm_hook_add_conf</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>root</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>conf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_hooks.c" line="341" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_hooks.c" bodystart="341" bodyend="465"/>
      </memberdef>
      <memberdef kind="function" id="pcm__hooks_8c_1a4d7e604b82a739945aefde32395bea24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _snd_pcm_hooks_open</definition>
        <argsstring>(snd_pcm_t **pcmp, const char *name, snd_config_t *root, snd_config_t *conf, snd_pcm_stream_t stream, int mode)</argsstring>
        <name>_snd_pcm_hooks_open</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> **</type>
          <declname>pcmp</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>root</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>conf</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gac23b43ff55add78638e503b9cc892c24" kindref="member">snd_pcm_stream_t</ref></type>
          <declname>stream</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Creates a new hooks PCM. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcmp</parametername>
</parameternamelist>
<parameterdescription>
<para>Returns created PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of PCM </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>root</parametername>
</parameternamelist>
<parameterdescription>
<para>Root configuration node </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>conf</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration node with hooks PCM description </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stream</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM Stream </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM Mode </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>zero</parametername>
</parameternamelist>
<parameterdescription>
<para>on success otherwise a negative error code </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="warning"><para>Using of this function might be dangerous in the sense of compatibility reasons. The prototype might be freely changed in future. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_hooks.c" line="480" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_hooks.c" bodystart="480" bodyend="550"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___hook_1gacaec88e4b6cc2a45e7a805487acd64ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
        <definition>snd_pcm_t* snd_pcm_hook_get_pcm</definition>
        <argsstring>(snd_pcm_hook_t *hook)</argsstring>
        <name>snd_pcm_hook_get_pcm</name>
        <param>
          <type><ref refid="group___p_c_m___hook_1gae6b33860eeaf4eca00bdbef9383c1911" kindref="member">snd_pcm_hook_t</ref> *</type>
          <declname>hook</declname>
        </param>
        <briefdescription>
<para>Get PCM handle for a PCM hook. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hook</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM hook handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>PCM handle </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_hooks.c" line="560" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_hooks.c" bodystart="560" bodyend="564"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___hook_1ga1eb467cd5ab11817edc2ed7df3608019" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* snd_pcm_hook_get_private</definition>
        <argsstring>(snd_pcm_hook_t *hook)</argsstring>
        <name>snd_pcm_hook_get_private</name>
        <param>
          <type><ref refid="group___p_c_m___hook_1gae6b33860eeaf4eca00bdbef9383c1911" kindref="member">snd_pcm_hook_t</ref> *</type>
          <declname>hook</declname>
        </param>
        <briefdescription>
<para>Get callback function private data for a PCM hook. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hook</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM hook handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>callback function private data </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_hooks.c" line="571" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_hooks.c" bodystart="571" bodyend="575"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___hook_1ga6930df3b750b3f62dee6846fb3f6a576" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_pcm_hook_set_private</definition>
        <argsstring>(snd_pcm_hook_t *hook, void *private_data)</argsstring>
        <name>snd_pcm_hook_set_private</name>
        <param>
          <type><ref refid="group___p_c_m___hook_1gae6b33860eeaf4eca00bdbef9383c1911" kindref="member">snd_pcm_hook_t</ref> *</type>
          <declname>hook</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>private_data</declname>
        </param>
        <briefdescription>
<para>Set callback function private data for a PCM hook. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hook</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM hook handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>private_data</parametername>
</parameternamelist>
<parameterdescription>
<para>The private data value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_hooks.c" line="582" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_hooks.c" bodystart="582" bodyend="586"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___hook_1ga89eed2fdcda68c1efae9180a3794d5ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hook_add</definition>
        <argsstring>(snd_pcm_hook_t **hookp, snd_pcm_t *pcm, snd_pcm_hook_type_t type, snd_pcm_hook_func_t func, void *private_data)</argsstring>
        <name>snd_pcm_hook_add</name>
        <param>
          <type><ref refid="group___p_c_m___hook_1gae6b33860eeaf4eca00bdbef9383c1911" kindref="member">snd_pcm_hook_t</ref> **</type>
          <declname>hookp</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m___hook_1ga57b6ba407d293017e116fa1b462a2411" kindref="member">snd_pcm_hook_type_t</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m___hook_1ga1f6104443e129a88c5ac82bf398464a5" kindref="member">snd_pcm_hook_func_t</ref></type>
          <declname>func</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>private_data</declname>
        </param>
        <briefdescription>
<para>Add a PCM hook at end of hooks chain. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hookp</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned PCM hook handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM hook type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>func</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM hook callback function </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>private_data</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM hook private data </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code</para></simplesect>
Warning: an hook callback function cannot remove an hook of the same type different from itself </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_hooks.c" line="600" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_hooks.c" bodystart="600" bodyend="618"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___hook_1ga4c59ad440d2479f957b477b26b90e4b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_hook_remove</definition>
        <argsstring>(snd_pcm_hook_t *hook)</argsstring>
        <name>snd_pcm_hook_remove</name>
        <param>
          <type><ref refid="group___p_c_m___hook_1gae6b33860eeaf4eca00bdbef9383c1911" kindref="member">snd_pcm_hook_t</ref> *</type>
          <declname>hook</declname>
        </param>
        <briefdescription>
<para>Remove a PCM hook. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hook</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM hook handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code</para></simplesect>
Warning: an hook callback cannot remove an hook of the same type different from itself </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_hooks.c" line="628" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_hooks.c" bodystart="628" bodyend="634"/>
      </memberdef>
      <memberdef kind="function" id="pcm__hooks_8c_1ae1060e4c2ebdf2a8cb99866f52796c97" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_pcm_hook_ctl_elems_hw_params</definition>
        <argsstring>(snd_pcm_hook_t *hook)</argsstring>
        <name>snd_pcm_hook_ctl_elems_hw_params</name>
        <param>
          <type><ref refid="group___p_c_m___hook_1gae6b33860eeaf4eca00bdbef9383c1911" kindref="member">snd_pcm_hook_t</ref> *</type>
          <declname>hook</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_hooks.c" line="640" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_hooks.c" bodystart="640" bodyend="644"/>
      </memberdef>
      <memberdef kind="function" id="pcm__hooks_8c_1a7e357b09eb1a491be7c19589108e2093" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_pcm_hook_ctl_elems_hw_free</definition>
        <argsstring>(snd_pcm_hook_t *hook)</argsstring>
        <name>snd_pcm_hook_ctl_elems_hw_free</name>
        <param>
          <type><ref refid="group___p_c_m___hook_1gae6b33860eeaf4eca00bdbef9383c1911" kindref="member">snd_pcm_hook_t</ref> *</type>
          <declname>hook</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_hooks.c" line="646" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_hooks.c" bodystart="646" bodyend="650"/>
      </memberdef>
      <memberdef kind="function" id="pcm__hooks_8c_1a16c25af8ac0719ba609b46f9363d78ad" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_pcm_hook_ctl_elems_close</definition>
        <argsstring>(snd_pcm_hook_t *hook)</argsstring>
        <name>snd_pcm_hook_ctl_elems_close</name>
        <param>
          <type><ref refid="group___p_c_m___hook_1gae6b33860eeaf4eca00bdbef9383c1911" kindref="member">snd_pcm_hook_t</ref> *</type>
          <declname>hook</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_hooks.c" line="652" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_hooks.c" bodystart="652" bodyend="658"/>
      </memberdef>
      <memberdef kind="function" id="pcm__hooks_8c_1abfd89c986184f010df8646b46e623490" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _snd_pcm_hook_ctl_elems_install</definition>
        <argsstring>(snd_pcm_t *pcm, snd_config_t *conf)</argsstring>
        <name>_snd_pcm_hook_ctl_elems_install</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>conf</declname>
        </param>
        <briefdescription>
<para>Install CTL settings using hardware associated with PCM handle. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>conf</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration node with CTL settings </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>zero on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_hooks.c" line="666" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_hooks.c" bodystart="666" bodyend="725"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>PCM Hook Interface. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Abramo Bagnara <ulink url="mailto:abramo@alsa-project.org">abramo@alsa-project.org</ulink> </para></simplesect>
<simplesect kind="author"><para>Jaroslav Kysela <ulink url="mailto:perex@perex.cz">perex@perex.cz</ulink> </para></simplesect>
<simplesect kind="date"><para>2000-2001 </para></simplesect>
</para>    </detaileddescription>
    <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_hooks.c"/>
  </compounddef>
</doxygen>
