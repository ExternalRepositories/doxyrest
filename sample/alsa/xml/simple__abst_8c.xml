<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="simple__abst_8c" kind="file" language="C++">
    <compoundname>simple_abst.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">fcntl.h</includes>
    <includes local="no">sys/ioctl.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">dlfcn.h</includes>
    <includes local="yes">config.h</includes>
    <includes refid="asoundlib_8h" local="yes">asoundlib.h</includes>
    <includes refid="mixer__simple_8h" local="yes">mixer_simple.h</includes>
    <incdepgraph>
      <node id="311">
        <label>stdarg.h</label>
      </node>
      <node id="313">
        <label>alsa/asoundef.h</label>
      </node>
      <node id="308">
        <label>assert.h</label>
      </node>
      <node id="314">
        <label>alsa/version.h</label>
      </node>
      <node id="325">
        <label>alsa/mixer.h</label>
      </node>
      <node id="312">
        <label>endian.h</label>
      </node>
      <node id="298">
        <label>stdlib.h</label>
      </node>
      <node id="317">
        <label>alsa/output.h</label>
      </node>
      <node id="320">
        <label>alsa/pcm.h</label>
      </node>
      <node id="322">
        <label>alsa/timer.h</label>
      </node>
      <node id="309">
        <label>sys/poll.h</label>
      </node>
      <node id="310">
        <label>errno.h</label>
      </node>
      <node id="301">
        <label>fcntl.h</label>
      </node>
      <node id="296">
        <label>/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple_abst.c</label>
        <link refid="simple__abst_8c"/>
        <childnode refid="297" relation="include">
        </childnode>
        <childnode refid="298" relation="include">
        </childnode>
        <childnode refid="299" relation="include">
        </childnode>
        <childnode refid="300" relation="include">
        </childnode>
        <childnode refid="301" relation="include">
        </childnode>
        <childnode refid="302" relation="include">
        </childnode>
        <childnode refid="303" relation="include">
        </childnode>
        <childnode refid="304" relation="include">
        </childnode>
        <childnode refid="305" relation="include">
        </childnode>
        <childnode refid="306" relation="include">
        </childnode>
        <childnode refid="330" relation="include">
        </childnode>
      </node>
      <node id="302">
        <label>sys/ioctl.h</label>
      </node>
      <node id="324">
        <label>alsa/control.h</label>
      </node>
      <node id="330">
        <label>mixer_simple.h</label>
        <link refid="mixer__simple_8h_source"/>
        <childnode refid="331" relation="include">
        </childnode>
      </node>
      <node id="316">
        <label>alsa/input.h</label>
      </node>
      <node id="318">
        <label>alsa/error.h</label>
      </node>
      <node id="307">
        <label>sys/types.h</label>
      </node>
      <node id="321">
        <label>alsa/rawmidi.h</label>
      </node>
      <node id="300">
        <label>string.h</label>
      </node>
      <node id="329">
        <label>alsa/seq_midi_event.h</label>
      </node>
      <node id="327">
        <label>alsa/seq.h</label>
      </node>
      <node id="299">
        <label>unistd.h</label>
      </node>
      <node id="331">
        <label>mixer_abst.h</label>
      </node>
      <node id="319">
        <label>alsa/conf.h</label>
      </node>
      <node id="303">
        <label>math.h</label>
      </node>
      <node id="306">
        <label>asoundlib.h</label>
        <link refid="asoundlib_8h"/>
        <childnode refid="299" relation="include">
        </childnode>
        <childnode refid="297" relation="include">
        </childnode>
        <childnode refid="298" relation="include">
        </childnode>
        <childnode refid="307" relation="include">
        </childnode>
        <childnode refid="300" relation="include">
        </childnode>
        <childnode refid="301" relation="include">
        </childnode>
        <childnode refid="308" relation="include">
        </childnode>
        <childnode refid="309" relation="include">
        </childnode>
        <childnode refid="310" relation="include">
        </childnode>
        <childnode refid="311" relation="include">
        </childnode>
        <childnode refid="312" relation="include">
        </childnode>
        <childnode refid="313" relation="include">
        </childnode>
        <childnode refid="314" relation="include">
        </childnode>
        <childnode refid="315" relation="include">
        </childnode>
        <childnode refid="316" relation="include">
        </childnode>
        <childnode refid="317" relation="include">
        </childnode>
        <childnode refid="318" relation="include">
        </childnode>
        <childnode refid="319" relation="include">
        </childnode>
        <childnode refid="320" relation="include">
        </childnode>
        <childnode refid="321" relation="include">
        </childnode>
        <childnode refid="322" relation="include">
        </childnode>
        <childnode refid="323" relation="include">
        </childnode>
        <childnode refid="324" relation="include">
        </childnode>
        <childnode refid="325" relation="include">
        </childnode>
        <childnode refid="326" relation="include">
        </childnode>
        <childnode refid="327" relation="include">
        </childnode>
        <childnode refid="328" relation="include">
        </childnode>
        <childnode refid="329" relation="include">
        </childnode>
      </node>
      <node id="323">
        <label>alsa/hwdep.h</label>
      </node>
      <node id="315">
        <label>alsa/global.h</label>
      </node>
      <node id="305">
        <label>config.h</label>
      </node>
      <node id="297">
        <label>stdio.h</label>
      </node>
      <node id="326">
        <label>alsa/seq_event.h</label>
      </node>
      <node id="328">
        <label>alsa/seqmid.h</label>
      </node>
      <node id="304">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="simple__abst_8c_1aa674ffc41441f74aa50c554c5d5f4d0d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int try_open</definition>
        <argsstring>(snd_mixer_class_t *class, const char *lib)</argsstring>
        <name>try_open</name>
        <param>
          <type><ref refid="group___mixer_1ga51c7b205d5afc62342d9dec3ce54d11f" kindref="member">snd_mixer_class_t</ref> *</type>
          <declname>class</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>lib</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple_abst.c" line="64" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple_abst.c" bodystart="64" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="simple__abst_8c_1a96b9159809cd5077e32d027138277d55" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int try_open_full</definition>
        <argsstring>(snd_mixer_class_t *class, snd_mixer_t *mixer, const char *lib, const char *device)</argsstring>
        <name>try_open_full</name>
        <param>
          <type><ref refid="group___mixer_1ga51c7b205d5afc62342d9dec3ce54d11f" kindref="member">snd_mixer_class_t</ref> *</type>
          <declname>class</declname>
        </param>
        <param>
          <type><ref refid="group___mixer_1ga34161447bc01a64f578456ed13d57e33" kindref="member">snd_mixer_t</ref> *</type>
          <declname>mixer</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>lib</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple_abst.c" line="111" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple_abst.c" bodystart="111" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="simple__abst_8c_1aaabe315e1dcc574d87c597bbf85723b4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int match</definition>
        <argsstring>(snd_mixer_class_t *class, const char *lib, const char *searchl)</argsstring>
        <name>match</name>
        <param>
          <type><ref refid="group___mixer_1ga51c7b205d5afc62342d9dec3ce54d11f" kindref="member">snd_mixer_class_t</ref> *</type>
          <declname>class</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>lib</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>searchl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple_abst.c" line="158" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple_abst.c" bodystart="158" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="simple__abst_8c_1a95f2c39c4cd9c6e4802636867429154e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int find_full</definition>
        <argsstring>(snd_mixer_class_t *class, snd_mixer_t *mixer, snd_config_t *top, const char *device)</argsstring>
        <name>find_full</name>
        <param>
          <type><ref refid="group___mixer_1ga51c7b205d5afc62342d9dec3ce54d11f" kindref="member">snd_mixer_class_t</ref> *</type>
          <declname>class</declname>
        </param>
        <param>
          <type><ref refid="group___mixer_1ga34161447bc01a64f578456ed13d57e33" kindref="member">snd_mixer_t</ref> *</type>
          <declname>mixer</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>top</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple_abst.c" line="177" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple_abst.c" bodystart="177" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="simple__abst_8c_1a07dcc10c8ce68693c6f86b7a59a0ffd5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int find_module</definition>
        <argsstring>(snd_mixer_class_t *class, snd_config_t *top)</argsstring>
        <name>find_module</name>
        <param>
          <type><ref refid="group___mixer_1ga51c7b205d5afc62342d9dec3ce54d11f" kindref="member">snd_mixer_class_t</ref> *</type>
          <declname>class</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>top</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple_abst.c" line="202" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple_abst.c" bodystart="202" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="simple__abst_8c_1a29257cd30e0f3e93a423ab1dd53da503" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void private_free</definition>
        <argsstring>(snd_mixer_class_t *class)</argsstring>
        <name>private_free</name>
        <param>
          <type><ref refid="group___mixer_1ga51c7b205d5afc62342d9dec3ce54d11f" kindref="member">snd_mixer_class_t</ref> *</type>
          <declname>class</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple_abst.c" line="244" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple_abst.c" bodystart="244" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="simple__abst_8c_1a0ecbecfc370c1b1f51b6974ba9ea476e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_simple_basic_register</definition>
        <argsstring>(snd_mixer_t *mixer, struct snd_mixer_selem_regopt *options, snd_mixer_class_t **classp)</argsstring>
        <name>snd_mixer_simple_basic_register</name>
        <param>
          <type><ref refid="group___mixer_1ga34161447bc01a64f578456ed13d57e33" kindref="member">snd_mixer_t</ref> *</type>
          <declname>mixer</declname>
        </param>
        <param>
          <type>struct <ref refid="structsnd__mixer__selem__regopt" kindref="compound">snd_mixer_selem_regopt</ref> *</type>
          <declname>options</declname>
        </param>
        <param>
          <type><ref refid="group___mixer_1ga51c7b205d5afc62342d9dec3ce54d11f" kindref="member">snd_mixer_class_t</ref> **</type>
          <declname>classp</declname>
        </param>
        <briefdescription>
<para>Register mixer simple element class - basic abstraction. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mixer</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>Options container </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>classp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to returned mixer simple element class handle (or NULL </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple_abst.c" line="271" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple_abst.c" bodystart="271" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="simple__abst_8c_1a8ed53ea7af6c9f85a4f62a2b6c8ac0f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_mixer_sbasic_info</definition>
        <argsstring>(const snd_mixer_class_t *class, sm_class_basic_t *info)</argsstring>
        <name>snd_mixer_sbasic_info</name>
        <param>
          <type>const <ref refid="group___mixer_1ga51c7b205d5afc62342d9dec3ce54d11f" kindref="member">snd_mixer_class_t</ref> *</type>
          <declname>class</declname>
        </param>
        <param>
          <type>sm_class_basic_t *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>Basic Mixer Abstraction - Get information about device. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>class</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer class </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>Info structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple_abst.c" line="367" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple_abst.c" bodystart="367" bodyend="378"/>
      </memberdef>
      <memberdef kind="function" id="simple__abst_8c_1a6209c5d7043b79e6edf5e34de424af6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* snd_mixer_sbasic_get_private</definition>
        <argsstring>(const snd_mixer_class_t *class)</argsstring>
        <name>snd_mixer_sbasic_get_private</name>
        <param>
          <type>const <ref refid="group___mixer_1ga51c7b205d5afc62342d9dec3ce54d11f" kindref="member">snd_mixer_class_t</ref> *</type>
          <declname>class</declname>
        </param>
        <briefdescription>
<para>Get private data for basic abstraction. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>class</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer class </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>private data </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple_abst.c" line="385" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple_abst.c" bodystart="385" bodyend="392"/>
      </memberdef>
      <memberdef kind="function" id="simple__abst_8c_1ad8502b9da0b3b6984c5c3f6d80eaad79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_mixer_sbasic_set_private</definition>
        <argsstring>(const snd_mixer_class_t *class, void *private_data)</argsstring>
        <name>snd_mixer_sbasic_set_private</name>
        <param>
          <type>const <ref refid="group___mixer_1ga51c7b205d5afc62342d9dec3ce54d11f" kindref="member">snd_mixer_class_t</ref> *</type>
          <declname>class</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>private_data</declname>
        </param>
        <briefdescription>
<para>Set private data for basic abstraction. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>class</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer class </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>private_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Private data </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple_abst.c" line="399" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple_abst.c" bodystart="399" bodyend="407"/>
      </memberdef>
      <memberdef kind="function" id="simple__abst_8c_1a0301b1c00c990dd2098bc1ea0b2bd26f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_mixer_sbasic_set_private_free</definition>
        <argsstring>(const snd_mixer_class_t *class, void(*private_free)(snd_mixer_class_t *class))</argsstring>
        <name>snd_mixer_sbasic_set_private_free</name>
        <param>
          <type>const <ref refid="group___mixer_1ga51c7b205d5afc62342d9dec3ce54d11f" kindref="member">snd_mixer_class_t</ref> *</type>
          <declname>class</declname>
        </param>
        <param>
          <type>void(*)(<ref refid="group___mixer_1ga51c7b205d5afc62342d9dec3ce54d11f" kindref="member">snd_mixer_class_t</ref> *class)</type>
          <declname>private_free</declname>
        </param>
        <briefdescription>
<para>Set private data free callback for basic abstraction. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>class</parametername>
</parameternamelist>
<parameterdescription>
<para>Mixer class </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>private_free</parametername>
</parameternamelist>
<parameterdescription>
<para>free callback for private data </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple_abst.c" line="414" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple_abst.c" bodystart="414" bodyend="422"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Mixer Simple Element Class Interface - Module Abstraction. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Jaroslav Kysela <ulink url="mailto:perex@perex.cz">perex@perex.cz</ulink> </para></simplesect>
<simplesect kind="date"><para>2005</para></simplesect>
Mixer simple element class interface. </para>    </detaileddescription>
    <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/mixer/simple_abst.c"/>
  </compounddef>
</doxygen>
