<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structsnd__pcm__ioplug__callback" kind="struct" language="C++" prot="public">
    <compoundname>snd_pcm_ioplug_callback</compoundname>
    <includes refid="pcm__ioplug_8h" local="no">pcm_ioplug.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structsnd__pcm__ioplug__callback_1a7468068dda785aa176ff26e5133411bc" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* snd_pcm_ioplug_callback_t::start) (snd_pcm_ioplug_t *io)</definition>
        <argsstring>)(snd_pcm_ioplug_t *io)</argsstring>
        <name>start</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>start the PCM; required, called inside mutex lock </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_ioplug.h" line="129" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_ioplug.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsnd__pcm__ioplug__callback_1ab1bb5494c38ee557129df62afdfb49bb" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* snd_pcm_ioplug_callback_t::stop) (snd_pcm_ioplug_t *io)</definition>
        <argsstring>)(snd_pcm_ioplug_t *io)</argsstring>
        <name>stop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>stop the PCM; required, called inside mutex lock </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_ioplug.h" line="133" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_ioplug.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsnd__pcm__ioplug__callback_1a4845417f0aebd54219185c7efaede2c0" prot="public" static="no" mutable="no">
        <type><ref refid="group___p_c_m_1ga71cdfa37e258d2210b8bd0216bf0c36c" kindref="member">snd_pcm_sframes_t</ref>(*</type>
        <definition>snd_pcm_sframes_t(* snd_pcm_ioplug_callback_t::pointer) (snd_pcm_ioplug_t *io)</definition>
        <argsstring>)(snd_pcm_ioplug_t *io)</argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get the current DMA position; required, called inside mutex lock </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_ioplug.h" line="137" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_ioplug.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsnd__pcm__ioplug__callback_1ad7dbd481a29d2f92c26d12695ae1d4ac" prot="public" static="no" mutable="no">
        <type><ref refid="group___p_c_m_1ga71cdfa37e258d2210b8bd0216bf0c36c" kindref="member">snd_pcm_sframes_t</ref>(*</type>
        <definition>snd_pcm_sframes_t(* snd_pcm_ioplug_callback_t::transfer) (snd_pcm_ioplug_t *io, const snd_pcm_channel_area_t *areas, snd_pcm_uframes_t offset, snd_pcm_uframes_t size)</definition>
        <argsstring>)(snd_pcm_ioplug_t *io, const snd_pcm_channel_area_t *areas, snd_pcm_uframes_t offset, snd_pcm_uframes_t size)</argsstring>
        <name>transfer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>transfer the data; optional, called inside mutex lock </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_ioplug.h" line="141" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_ioplug.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsnd__pcm__ioplug__callback_1a3e82606488e2ccb5148dbe1b39cb4f88" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* snd_pcm_ioplug_callback_t::close) (snd_pcm_ioplug_t *io)</definition>
        <argsstring>)(snd_pcm_ioplug_t *io)</argsstring>
        <name>close</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>close the PCM; optional </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_ioplug.h" line="148" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_ioplug.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsnd__pcm__ioplug__callback_1a57381783ffd6f0cea8836a151b0eaa87" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* snd_pcm_ioplug_callback_t::hw_params) (snd_pcm_ioplug_t *io, snd_pcm_hw_params_t *params)</definition>
        <argsstring>)(snd_pcm_ioplug_t *io, snd_pcm_hw_params_t *params)</argsstring>
        <name>hw_params</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>hw_params; optional </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_ioplug.h" line="152" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_ioplug.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsnd__pcm__ioplug__callback_1aaf77cc71c899d58b9a9348c5efeab72f" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* snd_pcm_ioplug_callback_t::hw_free) (snd_pcm_ioplug_t *io)</definition>
        <argsstring>)(snd_pcm_ioplug_t *io)</argsstring>
        <name>hw_free</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>hw_free; optional </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_ioplug.h" line="156" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_ioplug.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsnd__pcm__ioplug__callback_1a8688847dcfab7d4e8a091f81aa351965" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* snd_pcm_ioplug_callback_t::sw_params) (snd_pcm_ioplug_t *io, snd_pcm_sw_params_t *params)</definition>
        <argsstring>)(snd_pcm_ioplug_t *io, snd_pcm_sw_params_t *params)</argsstring>
        <name>sw_params</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sw_params; optional </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_ioplug.h" line="160" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_ioplug.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsnd__pcm__ioplug__callback_1a071405a306b66091c61039b7997d8685" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* snd_pcm_ioplug_callback_t::prepare) (snd_pcm_ioplug_t *io)</definition>
        <argsstring>)(snd_pcm_ioplug_t *io)</argsstring>
        <name>prepare</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>prepare; optional </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_ioplug.h" line="164" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_ioplug.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsnd__pcm__ioplug__callback_1a5bc9a5f9d0be0f284458a94e44b5fdb3" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* snd_pcm_ioplug_callback_t::drain) (snd_pcm_ioplug_t *io)</definition>
        <argsstring>)(snd_pcm_ioplug_t *io)</argsstring>
        <name>drain</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>drain; optional </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_ioplug.h" line="168" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_ioplug.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsnd__pcm__ioplug__callback_1a68f7c891a62620fb90bfd929313e56b3" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* snd_pcm_ioplug_callback_t::pause) (snd_pcm_ioplug_t *io, int enable)</definition>
        <argsstring>)(snd_pcm_ioplug_t *io, int enable)</argsstring>
        <name>pause</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>toggle pause; optional, called inside mutex lock </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_ioplug.h" line="172" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_ioplug.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsnd__pcm__ioplug__callback_1a1176d8570c78351ed5b957b7c6c5884f" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* snd_pcm_ioplug_callback_t::resume) (snd_pcm_ioplug_t *io)</definition>
        <argsstring>)(snd_pcm_ioplug_t *io)</argsstring>
        <name>resume</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>resume; optional </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_ioplug.h" line="176" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_ioplug.h" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsnd__pcm__ioplug__callback_1a5c32d0aee17ebea124b3e8f11dad68e9" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* snd_pcm_ioplug_callback_t::poll_descriptors_count) (snd_pcm_ioplug_t *io)</definition>
        <argsstring>)(snd_pcm_ioplug_t *io)</argsstring>
        <name>poll_descriptors_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>poll descriptors count; optional </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_ioplug.h" line="180" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_ioplug.h" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsnd__pcm__ioplug__callback_1a6793d36d985acd08ca95776e59763b3a" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* snd_pcm_ioplug_callback_t::poll_descriptors) (snd_pcm_ioplug_t *io, struct pollfd *pfd, unsigned int space)</definition>
        <argsstring>)(snd_pcm_ioplug_t *io, struct pollfd *pfd, unsigned int space)</argsstring>
        <name>poll_descriptors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>poll descriptors; optional </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_ioplug.h" line="184" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_ioplug.h" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsnd__pcm__ioplug__callback_1a7b8c4cab575b38ed24371b1afdc5c6b9" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* snd_pcm_ioplug_callback_t::poll_revents) (snd_pcm_ioplug_t *io, struct pollfd *pfd, unsigned int nfds, unsigned short *revents)</definition>
        <argsstring>)(snd_pcm_ioplug_t *io, struct pollfd *pfd, unsigned int nfds, unsigned short *revents)</argsstring>
        <name>poll_revents</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>mangle poll events; optional </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_ioplug.h" line="188" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_ioplug.h" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsnd__pcm__ioplug__callback_1a839c05869c4dfd5e9b81224fe21c66fd" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* snd_pcm_ioplug_callback_t::dump) (snd_pcm_ioplug_t *io, snd_output_t *out)</definition>
        <argsstring>)(snd_pcm_ioplug_t *io, snd_output_t *out)</argsstring>
        <name>dump</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>dump; optional </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_ioplug.h" line="192" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_ioplug.h" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsnd__pcm__ioplug__callback_1a4ae1a94b5a4e1946750c2fc71c0197ba" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* snd_pcm_ioplug_callback_t::delay) (snd_pcm_ioplug_t *io, snd_pcm_sframes_t *delayp)</definition>
        <argsstring>)(snd_pcm_ioplug_t *io, snd_pcm_sframes_t *delayp)</argsstring>
        <name>delay</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get the delay for the running PCM; optional; since v1.0.1 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_ioplug.h" line="196" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_ioplug.h" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsnd__pcm__ioplug__callback_1aadaf669911046e91fdba3b15fe2a4839" prot="public" static="no" mutable="no">
        <type><ref refid="structsnd__pcm__chmap__query__t" kindref="compound">snd_pcm_chmap_query_t</ref> **(*</type>
        <definition>snd_pcm_chmap_query_t**(* snd_pcm_ioplug_callback_t::query_chmaps) (snd_pcm_ioplug_t *io)</definition>
        <argsstring>)(snd_pcm_ioplug_t *io)</argsstring>
        <name>query_chmaps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>query the channel maps; optional; since v1.0.2 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_ioplug.h" line="200" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_ioplug.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsnd__pcm__ioplug__callback_1a364feac16fc31f508ea67525c42e26dc" prot="public" static="no" mutable="no">
        <type><ref refid="structsnd__pcm__chmap__t" kindref="compound">snd_pcm_chmap_t</ref> *(*</type>
        <definition>snd_pcm_chmap_t*(* snd_pcm_ioplug_callback_t::get_chmap) (snd_pcm_ioplug_t *io)</definition>
        <argsstring>)(snd_pcm_ioplug_t *io)</argsstring>
        <name>get_chmap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get the channel map; optional; since v1.0.2 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_ioplug.h" line="204" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_ioplug.h" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsnd__pcm__ioplug__callback_1a8eb02dcaecc9b5120e6c29359167efa6" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* snd_pcm_ioplug_callback_t::set_chmap) (snd_pcm_ioplug_t *io, const snd_pcm_chmap_t *map)</definition>
        <argsstring>)(snd_pcm_ioplug_t *io, const snd_pcm_chmap_t *map)</argsstring>
        <name>set_chmap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>set the channel map; optional; since v1.0.2 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_ioplug.h" line="208" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_ioplug.h" bodystart="208" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Callback table of ioplug </para>    </detaileddescription>
    <collaborationgraph>
      <node id="36">
        <label>snd_pcm_chmap_query_t</label>
        <link refid="structsnd__pcm__chmap__query__t"/>
        <childnode refid="35" relation="usage">
          <edgelabel>map</edgelabel>
        </childnode>
      </node>
      <node id="35">
        <label>snd_pcm_chmap_t</label>
        <link refid="structsnd__pcm__chmap__t"/>
      </node>
      <node id="34">
        <label>snd_pcm_ioplug_callback_t</label>
        <link refid="structsnd__pcm__ioplug__callback"/>
        <childnode refid="35" relation="usage">
          <edgelabel>get_chmap</edgelabel>
        </childnode>
        <childnode refid="36" relation="usage">
          <edgelabel>query_chmaps</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_ioplug.h" line="125" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm_ioplug.h" bodystart="125" bodyend="209"/>
    <listofallmembers>
      <member refid="structsnd__pcm__ioplug__callback_1a3e82606488e2ccb5148dbe1b39cb4f88" prot="public" virt="non-virtual"><scope>snd_pcm_ioplug_callback</scope><name>close</name></member>
      <member refid="structsnd__pcm__ioplug__callback_1a4ae1a94b5a4e1946750c2fc71c0197ba" prot="public" virt="non-virtual"><scope>snd_pcm_ioplug_callback</scope><name>delay</name></member>
      <member refid="structsnd__pcm__ioplug__callback_1a5bc9a5f9d0be0f284458a94e44b5fdb3" prot="public" virt="non-virtual"><scope>snd_pcm_ioplug_callback</scope><name>drain</name></member>
      <member refid="structsnd__pcm__ioplug__callback_1a839c05869c4dfd5e9b81224fe21c66fd" prot="public" virt="non-virtual"><scope>snd_pcm_ioplug_callback</scope><name>dump</name></member>
      <member refid="structsnd__pcm__ioplug__callback_1a364feac16fc31f508ea67525c42e26dc" prot="public" virt="non-virtual"><scope>snd_pcm_ioplug_callback</scope><name>get_chmap</name></member>
      <member refid="structsnd__pcm__ioplug__callback_1aaf77cc71c899d58b9a9348c5efeab72f" prot="public" virt="non-virtual"><scope>snd_pcm_ioplug_callback</scope><name>hw_free</name></member>
      <member refid="structsnd__pcm__ioplug__callback_1a57381783ffd6f0cea8836a151b0eaa87" prot="public" virt="non-virtual"><scope>snd_pcm_ioplug_callback</scope><name>hw_params</name></member>
      <member refid="structsnd__pcm__ioplug__callback_1a68f7c891a62620fb90bfd929313e56b3" prot="public" virt="non-virtual"><scope>snd_pcm_ioplug_callback</scope><name>pause</name></member>
      <member refid="structsnd__pcm__ioplug__callback_1a4845417f0aebd54219185c7efaede2c0" prot="public" virt="non-virtual"><scope>snd_pcm_ioplug_callback</scope><name>pointer</name></member>
      <member refid="structsnd__pcm__ioplug__callback_1a6793d36d985acd08ca95776e59763b3a" prot="public" virt="non-virtual"><scope>snd_pcm_ioplug_callback</scope><name>poll_descriptors</name></member>
      <member refid="structsnd__pcm__ioplug__callback_1a5c32d0aee17ebea124b3e8f11dad68e9" prot="public" virt="non-virtual"><scope>snd_pcm_ioplug_callback</scope><name>poll_descriptors_count</name></member>
      <member refid="structsnd__pcm__ioplug__callback_1a7b8c4cab575b38ed24371b1afdc5c6b9" prot="public" virt="non-virtual"><scope>snd_pcm_ioplug_callback</scope><name>poll_revents</name></member>
      <member refid="structsnd__pcm__ioplug__callback_1a071405a306b66091c61039b7997d8685" prot="public" virt="non-virtual"><scope>snd_pcm_ioplug_callback</scope><name>prepare</name></member>
      <member refid="structsnd__pcm__ioplug__callback_1aadaf669911046e91fdba3b15fe2a4839" prot="public" virt="non-virtual"><scope>snd_pcm_ioplug_callback</scope><name>query_chmaps</name></member>
      <member refid="structsnd__pcm__ioplug__callback_1a1176d8570c78351ed5b957b7c6c5884f" prot="public" virt="non-virtual"><scope>snd_pcm_ioplug_callback</scope><name>resume</name></member>
      <member refid="structsnd__pcm__ioplug__callback_1a8eb02dcaecc9b5120e6c29359167efa6" prot="public" virt="non-virtual"><scope>snd_pcm_ioplug_callback</scope><name>set_chmap</name></member>
      <member refid="structsnd__pcm__ioplug__callback_1a7468068dda785aa176ff26e5133411bc" prot="public" virt="non-virtual"><scope>snd_pcm_ioplug_callback</scope><name>start</name></member>
      <member refid="structsnd__pcm__ioplug__callback_1ab1bb5494c38ee557129df62afdfb49bb" prot="public" virt="non-virtual"><scope>snd_pcm_ioplug_callback</scope><name>stop</name></member>
      <member refid="structsnd__pcm__ioplug__callback_1a8688847dcfab7d4e8a091f81aa351965" prot="public" virt="non-virtual"><scope>snd_pcm_ioplug_callback</scope><name>sw_params</name></member>
      <member refid="structsnd__pcm__ioplug__callback_1ad7dbd481a29d2f92c26d12695ae1d4ac" prot="public" virt="non-virtual"><scope>snd_pcm_ioplug_callback</scope><name>transfer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
