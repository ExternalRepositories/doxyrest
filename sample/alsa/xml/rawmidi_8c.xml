<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="rawmidi_8c" kind="file" language="C++">
    <compoundname>rawmidi.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdarg.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">string.h</includes>
    <includes local="yes">rawmidi_local.h</includes>
    <includes local="no">limits.h</includes>
    <includes local="yes">local.h</includes>
    <incdepgraph>
      <node id="646">
        <label>stdarg.h</label>
      </node>
      <node id="645">
        <label>stdlib.h</label>
      </node>
      <node id="643">
        <label>/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c</label>
        <link refid="rawmidi_8c"/>
        <childnode refid="644" relation="include">
        </childnode>
        <childnode refid="645" relation="include">
        </childnode>
        <childnode refid="646" relation="include">
        </childnode>
        <childnode refid="647" relation="include">
        </childnode>
        <childnode refid="648" relation="include">
        </childnode>
        <childnode refid="649" relation="include">
        </childnode>
        <childnode refid="650" relation="include">
        </childnode>
        <childnode refid="651" relation="include">
        </childnode>
      </node>
      <node id="650">
        <label>limits.h</label>
      </node>
      <node id="648">
        <label>string.h</label>
      </node>
      <node id="647">
        <label>unistd.h</label>
      </node>
      <node id="651">
        <label>local.h</label>
      </node>
      <node id="649">
        <label>rawmidi_local.h</label>
      </node>
      <node id="644">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="rawmidi_8c_1a742ef10c5ddadbab5a603b154128cd9d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_rawmidi_params_default</definition>
        <argsstring>(snd_rawmidi_t *rawmidi, snd_rawmidi_params_t *params)</argsstring>
        <name>snd_rawmidi_params_default</name>
        <param>
          <type><ref refid="group___raw_midi_1gaa21972df6ca3ebde0f7225b2472d0095" kindref="member">snd_rawmidi_t</ref> *</type>
          <declname>rawmidi</declname>
        </param>
        <param>
          <type><ref refid="group___raw_midi_1ga98ad06bccfabc646530241d3a0eef5a1" kindref="member">snd_rawmidi_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>setup the default parameters </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rawmidi</parametername>
</parameternamelist>
<parameterdescription>
<para>RawMidi handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_rawmidi_params_t structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" line="150" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="150" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="rawmidi_8c_1a45f5d6aa0bd2c630e74e61580ab0f4c7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_rawmidi_open_conf</definition>
        <argsstring>(snd_rawmidi_t **inputp, snd_rawmidi_t **outputp, const char *name, snd_config_t *rawmidi_root, snd_config_t *rawmidi_conf, int mode)</argsstring>
        <name>snd_rawmidi_open_conf</name>
        <param>
          <type><ref refid="group___raw_midi_1gaa21972df6ca3ebde0f7225b2472d0095" kindref="member">snd_rawmidi_t</ref> **</type>
          <declname>inputp</declname>
        </param>
        <param>
          <type><ref refid="group___raw_midi_1gaa21972df6ca3ebde0f7225b2472d0095" kindref="member">snd_rawmidi_t</ref> **</type>
          <declname>outputp</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>rawmidi_root</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>rawmidi_conf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" line="160" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="160" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="rawmidi_8c_1a0695440859dc396502a26ac97bf4a61c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_rawmidi_open_noupdate</definition>
        <argsstring>(snd_rawmidi_t **inputp, snd_rawmidi_t **outputp, snd_config_t *root, const char *name, int mode)</argsstring>
        <name>snd_rawmidi_open_noupdate</name>
        <param>
          <type><ref refid="group___raw_midi_1gaa21972df6ca3ebde0f7225b2472d0095" kindref="member">snd_rawmidi_t</ref> **</type>
          <declname>inputp</declname>
        </param>
        <param>
          <type><ref refid="group___raw_midi_1gaa21972df6ca3ebde0f7225b2472d0095" kindref="member">snd_rawmidi_t</ref> **</type>
          <declname>outputp</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>root</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" line="279" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="279" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1ga2ab783051deeb7eb37eb568b76448889" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_rawmidi_open</definition>
        <argsstring>(snd_rawmidi_t **inputp, snd_rawmidi_t **outputp, const char *name, int mode)</argsstring>
        <name>snd_rawmidi_open</name>
        <param>
          <type><ref refid="group___raw_midi_1gaa21972df6ca3ebde0f7225b2472d0095" kindref="member">snd_rawmidi_t</ref> **</type>
          <declname>inputp</declname>
        </param>
        <param>
          <type><ref refid="group___raw_midi_1gaa21972df6ca3ebde0f7225b2472d0095" kindref="member">snd_rawmidi_t</ref> **</type>
          <declname>outputp</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Opens a new connection to the RawMidi interface. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputp</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned input handle (NULL if not wanted) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outputp</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned output handle (NULL if not wanted) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>ASCII identifier of the RawMidi handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Open mode </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code</para></simplesect>
Opens a new connection to the RawMidi interface specified with an ASCII identifier and mode. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" line="305" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="305" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1gaa7e3daf5cf4dd36b2534d2f1d6309477" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_rawmidi_open_lconf</definition>
        <argsstring>(snd_rawmidi_t **inputp, snd_rawmidi_t **outputp, const char *name, int mode, snd_config_t *lconf)</argsstring>
        <name>snd_rawmidi_open_lconf</name>
        <param>
          <type><ref refid="group___raw_midi_1gaa21972df6ca3ebde0f7225b2472d0095" kindref="member">snd_rawmidi_t</ref> **</type>
          <declname>inputp</declname>
        </param>
        <param>
          <type><ref refid="group___raw_midi_1gaa21972df6ca3ebde0f7225b2472d0095" kindref="member">snd_rawmidi_t</ref> **</type>
          <declname>outputp</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>lconf</declname>
        </param>
        <briefdescription>
<para>Opens a new connection to the RawMidi interface using local configuration. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputp</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned input handle (NULL if not wanted) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outputp</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned output handle (NULL if not wanted) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>ASCII identifier of the RawMidi handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Open mode </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lconf</parametername>
</parameternamelist>
<parameterdescription>
<para>Local configuration </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code</para></simplesect>
Opens a new connection to the RawMidi interface specified with an ASCII identifier and mode. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" line="332" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="332" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1gabc6bd5922151fb50196f62b9a4ab9f56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_rawmidi_close</definition>
        <argsstring>(snd_rawmidi_t *rawmidi)</argsstring>
        <name>snd_rawmidi_close</name>
        <param>
          <type><ref refid="group___raw_midi_1gaa21972df6ca3ebde0f7225b2472d0095" kindref="member">snd_rawmidi_t</ref> *</type>
          <declname>rawmidi</declname>
        </param>
        <briefdescription>
<para>close RawMidi handle </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rawmidi</parametername>
</parameternamelist>
<parameterdescription>
<para>RawMidi handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code</para></simplesect>
Closes the specified RawMidi handle and frees all associated resources. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" line="347" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="347" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1gaa4bf6540f3f36c5878d31abd34a341d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* snd_rawmidi_name</definition>
        <argsstring>(snd_rawmidi_t *rawmidi)</argsstring>
        <name>snd_rawmidi_name</name>
        <param>
          <type><ref refid="group___raw_midi_1gaa21972df6ca3ebde0f7225b2472d0095" kindref="member">snd_rawmidi_t</ref> *</type>
          <declname>rawmidi</declname>
        </param>
        <briefdescription>
<para>get identifier of RawMidi handle </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rawmidi</parametername>
</parameternamelist>
<parameterdescription>
<para>a RawMidi handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ascii identifier of RawMidi handle</para></simplesect>
Returns the ASCII identifier of given RawMidi handle. It&apos;s the same identifier specified in <ref refid="group___raw_midi_1ga2ab783051deeb7eb37eb568b76448889" kindref="member">snd_rawmidi_open()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" line="367" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="367" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1ga5984e0c61995c8184a0e6e0a68a6faaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___raw_midi_1ga271ccd508f221ec7c99a27b150c657ba" kindref="member">snd_rawmidi_type_t</ref></type>
        <definition>snd_rawmidi_type_t snd_rawmidi_type</definition>
        <argsstring>(snd_rawmidi_t *rawmidi)</argsstring>
        <name>snd_rawmidi_type</name>
        <param>
          <type><ref refid="group___raw_midi_1gaa21972df6ca3ebde0f7225b2472d0095" kindref="member">snd_rawmidi_t</ref> *</type>
          <declname>rawmidi</declname>
        </param>
        <briefdescription>
<para>get type of RawMidi handle </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rawmidi</parametername>
</parameternamelist>
<parameterdescription>
<para>a RawMidi handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>type of RawMidi handle</para></simplesect>
Returns the type <ref refid="group___raw_midi_1ga271ccd508f221ec7c99a27b150c657ba" kindref="member">snd_rawmidi_type_t</ref> of given RawMidi handle. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" line="380" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="380" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1ga295d2f3ce9e992919f205b929fcb83ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___raw_midi_1gac3d11365c928cdfd3176ffede3e6f8c5" kindref="member">snd_rawmidi_stream_t</ref></type>
        <definition>snd_rawmidi_stream_t snd_rawmidi_stream</definition>
        <argsstring>(snd_rawmidi_t *rawmidi)</argsstring>
        <name>snd_rawmidi_stream</name>
        <param>
          <type><ref refid="group___raw_midi_1gaa21972df6ca3ebde0f7225b2472d0095" kindref="member">snd_rawmidi_t</ref> *</type>
          <declname>rawmidi</declname>
        </param>
        <briefdescription>
<para>get stream (direction) of RawMidi handle </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rawmidi</parametername>
</parameternamelist>
<parameterdescription>
<para>a RawMidi handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>stream of RawMidi handle</para></simplesect>
Returns the stream <ref refid="group___raw_midi_1gac3d11365c928cdfd3176ffede3e6f8c5" kindref="member">snd_rawmidi_stream_t</ref> of given RawMidi handle. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" line="393" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="393" bodyend="397"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1ga39ac11df7e520e753b26ab4eceabe6de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_rawmidi_poll_descriptors_count</definition>
        <argsstring>(snd_rawmidi_t *rawmidi)</argsstring>
        <name>snd_rawmidi_poll_descriptors_count</name>
        <param>
          <type><ref refid="group___raw_midi_1gaa21972df6ca3ebde0f7225b2472d0095" kindref="member">snd_rawmidi_t</ref> *</type>
          <declname>rawmidi</declname>
        </param>
        <briefdescription>
<para>get count of poll descriptors for RawMidi handle </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rawmidi</parametername>
</parameternamelist>
<parameterdescription>
<para>RawMidi handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>count of poll descriptors </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" line="404" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="404" bodyend="408"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1ga22fcc3fc5c62c9db88d79a0b91e3a75f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_rawmidi_poll_descriptors</definition>
        <argsstring>(snd_rawmidi_t *rawmidi, struct pollfd *pfds, unsigned int space)</argsstring>
        <name>snd_rawmidi_poll_descriptors</name>
        <param>
          <type><ref refid="group___raw_midi_1gaa21972df6ca3ebde0f7225b2472d0095" kindref="member">snd_rawmidi_t</ref> *</type>
          <declname>rawmidi</declname>
        </param>
        <param>
          <type>struct pollfd *</type>
          <declname>pfds</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>space</declname>
        </param>
        <briefdescription>
<para>get poll descriptors </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rawmidi</parametername>
</parameternamelist>
<parameterdescription>
<para>RawMidi handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pfds</parametername>
</parameternamelist>
<parameterdescription>
<para>array of poll descriptors </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>space</parametername>
</parameternamelist>
<parameterdescription>
<para>space in the poll descriptor array </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>count of filled descriptors </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" line="417" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="417" bodyend="426"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1ga38f15766f77c0bb50fec6cdcd87254b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_rawmidi_poll_descriptors_revents</definition>
        <argsstring>(snd_rawmidi_t *rawmidi, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)</argsstring>
        <name>snd_rawmidi_poll_descriptors_revents</name>
        <param>
          <type><ref refid="group___raw_midi_1gaa21972df6ca3ebde0f7225b2472d0095" kindref="member">snd_rawmidi_t</ref> *</type>
          <declname>rawmidi</declname>
        </param>
        <param>
          <type>struct pollfd *</type>
          <declname>pfds</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>nfds</declname>
        </param>
        <param>
          <type>unsigned short *</type>
          <declname>revents</declname>
        </param>
        <briefdescription>
<para>get returned events from poll descriptors </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rawmidi</parametername>
</parameternamelist>
<parameterdescription>
<para>rawmidi RawMidi handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pfds</parametername>
</parameternamelist>
<parameterdescription>
<para>array of poll descriptors </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nfds</parametername>
</parameternamelist>
<parameterdescription>
<para>count of poll descriptors </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>revents</parametername>
</parameternamelist>
<parameterdescription>
<para>returned events </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>zero if success, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" line="436" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="436" bodyend="444"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1gafe714a54fdb6083eb003bcc21da89553" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_rawmidi_nonblock</definition>
        <argsstring>(snd_rawmidi_t *rawmidi, int nonblock)</argsstring>
        <name>snd_rawmidi_nonblock</name>
        <param>
          <type><ref refid="group___raw_midi_1gaa21972df6ca3ebde0f7225b2472d0095" kindref="member">snd_rawmidi_t</ref> *</type>
          <declname>rawmidi</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nonblock</declname>
        </param>
        <briefdescription>
<para>set nonblock mode </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rawmidi</parametername>
</parameternamelist>
<parameterdescription>
<para>RawMidi handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nonblock</parametername>
</parameternamelist>
<parameterdescription>
<para>0 = block, 1 = nonblock mode </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code</para></simplesect>
The nonblock mode cannot be used when the stream is in <ref refid="group___raw_midi_1ga7060640f32abcd337239bde2c8749d23" kindref="member">SND_RAWMIDI_APPEND</ref> state. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" line="455" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="455" bodyend="467"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1ga383592eddf099559822357678fbe7d8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t snd_rawmidi_info_sizeof</definition>
        <argsstring>()</argsstring>
        <name>snd_rawmidi_info_sizeof</name>
        <briefdescription>
<para>get size of the snd_rawmidi_info_t structure in bytes </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>size of the snd_rawmidi_info_t structure in bytes </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" line="473" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="473" bodyend="476"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1ga11f8d3832ec7ea7fd6e8445338704528" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_rawmidi_info_malloc</definition>
        <argsstring>(snd_rawmidi_info_t **info)</argsstring>
        <name>snd_rawmidi_info_malloc</name>
        <param>
          <type><ref refid="group___raw_midi_1gab0f0f325ab812941e9b81addf0b941d3" kindref="member">snd_rawmidi_info_t</ref> **</type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>allocate a new snd_rawmidi_info_t structure </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>returned pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code if fails</para></simplesect>
Allocates a new snd_rawmidi_params_t structure using the standard malloc C library function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" line="486" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="486" bodyend="493"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1gaa84495bee993f34fb9bac33b5a9cf65f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_rawmidi_info_free</definition>
        <argsstring>(snd_rawmidi_info_t *info)</argsstring>
        <name>snd_rawmidi_info_free</name>
        <param>
          <type><ref refid="group___raw_midi_1gab0f0f325ab812941e9b81addf0b941d3" kindref="member">snd_rawmidi_info_t</ref> *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>frees the snd_rawmidi_info_t structure </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the snd_rawmidi_info_t structure to free</para></parameterdescription>
</parameteritem>
</parameterlist>
Frees the given snd_rawmidi_params_t structure using the standard free C library function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" line="502" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="502" bodyend="506"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1gabfb769e2aaf0a6b8274b5e0c3e9141d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_rawmidi_info_copy</definition>
        <argsstring>(snd_rawmidi_info_t *dst, const snd_rawmidi_info_t *src)</argsstring>
        <name>snd_rawmidi_info_copy</name>
        <param>
          <type><ref refid="group___raw_midi_1gab0f0f325ab812941e9b81addf0b941d3" kindref="member">snd_rawmidi_info_t</ref> *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="group___raw_midi_1gab0f0f325ab812941e9b81addf0b941d3" kindref="member">snd_rawmidi_info_t</ref> *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>copy one snd_rawmidi_info_t structure to another </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>destination snd_rawmidi_info_t structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>source snd_rawmidi_info_t structure </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" line="513" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="513" bodyend="517"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1gacfb2e65475c314f5f1dde0c5d7a05a7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int snd_rawmidi_info_get_device</definition>
        <argsstring>(const snd_rawmidi_info_t *info)</argsstring>
        <name>snd_rawmidi_info_get_device</name>
        <param>
          <type>const <ref refid="group___raw_midi_1gab0f0f325ab812941e9b81addf0b941d3" kindref="member">snd_rawmidi_info_t</ref> *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>get rawmidi device number </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_rawmidi_info_t structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>rawmidi device number </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" line="524" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="524" bodyend="528"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1ga3fea97d5bff26c54831e95b2200f857c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int snd_rawmidi_info_get_subdevice</definition>
        <argsstring>(const snd_rawmidi_info_t *info)</argsstring>
        <name>snd_rawmidi_info_get_subdevice</name>
        <param>
          <type>const <ref refid="group___raw_midi_1gab0f0f325ab812941e9b81addf0b941d3" kindref="member">snd_rawmidi_info_t</ref> *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>get rawmidi subdevice number </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_rawmidi_info_t structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>rawmidi subdevice number </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" line="535" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="535" bodyend="539"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1ga760552af30a089ddacc3af79985e24f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___raw_midi_1gac3d11365c928cdfd3176ffede3e6f8c5" kindref="member">snd_rawmidi_stream_t</ref></type>
        <definition>snd_rawmidi_stream_t snd_rawmidi_info_get_stream</definition>
        <argsstring>(const snd_rawmidi_info_t *info)</argsstring>
        <name>snd_rawmidi_info_get_stream</name>
        <param>
          <type>const <ref refid="group___raw_midi_1gab0f0f325ab812941e9b81addf0b941d3" kindref="member">snd_rawmidi_info_t</ref> *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>get rawmidi stream identification </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_rawmidi_info_t structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>rawmidi stream identification </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" line="546" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="546" bodyend="550"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1ga463916bd78a0ab5a96a053edca05a8d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_rawmidi_info_get_card</definition>
        <argsstring>(const snd_rawmidi_info_t *info)</argsstring>
        <name>snd_rawmidi_info_get_card</name>
        <param>
          <type>const <ref refid="group___raw_midi_1gab0f0f325ab812941e9b81addf0b941d3" kindref="member">snd_rawmidi_info_t</ref> *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>get rawmidi card number </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_rawmidi_info_t structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>rawmidi card number </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" line="557" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="557" bodyend="561"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1gaf9ede5bbc9abc9124910c2612363de30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int snd_rawmidi_info_get_flags</definition>
        <argsstring>(const snd_rawmidi_info_t *info)</argsstring>
        <name>snd_rawmidi_info_get_flags</name>
        <param>
          <type>const <ref refid="group___raw_midi_1gab0f0f325ab812941e9b81addf0b941d3" kindref="member">snd_rawmidi_info_t</ref> *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>get rawmidi flags </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_rawmidi_info_t structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>rawmidi flags </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" line="568" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="568" bodyend="572"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1gac7ac90e99759ee7b2dddd3613219c798" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* snd_rawmidi_info_get_id</definition>
        <argsstring>(const snd_rawmidi_info_t *info)</argsstring>
        <name>snd_rawmidi_info_get_id</name>
        <param>
          <type>const <ref refid="group___raw_midi_1gab0f0f325ab812941e9b81addf0b941d3" kindref="member">snd_rawmidi_info_t</ref> *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>get rawmidi hardware driver identifier </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_rawmidi_info_t structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>rawmidi hardware driver identifier </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" line="579" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="579" bodyend="583"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1gafd809c976c1dab23957e338b5af2a353" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* snd_rawmidi_info_get_name</definition>
        <argsstring>(const snd_rawmidi_info_t *info)</argsstring>
        <name>snd_rawmidi_info_get_name</name>
        <param>
          <type>const <ref refid="group___raw_midi_1gab0f0f325ab812941e9b81addf0b941d3" kindref="member">snd_rawmidi_info_t</ref> *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>get rawmidi hardware driver name </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_rawmidi_info_t structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>rawmidi hardware driver name </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" line="590" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="590" bodyend="594"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1ga428398f23118575aa4f62eed860132cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* snd_rawmidi_info_get_subdevice_name</definition>
        <argsstring>(const snd_rawmidi_info_t *info)</argsstring>
        <name>snd_rawmidi_info_get_subdevice_name</name>
        <param>
          <type>const <ref refid="group___raw_midi_1gab0f0f325ab812941e9b81addf0b941d3" kindref="member">snd_rawmidi_info_t</ref> *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>get rawmidi subdevice name </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_rawmidi_info_t structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>rawmidi subdevice name </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" line="601" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="601" bodyend="605"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1gac0b33eb2f54cd6fc9b34002fe28ca9fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int snd_rawmidi_info_get_subdevices_count</definition>
        <argsstring>(const snd_rawmidi_info_t *info)</argsstring>
        <name>snd_rawmidi_info_get_subdevices_count</name>
        <param>
          <type>const <ref refid="group___raw_midi_1gab0f0f325ab812941e9b81addf0b941d3" kindref="member">snd_rawmidi_info_t</ref> *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>get rawmidi count of subdevices </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_rawmidi_info_t structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>rawmidi count of subdevices </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" line="612" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="612" bodyend="616"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1ga71717ea1f35bf2a59548d3d106278336" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int snd_rawmidi_info_get_subdevices_avail</definition>
        <argsstring>(const snd_rawmidi_info_t *info)</argsstring>
        <name>snd_rawmidi_info_get_subdevices_avail</name>
        <param>
          <type>const <ref refid="group___raw_midi_1gab0f0f325ab812941e9b81addf0b941d3" kindref="member">snd_rawmidi_info_t</ref> *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>get rawmidi available count of subdevices </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_rawmidi_info_t structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>rawmidi available count of subdevices </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" line="623" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="623" bodyend="627"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1ga98fcdcb94c12baf65dd0ec8f9d52ef59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_rawmidi_info_set_device</definition>
        <argsstring>(snd_rawmidi_info_t *info, unsigned int val)</argsstring>
        <name>snd_rawmidi_info_set_device</name>
        <param>
          <type><ref refid="group___raw_midi_1gab0f0f325ab812941e9b81addf0b941d3" kindref="member">snd_rawmidi_info_t</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>set rawmidi device number </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_rawmidi_info_t structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>device number </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" line="634" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="634" bodyend="638"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1ga49eff1cd1b62e0399826740863cdcce3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_rawmidi_info_set_subdevice</definition>
        <argsstring>(snd_rawmidi_info_t *info, unsigned int val)</argsstring>
        <name>snd_rawmidi_info_set_subdevice</name>
        <param>
          <type><ref refid="group___raw_midi_1gab0f0f325ab812941e9b81addf0b941d3" kindref="member">snd_rawmidi_info_t</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>set rawmidi subdevice number </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_rawmidi_info_t structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>subdevice number </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" line="645" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="645" bodyend="649"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1gad704ac98c8313235c73c23d374bf6831" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_rawmidi_info_set_stream</definition>
        <argsstring>(snd_rawmidi_info_t *info, snd_rawmidi_stream_t val)</argsstring>
        <name>snd_rawmidi_info_set_stream</name>
        <param>
          <type><ref refid="group___raw_midi_1gab0f0f325ab812941e9b81addf0b941d3" kindref="member">snd_rawmidi_info_t</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type><ref refid="group___raw_midi_1gac3d11365c928cdfd3176ffede3e6f8c5" kindref="member">snd_rawmidi_stream_t</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>set rawmidi stream identifier </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_rawmidi_info_t structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>rawmidi stream identifier </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" line="656" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="656" bodyend="660"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1ga3c3595d2907ee30754f6a1d5ceb2d97f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_rawmidi_info</definition>
        <argsstring>(snd_rawmidi_t *rawmidi, snd_rawmidi_info_t *info)</argsstring>
        <name>snd_rawmidi_info</name>
        <param>
          <type><ref refid="group___raw_midi_1gaa21972df6ca3ebde0f7225b2472d0095" kindref="member">snd_rawmidi_t</ref> *</type>
          <declname>rawmidi</declname>
        </param>
        <param>
          <type><ref refid="group___raw_midi_1gab0f0f325ab812941e9b81addf0b941d3" kindref="member">snd_rawmidi_info_t</ref> *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>get information about RawMidi handle </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rawmidi</parametername>
</parameternamelist>
<parameterdescription>
<para>RawMidi handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_rawmidi_info_t structure to be filled </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" line="668" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="668" bodyend="673"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1gaeb5767a318d349a4d2a100191c3cf8d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t snd_rawmidi_params_sizeof</definition>
        <argsstring>()</argsstring>
        <name>snd_rawmidi_params_sizeof</name>
        <briefdescription>
<para>get size of the snd_rawmidi_params_t structure in bytes </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>size of the snd_rawmidi_params_t structure in bytes </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" line="679" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="679" bodyend="682"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1gaedc01312384764d02b6bc946cb1e79a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_rawmidi_params_malloc</definition>
        <argsstring>(snd_rawmidi_params_t **params)</argsstring>
        <name>snd_rawmidi_params_malloc</name>
        <param>
          <type><ref refid="group___raw_midi_1ga98ad06bccfabc646530241d3a0eef5a1" kindref="member">snd_rawmidi_params_t</ref> **</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>allocate the snd_rawmidi_params_t structure </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>returned pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code if fails</para></simplesect>
Allocates a new snd_rawmidi_params_t structure using the standard malloc C library function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" line="692" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="692" bodyend="699"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1gad8c735ed6a8533655dabd7318f25a6fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_rawmidi_params_free</definition>
        <argsstring>(snd_rawmidi_params_t *params)</argsstring>
        <name>snd_rawmidi_params_free</name>
        <param>
          <type><ref refid="group___raw_midi_1ga98ad06bccfabc646530241d3a0eef5a1" kindref="member">snd_rawmidi_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>frees the snd_rawmidi_params_t structure </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the <ref refid="group___raw_midi_1ga98ad06bccfabc646530241d3a0eef5a1" kindref="member">snd_rawmidi_params_t</ref> structure to free</para></parameterdescription>
</parameteritem>
</parameterlist>
Frees the given snd_rawmidi_params_t structure using the standard free C library function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" line="708" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="708" bodyend="712"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1ga533710a31f6b6b4f6791baa27e69089f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_rawmidi_params_copy</definition>
        <argsstring>(snd_rawmidi_params_t *dst, const snd_rawmidi_params_t *src)</argsstring>
        <name>snd_rawmidi_params_copy</name>
        <param>
          <type><ref refid="group___raw_midi_1ga98ad06bccfabc646530241d3a0eef5a1" kindref="member">snd_rawmidi_params_t</ref> *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="group___raw_midi_1ga98ad06bccfabc646530241d3a0eef5a1" kindref="member">snd_rawmidi_params_t</ref> *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>copy one snd_rawmidi_params_t structure to another </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>destination snd_rawmidi_params_t structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>source snd_rawmidi_params_t structure </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" line="719" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="719" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1ga612c96757e2f81fda5b6cd6dec826de1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_rawmidi_params_set_buffer_size</definition>
        <argsstring>(snd_rawmidi_t *rawmidi, snd_rawmidi_params_t *params, size_t val)</argsstring>
        <name>snd_rawmidi_params_set_buffer_size</name>
        <param>
          <type><ref refid="group___raw_midi_1gaa21972df6ca3ebde0f7225b2472d0095" kindref="member">snd_rawmidi_t</ref> *</type>
          <declname>rawmidi</declname>
        </param>
        <param>
          <type><ref refid="group___raw_midi_1ga98ad06bccfabc646530241d3a0eef5a1" kindref="member">snd_rawmidi_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>set rawmidi I/O ring buffer size </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rawmidi</parametername>
</parameternamelist>
<parameterdescription>
<para>RawMidi handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_rawmidi_params_t structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>size in bytes </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" line="735" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="735" bodyend="742"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1ga0bd9629686062562b88bfd2a3eadc1bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t snd_rawmidi_params_get_buffer_size</definition>
        <argsstring>(const snd_rawmidi_params_t *params)</argsstring>
        <name>snd_rawmidi_params_get_buffer_size</name>
        <param>
          <type>const <ref refid="group___raw_midi_1ga98ad06bccfabc646530241d3a0eef5a1" kindref="member">snd_rawmidi_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>get rawmidi I/O ring buffer size </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_rawmidi_params_t structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>size of rawmidi I/O ring buffer in bytes </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" line="749" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="749" bodyend="753"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1ga89782681ce86b3d5cbebb5136d25439f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_rawmidi_params_set_avail_min</definition>
        <argsstring>(snd_rawmidi_t *rawmidi, snd_rawmidi_params_t *params, size_t val)</argsstring>
        <name>snd_rawmidi_params_set_avail_min</name>
        <param>
          <type><ref refid="group___raw_midi_1gaa21972df6ca3ebde0f7225b2472d0095" kindref="member">snd_rawmidi_t</ref> *</type>
          <declname>rawmidi</declname>
        </param>
        <param>
          <type><ref refid="group___raw_midi_1ga98ad06bccfabc646530241d3a0eef5a1" kindref="member">snd_rawmidi_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>set minimum available bytes in rawmidi I/O ring buffer for wakeup </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rawmidi</parametername>
</parameternamelist>
<parameterdescription>
<para>RawMidi handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_rawmidi_params_t structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>desired value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" line="764" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="764" bodyend="771"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1gae629f2ef814eda39dc081dff65bf7d20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t snd_rawmidi_params_get_avail_min</definition>
        <argsstring>(const snd_rawmidi_params_t *params)</argsstring>
        <name>snd_rawmidi_params_get_avail_min</name>
        <param>
          <type>const <ref refid="group___raw_midi_1ga98ad06bccfabc646530241d3a0eef5a1" kindref="member">snd_rawmidi_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>get minimum available bytes in rawmidi I/O ring buffer for wakeup </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to snd_rawmidi_params_t structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>minimum available bytes </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" line="778" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="778" bodyend="782"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1gab717719be70fe4396dc84f3f895d6e12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_rawmidi_params_set_no_active_sensing</definition>
        <argsstring>(snd_rawmidi_t *rawmidi, snd_rawmidi_params_t *params, int val)</argsstring>
        <name>snd_rawmidi_params_set_no_active_sensing</name>
        <param>
          <type><ref refid="group___raw_midi_1gaa21972df6ca3ebde0f7225b2472d0095" kindref="member">snd_rawmidi_t</ref> *</type>
          <declname>rawmidi</declname>
        </param>
        <param>
          <type><ref refid="group___raw_midi_1ga98ad06bccfabc646530241d3a0eef5a1" kindref="member">snd_rawmidi_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>set no-active-sensing action on <ref refid="group___raw_midi_1gabc6bd5922151fb50196f62b9a4ab9f56" kindref="member">snd_rawmidi_close()</ref> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rawmidi</parametername>
</parameternamelist>
<parameterdescription>
<para>RawMidi handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to snd_rawmidi_params_t structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>value: 0 = enable to send the active sensing message, 1 = disable </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" line="794" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="794" bodyend="800"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1ga6a057d467faa2b65ddace364fde985fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_rawmidi_params_get_no_active_sensing</definition>
        <argsstring>(const snd_rawmidi_params_t *params)</argsstring>
        <name>snd_rawmidi_params_get_no_active_sensing</name>
        <param>
          <type>const <ref refid="group___raw_midi_1ga98ad06bccfabc646530241d3a0eef5a1" kindref="member">snd_rawmidi_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>get no-active-sensing action status </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to snd_rawmidi_params_t structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the current status (0 = enable, 1 = disable the active sensing message) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" line="807" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="807" bodyend="811"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1ga458d8ad22277645d9b65fa47c011465c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_rawmidi_params</definition>
        <argsstring>(snd_rawmidi_t *rawmidi, snd_rawmidi_params_t *params)</argsstring>
        <name>snd_rawmidi_params</name>
        <param>
          <type><ref refid="group___raw_midi_1gaa21972df6ca3ebde0f7225b2472d0095" kindref="member">snd_rawmidi_t</ref> *</type>
          <declname>rawmidi</declname>
        </param>
        <param>
          <type><ref refid="group___raw_midi_1ga98ad06bccfabc646530241d3a0eef5a1" kindref="member">snd_rawmidi_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>set parameters about rawmidi stream </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rawmidi</parametername>
</parameternamelist>
<parameterdescription>
<para>RawMidi handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_rawmidi_params_t structure to be filled </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" line="819" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="819" bodyend="831"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1ga86eabf81acd7c43fc100c67fbda5085d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_rawmidi_params_current</definition>
        <argsstring>(snd_rawmidi_t *rawmidi, snd_rawmidi_params_t *params)</argsstring>
        <name>snd_rawmidi_params_current</name>
        <param>
          <type><ref refid="group___raw_midi_1gaa21972df6ca3ebde0f7225b2472d0095" kindref="member">snd_rawmidi_t</ref> *</type>
          <declname>rawmidi</declname>
        </param>
        <param>
          <type><ref refid="group___raw_midi_1ga98ad06bccfabc646530241d3a0eef5a1" kindref="member">snd_rawmidi_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>get current parameters about rawmidi stream </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rawmidi</parametername>
</parameternamelist>
<parameterdescription>
<para>RawMidi handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_rawmidi_params_t structure to be filled </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" line="839" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="839" bodyend="847"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1ga7933bdb7eea04815be0bba98261865e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t snd_rawmidi_status_sizeof</definition>
        <argsstring>()</argsstring>
        <name>snd_rawmidi_status_sizeof</name>
        <briefdescription>
<para>get size of the snd_rawmidi_status_t structure in bytes </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>size of the snd_rawmidi_status_t structure in bytes </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" line="853" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="853" bodyend="856"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1gac1035208bbdf81852dbcf2e14ce4a8dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_rawmidi_status_malloc</definition>
        <argsstring>(snd_rawmidi_status_t **ptr)</argsstring>
        <name>snd_rawmidi_status_malloc</name>
        <param>
          <type><ref refid="group___raw_midi_1ga10a44a41000ef7dfe61f712466237aff" kindref="member">snd_rawmidi_status_t</ref> **</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>allocate the snd_rawmidi_status_t structure </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>returned pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code if fails</para></simplesect>
Allocates a new snd_rawmidi_status_t structure using the standard malloc C library function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" line="866" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="866" bodyend="873"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1gac9852f68911bbb8aef21d2e20c3ff2c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_rawmidi_status_free</definition>
        <argsstring>(snd_rawmidi_status_t *status)</argsstring>
        <name>snd_rawmidi_status_free</name>
        <param>
          <type><ref refid="group___raw_midi_1ga10a44a41000ef7dfe61f712466237aff" kindref="member">snd_rawmidi_status_t</ref> *</type>
          <declname>status</declname>
        </param>
        <briefdescription>
<para>frees the snd_rawmidi_status_t structure </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the snd_rawmidi_status_t structure to free</para></parameterdescription>
</parameteritem>
</parameterlist>
Frees the given snd_rawmidi_status_t structure using the standard free C library function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" line="882" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="882" bodyend="886"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1gab62e8a4ca0033166f906a969048d935c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_rawmidi_status_copy</definition>
        <argsstring>(snd_rawmidi_status_t *dst, const snd_rawmidi_status_t *src)</argsstring>
        <name>snd_rawmidi_status_copy</name>
        <param>
          <type><ref refid="group___raw_midi_1ga10a44a41000ef7dfe61f712466237aff" kindref="member">snd_rawmidi_status_t</ref> *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="group___raw_midi_1ga10a44a41000ef7dfe61f712466237aff" kindref="member">snd_rawmidi_status_t</ref> *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>copy one snd_rawmidi_status_t structure to another </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>destination snd_rawmidi_status_t structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>source snd_rawmidi_status_t structure </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" line="893" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="893" bodyend="897"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1gaeb867dbf1d4d5fb3bdcad36a86565837" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_rawmidi_status_get_tstamp</definition>
        <argsstring>(const snd_rawmidi_status_t *status, snd_htimestamp_t *tstamp)</argsstring>
        <name>snd_rawmidi_status_get_tstamp</name>
        <param>
          <type>const <ref refid="group___raw_midi_1ga10a44a41000ef7dfe61f712466237aff" kindref="member">snd_rawmidi_status_t</ref> *</type>
          <declname>status</declname>
        </param>
        <param>
          <type><ref refid="group___global_1ga3a3f5b65c40f498cdbc26944bd9855cf" kindref="member">snd_htimestamp_t</ref> *</type>
          <declname>tstamp</declname>
        </param>
        <briefdescription>
<para>get the start timestamp </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_rawmidi_status_t structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tstamp</parametername>
</parameternamelist>
<parameterdescription>
<para>returned timestamp value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" line="904" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="904" bodyend="908"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1ga7ff63a2376b2df549698296d37b532ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t snd_rawmidi_status_get_avail</definition>
        <argsstring>(const snd_rawmidi_status_t *status)</argsstring>
        <name>snd_rawmidi_status_get_avail</name>
        <param>
          <type>const <ref refid="group___raw_midi_1ga10a44a41000ef7dfe61f712466237aff" kindref="member">snd_rawmidi_status_t</ref> *</type>
          <declname>status</declname>
        </param>
        <briefdescription>
<para>get current available bytes in the rawmidi I/O ring buffer </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_rawmidi_status_t structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>current available bytes in the rawmidi I/O ring buffer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" line="915" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="915" bodyend="919"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1gae4f69ac10574cfc2cd5c848628e75f9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t snd_rawmidi_status_get_xruns</definition>
        <argsstring>(const snd_rawmidi_status_t *status)</argsstring>
        <name>snd_rawmidi_status_get_xruns</name>
        <param>
          <type>const <ref refid="group___raw_midi_1ga10a44a41000ef7dfe61f712466237aff" kindref="member">snd_rawmidi_status_t</ref> *</type>
          <declname>status</declname>
        </param>
        <briefdescription>
<para>get count of xruns </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_rawmidi_status_t structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>count of xruns </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" line="926" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="926" bodyend="930"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1gab888bce923769882931f77603327231d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_rawmidi_status</definition>
        <argsstring>(snd_rawmidi_t *rawmidi, snd_rawmidi_status_t *status)</argsstring>
        <name>snd_rawmidi_status</name>
        <param>
          <type><ref refid="group___raw_midi_1gaa21972df6ca3ebde0f7225b2472d0095" kindref="member">snd_rawmidi_t</ref> *</type>
          <declname>rawmidi</declname>
        </param>
        <param>
          <type><ref refid="group___raw_midi_1ga10a44a41000ef7dfe61f712466237aff" kindref="member">snd_rawmidi_status_t</ref> *</type>
          <declname>status</declname>
        </param>
        <briefdescription>
<para>get status of rawmidi stream </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rawmidi</parametername>
</parameternamelist>
<parameterdescription>
<para>RawMidi handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a snd_rawmidi_status_t structure to be filled </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" line="938" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="938" bodyend="943"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1ga01076c87d169cf77334d35bd094abd0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_rawmidi_drop</definition>
        <argsstring>(snd_rawmidi_t *rawmidi)</argsstring>
        <name>snd_rawmidi_drop</name>
        <param>
          <type><ref refid="group___raw_midi_1gaa21972df6ca3ebde0f7225b2472d0095" kindref="member">snd_rawmidi_t</ref> *</type>
          <declname>rawmidi</declname>
        </param>
        <briefdescription>
<para>drop all bytes in the rawmidi I/O ring buffer immediately </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rawmidi</parametername>
</parameternamelist>
<parameterdescription>
<para>RawMidi handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" line="950" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="950" bodyend="954"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1gabfff7417ec957b7ee07882f91d73d7be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_rawmidi_drain</definition>
        <argsstring>(snd_rawmidi_t *rawmidi)</argsstring>
        <name>snd_rawmidi_drain</name>
        <param>
          <type><ref refid="group___raw_midi_1gaa21972df6ca3ebde0f7225b2472d0095" kindref="member">snd_rawmidi_t</ref> *</type>
          <declname>rawmidi</declname>
        </param>
        <briefdescription>
<para>drain all bytes in the rawmidi I/O ring buffer </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rawmidi</parametername>
</parameternamelist>
<parameterdescription>
<para>RawMidi handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code</para></simplesect>
Waits until all MIDI bytes are not drained (sent) to the hardware device. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" line="964" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="964" bodyend="968"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1ga0a30e482efec57f4ea74c533a0f9b134" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssize_t</type>
        <definition>ssize_t snd_rawmidi_write</definition>
        <argsstring>(snd_rawmidi_t *rawmidi, const void *buffer, size_t size)</argsstring>
        <name>snd_rawmidi_write</name>
        <param>
          <type><ref refid="group___raw_midi_1gaa21972df6ca3ebde0f7225b2472d0095" kindref="member">snd_rawmidi_t</ref> *</type>
          <declname>rawmidi</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>write MIDI bytes to MIDI stream </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rawmidi</parametername>
</parameternamelist>
<parameterdescription>
<para>RawMidi handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer containing MIDI bytes </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>output buffer size in bytes </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" line="976" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="976" bodyend="982"/>
      </memberdef>
      <memberdef kind="function" id="group___raw_midi_1ga9b0952fc04facda83cdf1521325ca475" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssize_t</type>
        <definition>ssize_t snd_rawmidi_read</definition>
        <argsstring>(snd_rawmidi_t *rawmidi, void *buffer, size_t size)</argsstring>
        <name>snd_rawmidi_read</name>
        <param>
          <type><ref refid="group___raw_midi_1gaa21972df6ca3ebde0f7225b2472d0095" kindref="member">snd_rawmidi_t</ref> *</type>
          <declname>rawmidi</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>read MIDI bytes from MIDI stream </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rawmidi</parametername>
</parameternamelist>
<parameterdescription>
<para>RawMidi handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer to store the input MIDI bytes </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>input buffer size in bytes </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" line="990" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c" bodystart="990" bodyend="996"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>RawMidi Interface. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Jaroslav Kysela <ulink url="mailto:perex@perex.cz">perex@perex.cz</ulink> </para></simplesect>
<simplesect kind="author"><para>Abramo Bagnara <ulink url="mailto:abramo@alsa-project.org">abramo@alsa-project.org</ulink> </para></simplesect>
<simplesect kind="date"><para>2000-2001</para></simplesect>
See the <ref refid="rawmidi" kindref="compound">RawMidi interface</ref> page for more details. </para>    </detaileddescription>
    <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/rawmidi/rawmidi.c"/>
  </compounddef>
</doxygen>
