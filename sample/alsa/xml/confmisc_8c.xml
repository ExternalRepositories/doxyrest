<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="confmisc_8c" kind="file" language="C++">
    <compoundname>confmisc.c</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">ctype.h</includes>
    <includes local="yes">local.h</includes>
    <incdepgraph>
      <node id="119">
        <label>stdlib.h</label>
      </node>
      <node id="118">
        <label>/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/confmisc.c</label>
        <link refid="confmisc_8c"/>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
      </node>
      <node id="121">
        <label>string.h</label>
      </node>
      <node id="123">
        <label>local.h</label>
      </node>
      <node id="122">
        <label>ctype.h</label>
      </node>
      <node id="120">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___config_1ga11dfab861b537b564f0c76d9b1eb2935" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_config_get_bool_ascii</definition>
        <argsstring>(const char *ascii)</argsstring>
        <name>snd_config_get_bool_ascii</name>
        <param>
          <type>const char *</type>
          <declname>ascii</declname>
        </param>
        <briefdescription>
<para>Gets the boolean value from the given ASCII string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ascii</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to be parsed. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 or 1 if successful, otherwise a negative error code. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/confmisc.c" line="88" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/confmisc.c" bodystart="88" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="group___config_1gae5d80ee31e779992fd14672fd850a3d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_config_get_bool</definition>
        <argsstring>(const snd_config_t *conf)</argsstring>
        <name>snd_config_get_bool</name>
        <param>
          <type>const <ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>conf</declname>
        </param>
        <briefdescription>
<para>Gets the boolean value from a configuration node. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conf</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to the configuration node to be parsed. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 or 1 if successful, otherwise a negative error code. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/confmisc.c" line="116" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/confmisc.c" bodystart="116" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="group___config_1ga5759c972706da4bd3be35c9336568bfd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_config_get_ctl_iface_ascii</definition>
        <argsstring>(const char *ascii)</argsstring>
        <name>snd_config_get_ctl_iface_ascii</name>
        <param>
          <type>const char *</type>
          <declname>ascii</declname>
        </param>
        <briefdescription>
<para>Gets the control interface index from the given ASCII string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ascii</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to be parsed. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The control interface index if successful, otherwise a negative error code. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/confmisc.c" line="150" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/confmisc.c" bodystart="150" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="group___config_1gaaf1c1ea4801961e3107ca23ba89bd429" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_config_get_ctl_iface</definition>
        <argsstring>(const snd_config_t *conf)</argsstring>
        <name>snd_config_get_ctl_iface</name>
        <param>
          <type>const <ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>conf</declname>
        </param>
        <briefdescription>
<para>Gets the control interface index from a configuration node. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conf</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to the configuration node to be parsed. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The control interface index if successful, otherwise a negative error code. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/confmisc.c" line="173" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/confmisc.c" bodystart="173" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="confmisc_8c_1a033eab97ee6619aeb8c5eca585acf6c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_func_getenv</definition>
        <argsstring>(snd_config_t **dst, snd_config_t *root, snd_config_t *src, snd_config_t *private_data)</argsstring>
        <name>snd_func_getenv</name>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> **</type>
          <declname>dst</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>root</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>private_data</declname>
        </param>
        <briefdescription>
<para>Returns an environment value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>The function puts the handle to the result configuration node (with type string) at the address specified by <computeroutput>dst</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>root</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to the root source node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to the source node, with definitions for <computeroutput>vars</computeroutput> and <computeroutput>default</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>private_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to the <computeroutput>private_data</computeroutput> node. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero if successful, otherwise a negative error code.</para></simplesect>
Example: <programlisting><codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>@func<sp/>getenv</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>vars<sp/>[<sp/>MY_CARD<sp/>CARD<sp/>C<sp/>]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>default<sp/>0</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/confmisc.c" line="225" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/confmisc.c" bodystart="225" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="confmisc_8c_1a121864fba02478b9f605be44c97f5dc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_func_igetenv</definition>
        <argsstring>(snd_config_t **dst, snd_config_t *root, snd_config_t *src, snd_config_t *private_data)</argsstring>
        <name>snd_func_igetenv</name>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> **</type>
          <declname>dst</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>root</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>private_data</declname>
        </param>
        <briefdescription>
<para>Returns an integer environment value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>The function puts the handle to the result configuration node (with type integer) at the address specified by <computeroutput>dst</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>root</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to the root source node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to the source node, with definitions for <computeroutput>vars</computeroutput> and <computeroutput>default</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>private_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to the <computeroutput>private_data</computeroutput> node. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero if successful, otherwise a negative error code.</para></simplesect>
Example: <programlisting><codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>@func<sp/>igetenv</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>vars<sp/>[<sp/>MY_DEVICE<sp/>DEVICE<sp/>D<sp/>]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>default<sp/>0</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/confmisc.c" line="325" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/confmisc.c" bodystart="325" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="confmisc_8c_1a43a3685d5e397fdc0e46af6d7b121616" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_func_concat</definition>
        <argsstring>(snd_config_t **dst, snd_config_t *root, snd_config_t *src, snd_config_t *private_data)</argsstring>
        <name>snd_func_concat</name>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> **</type>
          <declname>dst</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>root</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>private_data</declname>
        </param>
        <briefdescription>
<para>Merges the given strings. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>The function puts the handle to the result configuration node (with type string) at the address specified by <computeroutput>dst</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>root</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to the root source node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to the source node, with a definition for <computeroutput>strings</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>private_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to the <computeroutput>private_data</computeroutput> node. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A non-negative value if successful, otherwise a negative error code.</para></simplesect>
Example (result is &quot;a1b2c3&quot;): <programlisting><codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>@func<sp/>concat</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>strings<sp/>[<sp/>&quot;a1&quot;<sp/>&quot;b2&quot;<sp/>&quot;c3&quot;<sp/>]</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/confmisc.c" line="376" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/confmisc.c" bodystart="376" bodyend="446"/>
      </memberdef>
      <memberdef kind="function" id="confmisc_8c_1a806c295ad9616f40c2d47b168afa66ad" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_func_iops</definition>
        <argsstring>(snd_config_t **dst, snd_config_t *root, snd_config_t *src, snd_config_t *private_data, int op)</argsstring>
        <name>snd_func_iops</name>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> **</type>
          <declname>dst</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>root</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>private_data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/confmisc.c" line="452" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/confmisc.c" bodystart="452" bodyend="511"/>
      </memberdef>
      <memberdef kind="function" id="confmisc_8c_1a4e7acbc261ca8b6bf4602753ea5c17fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_func_iadd</definition>
        <argsstring>(snd_config_t **dst, snd_config_t *root, snd_config_t *src, snd_config_t *private_data)</argsstring>
        <name>snd_func_iadd</name>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> **</type>
          <declname>dst</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>root</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>private_data</declname>
        </param>
        <briefdescription>
<para>Sum the given integers. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>The function puts the handle to the result configuration node (with type integer) at the address specified by <computeroutput>dst</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>root</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to the root source node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to the source node, with a definition for <computeroutput>integers</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>private_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to the <computeroutput>private_data</computeroutput> node. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A non-negative value if successful, otherwise a negative error code.</para></simplesect>
Example (result is 10): <programlisting><codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>@func<sp/>iadd</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>integers<sp/>[<sp/>2<sp/>3<sp/>5<sp/>]</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/confmisc.c" line="531" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/confmisc.c" bodystart="531" bodyend="535"/>
      </memberdef>
      <memberdef kind="function" id="confmisc_8c_1a12f4b8b67e0976a260859edb929f4d36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_func_imul</definition>
        <argsstring>(snd_config_t **dst, snd_config_t *root, snd_config_t *src, snd_config_t *private_data)</argsstring>
        <name>snd_func_imul</name>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> **</type>
          <declname>dst</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>root</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>private_data</declname>
        </param>
        <briefdescription>
<para>Multiply the given integers. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>The function puts the handle to the result configuration node (with type integer) at the address specified by <computeroutput>dst</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>root</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to the root source node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to the source node, with a definition for <computeroutput>integers</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>private_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to the <computeroutput>private_data</computeroutput> node. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A non-negative value if successful, otherwise a negative error code.</para></simplesect>
Example (result is 12): <programlisting><codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>@func<sp/>imul</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>integers<sp/>[<sp/>2<sp/>3<sp/>2<sp/>]</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/confmisc.c" line="557" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/confmisc.c" bodystart="557" bodyend="561"/>
      </memberdef>
      <memberdef kind="function" id="confmisc_8c_1aa24c85e86b4c1f6c4d2d440e4782d098" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_func_datadir</definition>
        <argsstring>(snd_config_t **dst, snd_config_t *root, snd_config_t *src, snd_config_t *private_data)</argsstring>
        <name>snd_func_datadir</name>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> **</type>
          <declname>dst</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>root</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>private_data</declname>
        </param>
        <briefdescription>
<para>Returns the ALSA data directory. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>The function puts the handle to the result configuration node (with type string) at the address specified by <computeroutput>dst</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>root</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to the root source node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to the source node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>private_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to the <computeroutput>private_data</computeroutput> node. Not used. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A non-negative value if successful, otherwise a negative error code.</para></simplesect>
Example (result is &quot;/usr/share/alsa&quot; using the default paths): <programlisting><codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>@func<sp/>datadir</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/confmisc.c" line="582" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/confmisc.c" bodystart="582" bodyend="592"/>
      </memberdef>
      <memberdef kind="function" id="confmisc_8c_1ac418ebcd1f3f52ccb1cba12c09c67cc6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int open_ctl</definition>
        <argsstring>(long card, snd_ctl_t **ctl)</argsstring>
        <name>open_ctl</name>
        <param>
          <type>long</type>
          <declname>card</declname>
        </param>
        <param>
          <type><ref refid="group___control_1ga06628f38def84a0fe3da74041db9d51f" kindref="member">snd_ctl_t</ref> **</type>
          <declname>ctl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/confmisc.c" line="597" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/confmisc.c" bodystart="597" bodyend="603"/>
      </memberdef>
      <memberdef kind="function" id="confmisc_8c_1af14b528e2502f2037294301473389948" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_func_private_string</definition>
        <argsstring>(snd_config_t **dst, snd_config_t *root, snd_config_t *src, snd_config_t *private_data)</argsstring>
        <name>snd_func_private_string</name>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> **</type>
          <declname>dst</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>root</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>private_data</declname>
        </param>
        <briefdescription>
<para>Returns the string from <computeroutput>private_data</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>The function puts the handle to the result configuration node (with type string) at the address specified by <computeroutput>dst</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>root</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to the root source node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to the source node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>private_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to the <computeroutput>private_data</computeroutput> node (type string, id &quot;string&quot;). </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A non-negative value if successful, otherwise a negative error code.</para></simplesect>
Example: <programlisting><codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>@func<sp/>private_string</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/confmisc.c" line="636" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/confmisc.c" bodystart="636" bodyend="658"/>
      </memberdef>
      <memberdef kind="function" id="confmisc_8c_1a7bc4fec8cb3499997934a00210d34fe7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_func_private_card_driver</definition>
        <argsstring>(snd_config_t **dst, snd_config_t *root, snd_config_t *src, snd_config_t *private_data)</argsstring>
        <name>snd_func_private_card_driver</name>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> **</type>
          <declname>dst</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>root</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>private_data</declname>
        </param>
        <briefdescription>
<para>Returns the driver identification from <computeroutput>private_data</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>The function puts the handle to the result configuration node (with type string) at the address specified by <computeroutput>dst</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>root</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to the root source node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to the source node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>private_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to the <computeroutput>private_data</computeroutput> node (type integer, id &quot;card&quot;). </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A non-negative value if successful, otherwise a negative error code.</para></simplesect>
Example: <programlisting><codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>@func<sp/>private_card_driver</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/confmisc.c" line="713" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/confmisc.c" bodystart="713" bodyend="738"/>
      </memberdef>
      <memberdef kind="function" id="confmisc_8c_1af9f65a7d671e32c2c0f1b6999860b9da" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int parse_card</definition>
        <argsstring>(snd_config_t *root, snd_config_t *src, snd_config_t *private_data)</argsstring>
        <name>parse_card</name>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>root</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>private_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/confmisc.c" line="743" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/confmisc.c" bodystart="743" bodyend="770"/>
      </memberdef>
      <memberdef kind="function" id="confmisc_8c_1a023f9fd40df7c2c428a457b6ec7f8004" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_func_card_inum</definition>
        <argsstring>(snd_config_t **dst, snd_config_t *root, snd_config_t *src, snd_config_t *private_data)</argsstring>
        <name>snd_func_card_inum</name>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> **</type>
          <declname>dst</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>root</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>private_data</declname>
        </param>
        <briefdescription>
<para>Returns the card number as integer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>The function puts the handle to the result configuration node (with type string) at the address specified by <computeroutput>dst</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>root</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to the root source node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to the source node, with a <computeroutput>card</computeroutput> definition. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>private_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to the <computeroutput>private_data</computeroutput> node. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A non-negative value if successful, otherwise a negative error code.</para></simplesect>
Example: <programlisting><codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>@func<sp/>card_inum</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>card<sp/>&apos;0&apos;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/confmisc.c" line="789" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/confmisc.c" bodystart="789" bodyend="802"/>
      </memberdef>
      <memberdef kind="function" id="confmisc_8c_1a2d147e387821449a8927d60ef4f8ff16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_func_card_driver</definition>
        <argsstring>(snd_config_t **dst, snd_config_t *root, snd_config_t *src, snd_config_t *private_data)</argsstring>
        <name>snd_func_card_driver</name>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> **</type>
          <declname>dst</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>root</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>private_data</declname>
        </param>
        <briefdescription>
<para>Returns the driver identification for a card. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>The function puts the handle to the result configuration node (with type string) at the address specified by <computeroutput>dst</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>root</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to the root source node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to the source node, with a <computeroutput>card</computeroutput> definition. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>private_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to the <computeroutput>private_data</computeroutput> node. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A non-negative value if successful, otherwise a negative error code.</para></simplesect>
Example: <programlisting><codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>@func<sp/>card_driver</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>card<sp/>0</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/confmisc.c" line="824" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/confmisc.c" bodystart="824" bodyend="839"/>
      </memberdef>
      <memberdef kind="function" id="confmisc_8c_1a9ccfc361f1bc1d81837335de02707ee8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_func_card_id</definition>
        <argsstring>(snd_config_t **dst, snd_config_t *root, snd_config_t *src, snd_config_t *private_data)</argsstring>
        <name>snd_func_card_id</name>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> **</type>
          <declname>dst</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>root</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>private_data</declname>
        </param>
        <briefdescription>
<para>Returns the identification of a card. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>The function puts the handle to the result configuration node (with type string) at the address specified by <computeroutput>dst</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>root</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to the root source node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to the source node, with a <computeroutput>card</computeroutput> definition. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>private_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to the <computeroutput>private_data</computeroutput> node. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A non-negative value if successful, otherwise a negative error code.</para></simplesect>
Example: <programlisting><codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>@func<sp/>card_id</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>card<sp/>0</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/confmisc.c" line="861" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/confmisc.c" bodystart="861" bodyend="890"/>
      </memberdef>
      <memberdef kind="function" id="confmisc_8c_1aba1ae0185e2d3e9b50291b40e7048181" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_func_card_name</definition>
        <argsstring>(snd_config_t **dst, snd_config_t *root, snd_config_t *src, snd_config_t *private_data)</argsstring>
        <name>snd_func_card_name</name>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> **</type>
          <declname>dst</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>root</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>private_data</declname>
        </param>
        <briefdescription>
<para>Returns the name of a card. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>The function puts the handle to the result configuration node (with type string) at the address specified by <computeroutput>dst</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>root</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to the root source node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to the source node, with a <computeroutput>card</computeroutput> definition. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>private_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to the <computeroutput>private_data</computeroutput> node. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A non-negative value if successful, otherwise a negative error code.</para></simplesect>
Example: <programlisting><codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>@func<sp/>card_name</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>card<sp/>0</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/confmisc.c" line="912" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/confmisc.c" bodystart="912" bodyend="941"/>
      </memberdef>
      <memberdef kind="function" id="confmisc_8c_1a8d91af8387a708c526bac3ee2c7ea10e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_func_refer</definition>
        <argsstring>(snd_config_t **dst, snd_config_t *root, snd_config_t *src, snd_config_t *private_data)</argsstring>
        <name>snd_func_refer</name>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> **</type>
          <declname>dst</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>root</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>private_data</declname>
        </param>
        <briefdescription>
<para>Copies the specified configuration node. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>The function puts the handle to the result configuration node (with the same type as the specified node) at the address specified by <computeroutput>dst</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>root</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to the root source node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to the source node, with definitions for <computeroutput>name</computeroutput> and (optionally) <computeroutput>file</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>private_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to the <computeroutput>private_data</computeroutput> node. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A non-negative value if successful, otherwise a negative error code. </para></simplesect>
<simplesect kind="note"><para>The root source node can be modified!</para></simplesect>
Example: <programlisting><codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>@func<sp/>refer</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>file<sp/>&quot;/etc/myconf.conf&quot;<sp/><sp/><sp/><sp/><sp/>#<sp/>optional</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>name<sp/>&quot;id1.id2.id3&quot;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/confmisc.c" line="1222" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/confmisc.c" bodystart="1222" bodyend="1296"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Configuration helper functions. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Abramo Bagnara <ulink url="mailto:abramo@alsa-project.org">abramo@alsa-project.org</ulink> </para></simplesect>
<simplesect kind="author"><para>Jaroslav Kysela <ulink url="mailto:perex@perex.cz">perex@perex.cz</ulink> </para></simplesect>
<simplesect kind="date"><para>2000-2001</para></simplesect>
Configuration helper functions.</para><para>See the <ref refid="conffunc" kindref="compound">Runtime functions in configuration files</ref> page for more details. </para>    </detaileddescription>
    <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/confmisc.c"/>
  </compounddef>
</doxygen>
