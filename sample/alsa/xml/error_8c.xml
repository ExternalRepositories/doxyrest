<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="error_8c" kind="file" language="C++">
    <compoundname>error.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdarg.h</includes>
    <includes local="no">string.h</includes>
    <includes local="yes">local.h</includes>
    <incdepgraph>
      <node id="231">
        <label>stdarg.h</label>
      </node>
      <node id="230">
        <label>stdlib.h</label>
      </node>
      <node id="228">
        <label>/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/error.c</label>
        <link refid="error_8c"/>
        <childnode refid="229" relation="include">
        </childnode>
        <childnode refid="230" relation="include">
        </childnode>
        <childnode refid="231" relation="include">
        </childnode>
        <childnode refid="232" relation="include">
        </childnode>
        <childnode refid="233" relation="include">
        </childnode>
      </node>
      <node id="232">
        <label>string.h</label>
      </node>
      <node id="233">
        <label>local.h</label>
      </node>
      <node id="229">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="error_8c_1a95668ab5ac8f3fded3f8024194b6b19f" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* snd_error_codes[]</definition>
        <argsstring>[]</argsstring>
        <name>snd_error_codes</name>
        <initializer>=
{
	&quot;Sound protocol is not compatible&quot;
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Array of error codes in US ASCII. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/error.c" line="40" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/error.c" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="error_8c_1a9d2d17f79763926f17889009a1147553" prot="public" static="yes" mutable="no">
        <type>TLS_PFX <ref refid="error_8h_1a431fec30429b0e9cf1a5fe35734ff98a" kindref="member">snd_local_error_handler_t</ref></type>
        <definition>TLS_PFX snd_local_error_handler_t local_error</definition>
        <argsstring></argsstring>
        <name>local_error</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/error.c" line="71" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/error.c" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group___error_1gad6a605072dcc056de5f86d67687d90a6" prot="public" static="no" mutable="no">
        <type><ref refid="group___error_1gae71d39953bf482ba487d811a69a9175c" kindref="member">snd_lib_error_handler_t</ref></type>
        <definition>snd_lib_error_handler_t snd_lib_error</definition>
        <argsstring></argsstring>
        <name>snd_lib_error</name>
        <initializer>= snd_lib_error_default</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to the error handler function. For internal use only. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/error.c" line="120" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/error.c" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="error_8c_1a9bea29fb70a0932bd17f91b47926dfbe" prot="public" static="no" mutable="no">
        <type><ref refid="group___error_1gae71d39953bf482ba487d811a69a9175c" kindref="member">snd_lib_error_handler_t</ref></type>
        <definition>snd_lib_error_handler_t snd_err_msg</definition>
        <argsstring></argsstring>
        <name>snd_err_msg</name>
        <initializer>= snd_err_msg_default</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The ALSA error message handler </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/error.c" line="177" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/error.c" bodystart="177" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___error_1ga182bbadf2349e11602bc531e8cf22f7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* snd_strerror</definition>
        <argsstring>(int errnum)</argsstring>
        <name>snd_strerror</name>
        <param>
          <type>int</type>
          <declname>errnum</declname>
        </param>
        <briefdescription>
<para>Returns the message for an error code. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>errnum</parametername>
</parameternamelist>
<parameterdescription>
<para>The error code number, which must be a system error code or an ALSA error code. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The ASCII description of the given numeric error code. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/error.c" line="51" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/error.c" bodystart="51" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="error_8c_1a88c091aae3b291d5097078dd39f42408" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="error_8h_1a431fec30429b0e9cf1a5fe35734ff98a" kindref="member">snd_local_error_handler_t</ref></type>
        <definition>snd_local_error_handler_t snd_lib_error_set_local</definition>
        <argsstring>(snd_local_error_handler_t func)</argsstring>
        <name>snd_lib_error_set_local</name>
        <param>
          <type><ref refid="error_8h_1a431fec30429b0e9cf1a5fe35734ff98a" kindref="member">snd_local_error_handler_t</ref></type>
          <declname>func</declname>
        </param>
        <briefdescription>
<para>Install local error handler. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>func</parametername>
</parameternamelist>
<parameterdescription>
<para>The local error handler function </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Previous</parametername>
</parameternamelist>
<parameterdescription>
<para>local error handler function </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/error.c" line="78" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/error.c" bodystart="78" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="error_8c_1aca34eed0a74b5d51332e62b568483d4f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void snd_lib_error_default</definition>
        <argsstring>(const char *file, int line, const char *function, int err, const char *fmt,...)</argsstring>
        <name>snd_lib_error_default</name>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>function</declname>
        </param>
        <param>
          <type>int</type>
          <declname>err</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>The default error handler function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>The filename where the error was hit. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>The line number. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>function</parametername>
</parameternamelist>
<parameterdescription>
<para>The function name. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>The error code. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fmt</parametername>
</parameternamelist>
<parameterdescription>
<para>The message (including the format characters). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional arguments.</para></parameterdescription>
</parameteritem>
</parameterlist>
If a local error function has been installed for the current thread by <ref refid="error_8c_1a88c091aae3b291d5097078dd39f42408" kindref="member">snd_lib_error_set_local</ref>, it is called. Otherwise, prints the error message including location to <computeroutput>stderr</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/error.c" line="98" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/error.c" bodystart="98" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="group___error_1ga6ba1f0aa6c6bc5d335ab297d6019cb03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_lib_error_set_handler</definition>
        <argsstring>(snd_lib_error_handler_t handler)</argsstring>
        <name>snd_lib_error_set_handler</name>
        <param>
          <type><ref refid="group___error_1gae71d39953bf482ba487d811a69a9175c" kindref="member">snd_lib_error_handler_t</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Sets the error handler. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer to the new error handler function.</para></parameterdescription>
</parameteritem>
</parameterlist>
This function sets a new error handler, or (if <computeroutput>handler</computeroutput> is <computeroutput>NULL</computeroutput>) the default one which prints the error messages to <computeroutput>stderr</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/error.c" line="129" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/error.c" bodystart="129" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="group___global_1ga1b8d6e2acb0a62de5c23bd8aef3ec225" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* snd_asoundlib_version</definition>
        <argsstring>(void)</argsstring>
        <name>snd_asoundlib_version</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns the ALSA sound library version in ASCII format. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The ASCII description of the used ALSA sound library. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/error.c" line="143" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/error.c" bodystart="143" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="error_8c_1ae1af96d620615216110cf9c7cc78d740" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void snd_err_msg_default</definition>
        <argsstring>(const char *file, int line, const char *function, int err, const char *fmt,...)</argsstring>
        <name>snd_err_msg_default</name>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>function</declname>
        </param>
        <param>
          <type>int</type>
          <declname>err</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/error.c" line="152" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/error.c" bodystart="152" bodyend="172"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Error code handling routines. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Jaroslav Kysela <ulink url="mailto:perex@perex.cz">perex@perex.cz</ulink> </para></simplesect>
<simplesect kind="date"><para>1998-2001</para></simplesect>
Error code handling routines. </para>    </detaileddescription>
    <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/error.c"/>
  </compounddef>
</doxygen>
