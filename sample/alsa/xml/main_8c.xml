<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="main_8c" kind="file" language="C++">
    <compoundname>main.c</compoundname>
    <includes local="yes">ucm_local.h</includes>
    <includes local="yes">local.h</includes>
    <includes local="no">pthread.h</includes>
    <includes local="yes">use-case.h</includes>
    <includes local="no">ctype.h</includes>
    <includes local="no">stdarg.h</includes>
    <includes local="no">sys/stat.h</includes>
    <includes local="no">limits.h</includes>
    <incdepgraph>
      <node id="796">
        <label>sys/stat.h</label>
      </node>
      <node id="795">
        <label>stdarg.h</label>
      </node>
      <node id="789">
        <label>/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c</label>
        <link refid="main_8c"/>
        <childnode refid="790" relation="include">
        </childnode>
        <childnode refid="791" relation="include">
        </childnode>
        <childnode refid="792" relation="include">
        </childnode>
        <childnode refid="793" relation="include">
        </childnode>
        <childnode refid="794" relation="include">
        </childnode>
        <childnode refid="795" relation="include">
        </childnode>
        <childnode refid="796" relation="include">
        </childnode>
        <childnode refid="797" relation="include">
        </childnode>
      </node>
      <node id="793">
        <label>use-case.h</label>
      </node>
      <node id="790">
        <label>ucm_local.h</label>
      </node>
      <node id="797">
        <label>limits.h</label>
      </node>
      <node id="792">
        <label>pthread.h</label>
      </node>
      <node id="791">
        <label>local.h</label>
      </node>
      <node id="794">
        <label>ctype.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="main_8c_1a2c8f23b27c1dc2e98c8c5600740aa034" prot="public" static="no">
        <name>find</name>
        <param><defname>list</defname></param>
        <param><defname>type</defname></param>
        <param><defname>member</defname></param>
        <param><defname>value</defname></param>
        <param><defname>match</defname></param>
        <initializer>find0(list, (unsigned long)(&amp;((type *)0)-&gt;member), \
		    (unsigned long)(&amp;((type *)0)-&gt;value), match)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="565" column="9" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="565" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1aac4eb2d1dccbf290a2f9d1ec17ee0c26" prot="public" static="no">
        <name>get_list</name>
        <param><defname>list</defname></param>
        <param><defname>result</defname></param>
        <param><defname>type</defname></param>
        <param><defname>member</defname></param>
        <param><defname>s1</defname></param>
        <initializer>get_list0(list, result, \
	            (unsigned long)(&amp;((type *)0)-&gt;member), \
		    (unsigned long)(&amp;((type *)0)-&gt;s1))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="611" column="9" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="611" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1aa57fbf0a54670e177f1dbdb02f206114" prot="public" static="no">
        <name>get_list2</name>
        <param><defname>list</defname></param>
        <param><defname>result</defname></param>
        <param><defname>type</defname></param>
        <param><defname>member</defname></param>
        <param><defname>s1</defname></param>
        <param><defname>s2</defname></param>
        <initializer>get_list20(list, result, \
	            (unsigned long)(&amp;((type *)0)-&gt;member), \
		    (unsigned long)(&amp;((type *)0)-&gt;s1), \
		    (unsigned long)(&amp;((type *)0)-&gt;s2))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="669" column="9" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="669" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="main_8c_1afd2265faec0f6bae478bd700af2eba2b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int get_value1</definition>
        <argsstring>(char **value, struct list_head *value_list, const char *identifier)</argsstring>
        <name>get_value1</name>
        <param>
          <type>char **</type>
          <declname>value</declname>
        </param>
        <param>
          <type>struct list_head *</type>
          <declname>value_list</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>identifier</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="44" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="1384" bodyend="1403"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1adf3e2f11c3495e8030b0fe50ff77c629" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int get_value3</definition>
        <argsstring>(char **value, const char *identifier, struct list_head *value_list1, struct list_head *value_list2, struct list_head *value_list3)</argsstring>
        <name>get_value3</name>
        <param>
          <type>char **</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>identifier</declname>
        </param>
        <param>
          <type>struct list_head *</type>
          <declname>value_list1</declname>
        </param>
        <param>
          <type>struct list_head *</type>
          <declname>value_list2</declname>
        </param>
        <param>
          <type>struct list_head *</type>
          <declname>value_list3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="46" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="1405" bodyend="1423"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1ac47e26fee6ca767f6d88e46e42029044" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int execute_component_seq</definition>
        <argsstring>(snd_use_case_mgr_t *uc_mgr, struct component_sequence *cmpt_seq, struct list_head *value_list1, struct list_head *value_list2, struct list_head *value_list3, char *cdev)</argsstring>
        <name>execute_component_seq</name>
        <param>
          <type><ref refid="group__ucm_1gace35ebd33e632cba9441762f6633a20e" kindref="member">snd_use_case_mgr_t</ref> *</type>
          <declname>uc_mgr</declname>
        </param>
        <param>
          <type>struct component_sequence *</type>
          <declname>cmpt_seq</declname>
        </param>
        <param>
          <type>struct list_head *</type>
          <declname>value_list1</declname>
        </param>
        <param>
          <type>struct list_head *</type>
          <declname>value_list2</declname>
        </param>
        <param>
          <type>struct list_head *</type>
          <declname>value_list3</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>cdev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="52" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="487" bodyend="519"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1ab423b9a344aa9738036b444355ddce36" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int check_identifier</definition>
        <argsstring>(const char *identifier, const char *prefix)</argsstring>
        <name>check_identifier</name>
        <param>
          <type>const char *</type>
          <declname>identifier</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>prefix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="59" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="59" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1aa59a9cb9f6fce9ae0eaf8274b167204a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int list_count</definition>
        <argsstring>(struct list_head *list)</argsstring>
        <name>list_count</name>
        <param>
          <type>struct list_head *</type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="71" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="71" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a05feee5a521b3a150b0858cb53f47a33" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int alloc_str_list</definition>
        <argsstring>(struct list_head *list, int mult, char **result[])</argsstring>
        <name>alloc_str_list</name>
        <param>
          <type>struct list_head *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mult</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>result</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="82" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="82" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="group__ucm_1ga530159363360c3cae3c9816c034fbcc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* snd_use_case_identifier</definition>
        <argsstring>(const char *fmt,...)</argsstring>
        <name>snd_use_case_identifier</name>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>Create an identifier. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fmt</parametername>
</parameternamelist>
<parameterdescription>
<para>Format (sprintf like) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional arguments for sprintf like format </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Allocated string identifier or NULL on error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="105" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="105" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="group__ucm_1ga003553ee6fd13119fc9e08ffcdd959f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_use_case_free_list</definition>
        <argsstring>(const char *list[], int items)</argsstring>
        <name>snd_use_case_free_list</name>
        <param>
          <type>const char *</type>
          <declname>list</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>items</declname>
        </param>
        <briefdescription>
<para>Free a string list. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>The string list to free </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>items</parametername>
</parameternamelist>
<parameterdescription>
<para>Count of strings </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero if success, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="130" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="130" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a414a3fc57476bbcd35bfb2777ed6f4e9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int open_ctl</definition>
        <argsstring>(snd_use_case_mgr_t *uc_mgr, snd_ctl_t **ctl, const char *ctl_dev)</argsstring>
        <name>open_ctl</name>
        <param>
          <type><ref refid="group__ucm_1gace35ebd33e632cba9441762f6633a20e" kindref="member">snd_use_case_mgr_t</ref> *</type>
          <declname>uc_mgr</declname>
        </param>
        <param>
          <type><ref refid="group___control_1ga06628f38def84a0fe3da74041db9d51f" kindref="member">snd_ctl_t</ref> **</type>
          <declname>ctl</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>ctl_dev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="141" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="141" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a68f0b67617a6adcffcf6e22392b48a26" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int read_tlv_file</definition>
        <argsstring>(unsigned int **res, const char *filepath)</argsstring>
        <name>read_tlv_file</name>
        <param>
          <type>unsigned int **</type>
          <declname>res</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filepath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="172" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="172" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1ac8f2e2a29d1477e9c19e5021984d09e5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int binary_file_parse</definition>
        <argsstring>(snd_ctl_elem_value_t *dst, snd_ctl_elem_info_t *info, const char *filepath)</argsstring>
        <name>binary_file_parse</name>
        <param>
          <type><ref refid="group___control_1ga266b478eb64f1cdd75e337df4b4b995e" kindref="member">snd_ctl_elem_value_t</ref> *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type><ref refid="group___control_1ga2cae0bb76df919368e4ff9a7021dd3ab" kindref="member">snd_ctl_elem_info_t</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filepath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="223" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="223" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a22f55e6ccf5313ae3108807da8d85039" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int __snd_ctl_ascii_elem_id_parse</definition>
        <argsstring>(snd_ctl_elem_id_t *dst, const char *str, const char **ret_ptr)</argsstring>
        <name>__snd_ctl_ascii_elem_id_parse</name>
        <param>
          <type><ref refid="group___control_1gad6c3746f1925bfec6a4fd0e913430e55" kindref="member">snd_ctl_elem_id_t</ref> *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>ret_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="277" column="1"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1ab67af7de17640e3a93dbcc6c7673e3d8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int execute_cset</definition>
        <argsstring>(snd_ctl_t *ctl, const char *cset, unsigned int type)</argsstring>
        <name>execute_cset</name>
        <param>
          <type><ref refid="group___control_1ga06628f38def84a0fe3da74041db9d51f" kindref="member">snd_ctl_t</ref> *</type>
          <declname>ctl</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>cset</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="281" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="281" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a7cdbd4896dc1d164d572b601cb70b4f6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int execute_sequence</definition>
        <argsstring>(snd_use_case_mgr_t *uc_mgr, struct list_head *seq, struct list_head *value_list1, struct list_head *value_list2, struct list_head *value_list3)</argsstring>
        <name>execute_sequence</name>
        <param>
          <type><ref refid="group__ucm_1gace35ebd33e632cba9441762f6633a20e" kindref="member">snd_use_case_mgr_t</ref> *</type>
          <declname>uc_mgr</declname>
        </param>
        <param>
          <type>struct list_head *</type>
          <declname>seq</declname>
        </param>
        <param>
          <type>struct list_head *</type>
          <declname>value_list1</declname>
        </param>
        <param>
          <type>struct list_head *</type>
          <declname>value_list2</declname>
        </param>
        <param>
          <type>struct list_head *</type>
          <declname>value_list3</declname>
        </param>
        <briefdescription>
<para>Execute the sequence. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uc_mgr</parametername>
</parameternamelist>
<parameterdescription>
<para>Use case manager </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>seq</parametername>
</parameternamelist>
<parameterdescription>
<para>Sequence </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>zero on success, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="354" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="354" bodyend="476"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1ac45cd6247050858b61d8678b62f3ed1c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int import_master_config</definition>
        <argsstring>(snd_use_case_mgr_t *uc_mgr)</argsstring>
        <name>import_master_config</name>
        <param>
          <type><ref refid="group__ucm_1gace35ebd33e632cba9441762f6633a20e" kindref="member">snd_use_case_mgr_t</ref> *</type>
          <declname>uc_mgr</declname>
        </param>
        <briefdescription>
<para>Import master config and execute the default sequence. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uc_mgr</parametername>
</parameternamelist>
<parameterdescription>
<para>Use case manager </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>zero on success, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="526" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="526" bodyend="538"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1abd312686590b23f3b0ab27d18672d44f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>static void* find0</definition>
        <argsstring>(struct list_head *list, unsigned long offset, unsigned long soffset, const char *match)</argsstring>
        <name>find0</name>
        <param>
          <type>struct list_head *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>soffset</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>match</declname>
        </param>
        <briefdescription>
<para>Universal find - string in a list. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>List of structures </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset of list structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>soffset</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset of string structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>match</parametername>
</parameternamelist>
<parameterdescription>
<para>String to match </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>structure on success, otherwise a NULL (not found) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="548" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="548" bodyend="563"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a30c53c050cc7e9b5731596d35e58d39b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int get_list0</definition>
        <argsstring>(struct list_head *list, const char **result[], unsigned long offset, unsigned long s1offset)</argsstring>
        <name>get_list0</name>
        <param>
          <type>struct list_head *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>result</declname>
          <array>[]</array>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>s1offset</declname>
        </param>
        <briefdescription>
<para>Universal string list. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>List of structures </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>Result list </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset of list structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s1offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset of string structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>count of items on success, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="577" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="577" bodyend="609"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a5dfa00563725505784795250b63f1379" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int get_list20</definition>
        <argsstring>(struct list_head *list, const char **result[], unsigned long offset, unsigned long s1offset, unsigned long s2offset)</argsstring>
        <name>get_list20</name>
        <param>
          <type>struct list_head *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>result</declname>
          <array>[]</array>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>s1offset</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>s2offset</declname>
        </param>
        <briefdescription>
<para>Universal string list - pair of strings. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>List of structures </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>Result list </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset of list structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s1offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset of string structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s1offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset of string structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>count of items on success, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="625" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="625" bodyend="667"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a970ad69fc243e7ea29a3f2b739e49fb8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct use_case_verb *</type>
        <definition>static struct use_case_verb* find_verb</definition>
        <argsstring>(snd_use_case_mgr_t *uc_mgr, const char *verb_name)</argsstring>
        <name>find_verb</name>
        <param>
          <type><ref refid="group__ucm_1gace35ebd33e632cba9441762f6633a20e" kindref="member">snd_use_case_mgr_t</ref> *</type>
          <declname>uc_mgr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>verb_name</declname>
        </param>
        <briefdescription>
<para>Find verb. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uc_mgr</parametername>
</parameternamelist>
<parameterdescription>
<para>Use case manager </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>verb_name</parametername>
</parameternamelist>
<parameterdescription>
<para>verb to find </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>structure on success, otherwise a NULL (not found) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="681" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="681" bodyend="687"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1aa8ce566c82dc0546a6801e70467079b6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int is_devlist_supported</definition>
        <argsstring>(snd_use_case_mgr_t *uc_mgr, struct dev_list *dev_list)</argsstring>
        <name>is_devlist_supported</name>
        <param>
          <type><ref refid="group__ucm_1gace35ebd33e632cba9441762f6633a20e" kindref="member">snd_use_case_mgr_t</ref> *</type>
          <declname>uc_mgr</declname>
        </param>
        <param>
          <type>struct dev_list *</type>
          <declname>dev_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="689" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="689" bodyend="720"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a9f487b7e80a5e982db33a3fdc68fc3ad" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int is_modifier_supported</definition>
        <argsstring>(snd_use_case_mgr_t *uc_mgr, struct use_case_modifier *modifier)</argsstring>
        <name>is_modifier_supported</name>
        <param>
          <type><ref refid="group__ucm_1gace35ebd33e632cba9441762f6633a20e" kindref="member">snd_use_case_mgr_t</ref> *</type>
          <declname>uc_mgr</declname>
        </param>
        <param>
          <type>struct use_case_modifier *</type>
          <declname>modifier</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="722" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="722" bodyend="726"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1af48b89f7cbe687da900223831b091ea2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int is_device_supported</definition>
        <argsstring>(snd_use_case_mgr_t *uc_mgr, struct use_case_device *device)</argsstring>
        <name>is_device_supported</name>
        <param>
          <type><ref refid="group__ucm_1gace35ebd33e632cba9441762f6633a20e" kindref="member">snd_use_case_mgr_t</ref> *</type>
          <declname>uc_mgr</declname>
        </param>
        <param>
          <type>struct use_case_device *</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="728" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="728" bodyend="732"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a8fa4c5d131edd9b25fc6e05eb0f5434b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct use_case_device *</type>
        <definition>static struct use_case_device* find_device</definition>
        <argsstring>(snd_use_case_mgr_t *uc_mgr, struct use_case_verb *verb, const char *device_name, int check_supported)</argsstring>
        <name>find_device</name>
        <param>
          <type><ref refid="group__ucm_1gace35ebd33e632cba9441762f6633a20e" kindref="member">snd_use_case_mgr_t</ref> *</type>
          <declname>uc_mgr</declname>
        </param>
        <param>
          <type>struct use_case_verb *</type>
          <declname>verb</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>device_name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>check_supported</declname>
        </param>
        <briefdescription>
<para>Find device. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>verb</parametername>
</parameternamelist>
<parameterdescription>
<para>Use case verb </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>device_name</parametername>
</parameternamelist>
<parameterdescription>
<para>device to find </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>structure on success, otherwise a NULL (not found) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="741" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="741" bodyend="760"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1ac097e6916e13c8605afea064627628b1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct use_case_modifier *</type>
        <definition>static struct use_case_modifier* find_modifier</definition>
        <argsstring>(snd_use_case_mgr_t *uc_mgr, struct use_case_verb *verb, const char *modifier_name, int check_supported)</argsstring>
        <name>find_modifier</name>
        <param>
          <type><ref refid="group__ucm_1gace35ebd33e632cba9441762f6633a20e" kindref="member">snd_use_case_mgr_t</ref> *</type>
          <declname>uc_mgr</declname>
        </param>
        <param>
          <type>struct use_case_verb *</type>
          <declname>verb</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>modifier_name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>check_supported</declname>
        </param>
        <briefdescription>
<para>Find modifier. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>verb</parametername>
</parameternamelist>
<parameterdescription>
<para>Use case verb </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>modifier_name</parametername>
</parameternamelist>
<parameterdescription>
<para>modifier to find </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>structure on success, otherwise a NULL (not found) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="769" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="769" bodyend="788"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a688ce108cbf434c3cc3288a32af24501" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long device_status</definition>
        <argsstring>(snd_use_case_mgr_t *uc_mgr, const char *device_name)</argsstring>
        <name>device_status</name>
        <param>
          <type><ref refid="group__ucm_1gace35ebd33e632cba9441762f6633a20e" kindref="member">snd_use_case_mgr_t</ref> *</type>
          <declname>uc_mgr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>device_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="790" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="790" bodyend="802"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a8419f98b8f5d043d5a9c16979795a39a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long modifier_status</definition>
        <argsstring>(snd_use_case_mgr_t *uc_mgr, const char *modifier_name)</argsstring>
        <name>modifier_status</name>
        <param>
          <type><ref refid="group__ucm_1gace35ebd33e632cba9441762f6633a20e" kindref="member">snd_use_case_mgr_t</ref> *</type>
          <declname>uc_mgr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>modifier_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="804" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="804" bodyend="816"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a85c1dd4454702deab073ddfde8a15162" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int set_verb</definition>
        <argsstring>(snd_use_case_mgr_t *uc_mgr, struct use_case_verb *verb, int enable)</argsstring>
        <name>set_verb</name>
        <param>
          <type><ref refid="group__ucm_1gace35ebd33e632cba9441762f6633a20e" kindref="member">snd_use_case_mgr_t</ref> *</type>
          <declname>uc_mgr</declname>
        </param>
        <param>
          <type>struct use_case_verb *</type>
          <declname>verb</declname>
        </param>
        <param>
          <type>int</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Set verb. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uc_mgr</parametername>
</parameternamelist>
<parameterdescription>
<para>Use case manager </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>verb</parametername>
</parameternamelist>
<parameterdescription>
<para>verb to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>enable</parametername>
</parameternamelist>
<parameterdescription>
<para>nonzero = enable, zero = disable </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>zero on success, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="825" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="825" bodyend="844"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a6ab89fd976805c3e9f0a08f283abd777" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int set_modifier</definition>
        <argsstring>(snd_use_case_mgr_t *uc_mgr, struct use_case_modifier *modifier, int enable)</argsstring>
        <name>set_modifier</name>
        <param>
          <type><ref refid="group__ucm_1gace35ebd33e632cba9441762f6633a20e" kindref="member">snd_use_case_mgr_t</ref> *</type>
          <declname>uc_mgr</declname>
        </param>
        <param>
          <type>struct use_case_modifier *</type>
          <declname>modifier</declname>
        </param>
        <param>
          <type>int</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Set modifier. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uc_mgr</parametername>
</parameternamelist>
<parameterdescription>
<para>Use case manager </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>modifier</parametername>
</parameternamelist>
<parameterdescription>
<para>modifier to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>enable</parametername>
</parameternamelist>
<parameterdescription>
<para>nonzero = enable, zero = disable </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>zero on success, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="853" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="853" bodyend="878"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a79cf2d41a1ca94c4e5889846db08c4d4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int set_device</definition>
        <argsstring>(snd_use_case_mgr_t *uc_mgr, struct use_case_device *device, int enable)</argsstring>
        <name>set_device</name>
        <param>
          <type><ref refid="group__ucm_1gace35ebd33e632cba9441762f6633a20e" kindref="member">snd_use_case_mgr_t</ref> *</type>
          <declname>uc_mgr</declname>
        </param>
        <param>
          <type>struct use_case_device *</type>
          <declname>device</declname>
        </param>
        <param>
          <type>int</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Set device. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uc_mgr</parametername>
</parameternamelist>
<parameterdescription>
<para>Use case manager </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>device</parametername>
</parameternamelist>
<parameterdescription>
<para>device to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>enable</parametername>
</parameternamelist>
<parameterdescription>
<para>nonzero = enable, zero = disable </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>zero on success, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="887" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="887" bodyend="912"/>
      </memberdef>
      <memberdef kind="function" id="group__ucm_1ga74f0ef0116590fe8eec1edeaf1d88847" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_use_case_mgr_open</definition>
        <argsstring>(snd_use_case_mgr_t **uc_mgr, const char *card_name)</argsstring>
        <name>snd_use_case_mgr_open</name>
        <param>
          <type><ref refid="group__ucm_1gace35ebd33e632cba9441762f6633a20e" kindref="member">snd_use_case_mgr_t</ref> **</type>
          <declname>uc_mgr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>card_name</declname>
        </param>
        <briefdescription>
<para>Init sound card use case manager. </para>        </briefdescription>
        <detaileddescription>
<para>Open and initialise use case core for sound card.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uc_mgr</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned use case manager pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>card_name</parametername>
</parameternamelist>
<parameterdescription>
<para>name of card to open </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>zero on success, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="920" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="920" bodyend="957"/>
      </memberdef>
      <memberdef kind="function" id="group__ucm_1gafedd1fc74ce9086033f6f668348321b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_use_case_mgr_reload</definition>
        <argsstring>(snd_use_case_mgr_t *uc_mgr)</argsstring>
        <name>snd_use_case_mgr_reload</name>
        <param>
          <type><ref refid="group__ucm_1gace35ebd33e632cba9441762f6633a20e" kindref="member">snd_use_case_mgr_t</ref> *</type>
          <declname>uc_mgr</declname>
        </param>
        <briefdescription>
<para>Reload and reparse all use case files. </para>        </briefdescription>
        <detaileddescription>
<para>Reload and re-parse use case configuration files for sound card.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uc_mgr</parametername>
</parameternamelist>
<parameterdescription>
<para>Use case manager </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>zero on success, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="964" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="964" bodyend="982"/>
      </memberdef>
      <memberdef kind="function" id="group__ucm_1gaac2bf25d233230d2d6a9e422795d716c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_use_case_mgr_close</definition>
        <argsstring>(snd_use_case_mgr_t *uc_mgr)</argsstring>
        <name>snd_use_case_mgr_close</name>
        <param>
          <type><ref refid="group__ucm_1gace35ebd33e632cba9441762f6633a20e" kindref="member">snd_use_case_mgr_t</ref> *</type>
          <declname>uc_mgr</declname>
        </param>
        <briefdescription>
<para>Close use case manager. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uc_mgr</parametername>
</parameternamelist>
<parameterdescription>
<para>Use case manager </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>zero on success, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="989" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="989" bodyend="994"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1abce8b7b22429dbd71d543c992bb6e950" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int dismantle_use_case</definition>
        <argsstring>(snd_use_case_mgr_t *uc_mgr)</argsstring>
        <name>dismantle_use_case</name>
        <param>
          <type><ref refid="group__ucm_1gace35ebd33e632cba9441762f6633a20e" kindref="member">snd_use_case_mgr_t</ref> *</type>
          <declname>uc_mgr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="999" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="999" bodyend="1035"/>
      </memberdef>
      <memberdef kind="function" id="group__ucm_1ga1364dba503c216b2e46085a3f4abd20a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_use_case_mgr_reset</definition>
        <argsstring>(snd_use_case_mgr_t *uc_mgr)</argsstring>
        <name>snd_use_case_mgr_reset</name>
        <param>
          <type><ref refid="group__ucm_1gace35ebd33e632cba9441762f6633a20e" kindref="member">snd_use_case_mgr_t</ref> *</type>
          <declname>uc_mgr</declname>
        </param>
        <briefdescription>
<para>Reset sound card controls to default values. </para>        </briefdescription>
        <detaileddescription>
<para>Reset use case manager verb, device, modifier to deafult settings.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uc_mgr</parametername>
</parameternamelist>
<parameterdescription>
<para>Use case manager </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>zero on success, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="1042" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="1042" bodyend="1054"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a18f5f12fb2cb4008e70607d3d02c0347" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int get_verb_list</definition>
        <argsstring>(snd_use_case_mgr_t *uc_mgr, const char **list[])</argsstring>
        <name>get_verb_list</name>
        <param>
          <type><ref refid="group__ucm_1gace35ebd33e632cba9441762f6633a20e" kindref="member">snd_use_case_mgr_t</ref> *</type>
          <declname>uc_mgr</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>list</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Get list of verbs in pair verbname+comment. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned list </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>verbname</parametername>
</parameternamelist>
<parameterdescription>
<para>For verb (NULL = current) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of list entries if success, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="1062" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="1062" bodyend="1067"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1ad90991038df4682f4d1f51c0c474bff6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int get_device_list</definition>
        <argsstring>(snd_use_case_mgr_t *uc_mgr, const char **list[], char *verbname)</argsstring>
        <name>get_device_list</name>
        <param>
          <type><ref refid="group__ucm_1gace35ebd33e632cba9441762f6633a20e" kindref="member">snd_use_case_mgr_t</ref> *</type>
          <declname>uc_mgr</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>list</declname>
          <array>[]</array>
        </param>
        <param>
          <type>char *</type>
          <declname>verbname</declname>
        </param>
        <briefdescription>
<para>Get list of devices in pair devicename+comment. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned list </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>verbname</parametername>
</parameternamelist>
<parameterdescription>
<para>For verb (NULL = current) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of list entries if success, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="1075" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="1075" bodyend="1090"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1ac4ed9d460a1e9816835d13900a8127c4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int get_modifier_list</definition>
        <argsstring>(snd_use_case_mgr_t *uc_mgr, const char **list[], char *verbname)</argsstring>
        <name>get_modifier_list</name>
        <param>
          <type><ref refid="group__ucm_1gace35ebd33e632cba9441762f6633a20e" kindref="member">snd_use_case_mgr_t</ref> *</type>
          <declname>uc_mgr</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>list</declname>
          <array>[]</array>
        </param>
        <param>
          <type>char *</type>
          <declname>verbname</declname>
        </param>
        <briefdescription>
<para>Get list of modifiers in pair devicename+comment. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned list </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>verbname</parametername>
</parameternamelist>
<parameterdescription>
<para>For verb (NULL = current) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of list entries if success, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="1098" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="1098" bodyend="1113"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1af39b388f3ee94a74ba8cb7636f223cea" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int get_supcon_device_list</definition>
        <argsstring>(snd_use_case_mgr_t *uc_mgr, const char **list[], char *name, enum dev_list_type type)</argsstring>
        <name>get_supcon_device_list</name>
        <param>
          <type><ref refid="group__ucm_1gace35ebd33e632cba9441762f6633a20e" kindref="member">snd_use_case_mgr_t</ref> *</type>
          <declname>uc_mgr</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>list</declname>
          <array>[]</array>
        </param>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>enum dev_list_type</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Get list of supported/conflicting devices. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned list </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of modifier or verb to query </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of device list entries to return </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of list entries if success, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="1122" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="1122" bodyend="1165"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a5de7affa70963d92d8fcada7aae3b2ae" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int get_supported_device_list</definition>
        <argsstring>(snd_use_case_mgr_t *uc_mgr, const char **list[], char *name)</argsstring>
        <name>get_supported_device_list</name>
        <param>
          <type><ref refid="group__ucm_1gace35ebd33e632cba9441762f6633a20e" kindref="member">snd_use_case_mgr_t</ref> *</type>
          <declname>uc_mgr</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>list</declname>
          <array>[]</array>
        </param>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Get list of supported devices. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned list </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of verb or modifier to query </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of list entries if success, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="1173" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="1173" bodyend="1177"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a5496a37c624828a6fafaa6629a63d003" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int get_conflicting_device_list</definition>
        <argsstring>(snd_use_case_mgr_t *uc_mgr, const char **list[], char *name)</argsstring>
        <name>get_conflicting_device_list</name>
        <param>
          <type><ref refid="group__ucm_1gace35ebd33e632cba9441762f6633a20e" kindref="member">snd_use_case_mgr_t</ref> *</type>
          <declname>uc_mgr</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>list</declname>
          <array>[]</array>
        </param>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Get list of conflicting devices. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned list </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of verb or modifier to query </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of list entries if success, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="1185" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="1185" bodyend="1189"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a49795ee1810de5fa67f28291005edda2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int add_values</definition>
        <argsstring>(struct list_head *list, const char *identifier, struct list_head *source)</argsstring>
        <name>add_values</name>
        <param>
          <type>struct list_head *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>identifier</declname>
        </param>
        <param>
          <type>struct list_head *</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="1198" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="1198" bodyend="1228"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a6c9715cee9f037fea34347bf54be692d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int get_value_list</definition>
        <argsstring>(snd_use_case_mgr_t *uc_mgr, const char *identifier, const char **list[], char *verbname)</argsstring>
        <name>get_value_list</name>
        <param>
          <type><ref refid="group__ucm_1gace35ebd33e632cba9441762f6633a20e" kindref="member">snd_use_case_mgr_t</ref> *</type>
          <declname>uc_mgr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>identifier</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>list</declname>
          <array>[]</array>
        </param>
        <param>
          <type>char *</type>
          <declname>verbname</declname>
        </param>
        <briefdescription>
<para>Get list of values. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned list </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>verbname</parametername>
</parameternamelist>
<parameterdescription>
<para>For verb (NULL = current) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of list entries if success, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="1236" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="1236" bodyend="1296"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a2aa4bb7f2e1c919ba7d446eccfc5dafc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int get_enabled_device_list</definition>
        <argsstring>(snd_use_case_mgr_t *uc_mgr, const char **list[])</argsstring>
        <name>get_enabled_device_list</name>
        <param>
          <type><ref refid="group__ucm_1gace35ebd33e632cba9441762f6633a20e" kindref="member">snd_use_case_mgr_t</ref> *</type>
          <declname>uc_mgr</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>list</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Get list of enabled devices. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned list </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>verbname</parametername>
</parameternamelist>
<parameterdescription>
<para>For verb (NULL = current) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of list entries if success, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="1304" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="1304" bodyend="1312"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a9658b60fab903de6cffffb20a43585aa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int get_enabled_modifier_list</definition>
        <argsstring>(snd_use_case_mgr_t *uc_mgr, const char **list[])</argsstring>
        <name>get_enabled_modifier_list</name>
        <param>
          <type><ref refid="group__ucm_1gace35ebd33e632cba9441762f6633a20e" kindref="member">snd_use_case_mgr_t</ref> *</type>
          <declname>uc_mgr</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>list</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Get list of enabled modifiers. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned list </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>verbname</parametername>
</parameternamelist>
<parameterdescription>
<para>For verb (NULL = current) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of list entries if success, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="1320" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="1320" bodyend="1328"/>
      </memberdef>
      <memberdef kind="function" id="group__ucm_1gaa128bcb412f42247e561b81ec342c2e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_use_case_get_list</definition>
        <argsstring>(snd_use_case_mgr_t *uc_mgr, const char *identifier, const char **list[])</argsstring>
        <name>snd_use_case_get_list</name>
        <param>
          <type><ref refid="group__ucm_1gace35ebd33e632cba9441762f6633a20e" kindref="member">snd_use_case_mgr_t</ref> *</type>
          <declname>uc_mgr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>identifier</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>list</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Obtain a list of entries. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uc_mgr</parametername>
</parameternamelist>
<parameterdescription>
<para>Use case manager (may be NULL - card list) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>identifier</parametername>
</parameternamelist>
<parameterdescription>
<para>(may be NULL - card list) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned allocated list </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of list entries if success, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="1337" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="1337" bodyend="1382"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1ab554d75a22353175ddc09d8422cedb26" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int get_value</definition>
        <argsstring>(snd_use_case_mgr_t *uc_mgr, const char *identifier, char **value, const char *mod_dev_name, const char *verb_name, int exact)</argsstring>
        <name>get_value</name>
        <param>
          <type><ref refid="group__ucm_1gace35ebd33e632cba9441762f6633a20e" kindref="member">snd_use_case_mgr_t</ref> *</type>
          <declname>uc_mgr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>identifier</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>mod_dev_name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>verb_name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>exact</declname>
        </param>
        <briefdescription>
<para>Get value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uc_mgr</parametername>
</parameternamelist>
<parameterdescription>
<para>Use case manager </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>identifier</parametername>
</parameternamelist>
<parameterdescription>
<para>Value identifier (string) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned value string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>item</parametername>
</parameternamelist>
<parameterdescription>
<para>Modifier or Device name (string) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero on success (value is filled), otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="1433" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="1433" bodyend="1491"/>
      </memberdef>
      <memberdef kind="function" id="group__ucm_1ga9c13ae514eeebf918adcec0e4534aca5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_use_case_get</definition>
        <argsstring>(snd_use_case_mgr_t *uc_mgr, const char *identifier, const char **value)</argsstring>
        <name>snd_use_case_get</name>
        <param>
          <type><ref refid="group__ucm_1gace35ebd33e632cba9441762f6633a20e" kindref="member">snd_use_case_mgr_t</ref> *</type>
          <declname>uc_mgr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>identifier</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Get current - string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uc_mgr</parametername>
</parameternamelist>
<parameterdescription>
<para>Use case manager </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>identifier</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Value pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero if success, otherwise a negative error code</para></simplesect>
Note: String is dynamically allocated, use free() to deallocate this string. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="1503" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="1503" bodyend="1576"/>
      </memberdef>
      <memberdef kind="function" id="group__ucm_1ga66311429dfd62743089be3eb79f1d1f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_use_case_geti</definition>
        <argsstring>(snd_use_case_mgr_t *uc_mgr, const char *identifier, long *value)</argsstring>
        <name>snd_use_case_geti</name>
        <param>
          <type><ref refid="group__ucm_1gace35ebd33e632cba9441762f6633a20e" kindref="member">snd_use_case_mgr_t</ref> *</type>
          <declname>uc_mgr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>identifier</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Get current - integer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uc_mgr</parametername>
</parameternamelist>
<parameterdescription>
<para>Use case manager </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>identifier</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Value if success, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="1585" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="1585" bodyend="1642"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a79e1a2adecac4723a69bbe030a42a58c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int handle_transition_verb</definition>
        <argsstring>(snd_use_case_mgr_t *uc_mgr, struct use_case_verb *new_verb)</argsstring>
        <name>handle_transition_verb</name>
        <param>
          <type><ref refid="group__ucm_1gace35ebd33e632cba9441762f6633a20e" kindref="member">snd_use_case_mgr_t</ref> *</type>
          <declname>uc_mgr</declname>
        </param>
        <param>
          <type>struct use_case_verb *</type>
          <declname>new_verb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="1644" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="1644" bodyend="1664"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a3a32f37520d70c65998a4bb59f1740a0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int set_verb_user</definition>
        <argsstring>(snd_use_case_mgr_t *uc_mgr, const char *verb_name)</argsstring>
        <name>set_verb_user</name>
        <param>
          <type><ref refid="group__ucm_1gace35ebd33e632cba9441762f6633a20e" kindref="member">snd_use_case_mgr_t</ref> *</type>
          <declname>uc_mgr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>verb_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="1666" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="1666" bodyend="1702"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a50e921b1d7c921897ba4564c5559cd21" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int set_device_user</definition>
        <argsstring>(snd_use_case_mgr_t *uc_mgr, const char *device_name, int enable)</argsstring>
        <name>set_device_user</name>
        <param>
          <type><ref refid="group__ucm_1gace35ebd33e632cba9441762f6633a20e" kindref="member">snd_use_case_mgr_t</ref> *</type>
          <declname>uc_mgr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>device_name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="1705" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="1705" bodyend="1717"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a625f41f0bf2707991680d56927b3df65" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int set_modifier_user</definition>
        <argsstring>(snd_use_case_mgr_t *uc_mgr, const char *modifier_name, int enable)</argsstring>
        <name>set_modifier_user</name>
        <param>
          <type><ref refid="group__ucm_1gace35ebd33e632cba9441762f6633a20e" kindref="member">snd_use_case_mgr_t</ref> *</type>
          <declname>uc_mgr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>modifier_name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="1719" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="1719" bodyend="1732"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a3280df917d25d49a0f05829c3795b622" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int switch_device</definition>
        <argsstring>(snd_use_case_mgr_t *uc_mgr, const char *old_device, const char *new_device)</argsstring>
        <name>switch_device</name>
        <param>
          <type><ref refid="group__ucm_1gace35ebd33e632cba9441762f6633a20e" kindref="member">snd_use_case_mgr_t</ref> *</type>
          <declname>uc_mgr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>old_device</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>new_device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="1734" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="1734" bodyend="1786"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a034dc141453af052882e8763e41258d0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int switch_modifier</definition>
        <argsstring>(snd_use_case_mgr_t *uc_mgr, const char *old_modifier, const char *new_modifier)</argsstring>
        <name>switch_modifier</name>
        <param>
          <type><ref refid="group__ucm_1gace35ebd33e632cba9441762f6633a20e" kindref="member">snd_use_case_mgr_t</ref> *</type>
          <declname>uc_mgr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>old_modifier</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>new_modifier</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="1788" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="1788" bodyend="1838"/>
      </memberdef>
      <memberdef kind="function" id="group__ucm_1gae9ff2a06c955d40ad0204f21f8352831" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_use_case_set</definition>
        <argsstring>(snd_use_case_mgr_t *uc_mgr, const char *identifier, const char *value)</argsstring>
        <name>snd_use_case_set</name>
        <param>
          <type><ref refid="group__ucm_1gace35ebd33e632cba9441762f6633a20e" kindref="member">snd_use_case_mgr_t</ref> *</type>
          <declname>uc_mgr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>identifier</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set new. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uc_mgr</parametername>
</parameternamelist>
<parameterdescription>
<para>Use case manager </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>identifier</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero if success, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" line="1847" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c" bodystart="1847" bodyend="1889"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/ucm/main.c"/>
  </compounddef>
</doxygen>
