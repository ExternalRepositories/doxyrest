<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="pcm__file_8c" kind="file" language="C++">
    <compoundname>pcm_file.c</compoundname>
    <includes local="yes">bswap.h</includes>
    <includes local="no">ctype.h</includes>
    <includes local="no">string.h</includes>
    <includes local="yes">pcm_local.h</includes>
    <includes local="yes">pcm_plugin.h</includes>
    <incdepgraph>
      <node id="472">
        <label>pcm_plugin.h</label>
      </node>
      <node id="470">
        <label>string.h</label>
      </node>
      <node id="467">
        <label>/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_file.c</label>
        <link refid="pcm__file_8c"/>
        <childnode refid="468" relation="include">
        </childnode>
        <childnode refid="469" relation="include">
        </childnode>
        <childnode refid="470" relation="include">
        </childnode>
        <childnode refid="471" relation="include">
        </childnode>
        <childnode refid="472" relation="include">
        </childnode>
      </node>
      <node id="469">
        <label>ctype.h</label>
      </node>
      <node id="471">
        <label>pcm_local.h</label>
      </node>
      <node id="468">
        <label>bswap.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="pcm__file_8c_1a5d6c0ea49fc19e6d02e369a09b2ee24b" prot="public" static="yes" mutable="no">
        <type>const snd_pcm_ops_t</type>
        <definition>const snd_pcm_ops_t snd_pcm_file_ops</definition>
        <argsstring></argsstring>
        <name>snd_pcm_file_ops</name>
        <initializer>= {
	.close = snd_pcm_file_close,
	.info = snd_pcm_generic_info,
	.hw_refine = snd_pcm_generic_hw_refine,
	.hw_params = snd_pcm_file_hw_params,
	.hw_free = snd_pcm_file_hw_free,
	.sw_params = snd_pcm_generic_sw_params,
	.channel_info = snd_pcm_generic_channel_info,
	.dump = snd_pcm_file_dump,
	.nonblock = snd_pcm_generic_nonblock,
	.async = snd_pcm_generic_async,
	.mmap = snd_pcm_generic_mmap,
	.munmap = snd_pcm_generic_munmap,
	.query_chmaps = snd_pcm_generic_query_chmaps,
	.get_chmap = snd_pcm_generic_get_chmap,
	.set_chmap = snd_pcm_generic_set_chmap,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_file.c" line="675" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_file.c" bodystart="675" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pcm__file_8c_1a7cfd143c42104aaeccc736f34d9342d3" prot="public" static="yes" mutable="no">
        <type>const snd_pcm_fast_ops_t</type>
        <definition>const snd_pcm_fast_ops_t snd_pcm_file_fast_ops</definition>
        <argsstring></argsstring>
        <name>snd_pcm_file_fast_ops</name>
        <initializer>= {
	.status = snd_pcm_generic_status,
	.state = snd_pcm_generic_state,
	.hwsync = snd_pcm_generic_hwsync,
	.delay = snd_pcm_generic_delay,
	.prepare = snd_pcm_generic_prepare,
	.reset = snd_pcm_file_reset,
	.start = snd_pcm_generic_start,
	.drop = snd_pcm_file_drop,
	.drain = snd_pcm_file_drain,
	.pause = snd_pcm_generic_pause,
	.rewindable = snd_pcm_file_rewindable,
	.rewind = snd_pcm_file_rewind,
	.forwardable = snd_pcm_file_forwardable,
	.forward = snd_pcm_file_forward,
	.resume = snd_pcm_generic_resume,
	.link = snd_pcm_generic_link,
	.link_slaves = snd_pcm_generic_link_slaves,
	.unlink = snd_pcm_generic_unlink,
	.writei = snd_pcm_file_writei,
	.writen = snd_pcm_file_writen,
	.readi = snd_pcm_file_readi,
	.readn = snd_pcm_file_readn,
	.avail_update = snd_pcm_generic_avail_update,
	.mmap_commit = snd_pcm_file_mmap_commit,
	.poll_descriptors_count = snd_pcm_generic_poll_descriptors_count,
	.poll_descriptors = snd_pcm_generic_poll_descriptors,
	.poll_revents = snd_pcm_generic_poll_revents,
	.htimestamp = snd_pcm_generic_real_htimestamp,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_file.c" line="693" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_file.c" bodystart="693" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="pcm__file_8c_1ae5f5df73991b67eaef70f89bd3e313c9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void snd_pcm_file_write_bytes</definition>
        <argsstring>(snd_pcm_t *pcm, size_t bytes)</argsstring>
        <name>snd_pcm_file_write_bytes</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_file.c" line="339" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_file.c" bodystart="339" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="pcm__file_8c_1a091ce2177c41a4f877bc09db7a56cf7e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void snd_pcm_file_add_frames</definition>
        <argsstring>(snd_pcm_t *pcm, const snd_pcm_channel_area_t *areas, snd_pcm_uframes_t offset, snd_pcm_uframes_t frames)</argsstring>
        <name>snd_pcm_file_add_frames</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type>const <ref refid="structsnd__pcm__channel__area__t" kindref="compound">snd_pcm_channel_area_t</ref> *</type>
          <declname>areas</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref></type>
          <declname>offset</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref></type>
          <declname>frames</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_file.c" line="372" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_file.c" bodystart="372" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="pcm__file_8c_1a2b17b77f136b7b2b5ad847764c29608b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_pcm_file_close</definition>
        <argsstring>(snd_pcm_t *pcm)</argsstring>
        <name>snd_pcm_file_close</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_file.c" line="401" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_file.c" bodystart="401" bodyend="417"/>
      </memberdef>
      <memberdef kind="function" id="pcm__file_8c_1aa5f5bde74a5ad76d95a1d9826905fe9a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_pcm_file_reset</definition>
        <argsstring>(snd_pcm_t *pcm)</argsstring>
        <name>snd_pcm_file_reset</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_file.c" line="419" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_file.c" bodystart="419" bodyend="429"/>
      </memberdef>
      <memberdef kind="function" id="pcm__file_8c_1a7bf1460619434e91534e8222229e6003" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_pcm_file_drop</definition>
        <argsstring>(snd_pcm_t *pcm)</argsstring>
        <name>snd_pcm_file_drop</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_file.c" line="431" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_file.c" bodystart="431" bodyend="441"/>
      </memberdef>
      <memberdef kind="function" id="pcm__file_8c_1ab7b63b983aade75b77cc79270afc63bf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_pcm_file_drain</definition>
        <argsstring>(snd_pcm_t *pcm)</argsstring>
        <name>snd_pcm_file_drain</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_file.c" line="444" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_file.c" bodystart="444" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="pcm__file_8c_1acd40614e8e52f85792e449afb1d77d52" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___p_c_m_1ga71cdfa37e258d2210b8bd0216bf0c36c" kindref="member">snd_pcm_sframes_t</ref></type>
        <definition>static snd_pcm_sframes_t snd_pcm_file_rewindable</definition>
        <argsstring>(snd_pcm_t *pcm)</argsstring>
        <name>snd_pcm_file_rewindable</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_file.c" line="457" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_file.c" bodystart="457" bodyend="465"/>
      </memberdef>
      <memberdef kind="function" id="pcm__file_8c_1a9ba8cc13d32d82d20bf194dc17bdf884" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___p_c_m_1ga71cdfa37e258d2210b8bd0216bf0c36c" kindref="member">snd_pcm_sframes_t</ref></type>
        <definition>static snd_pcm_sframes_t snd_pcm_file_rewind</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_uframes_t frames)</argsstring>
        <name>snd_pcm_file_rewind</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref></type>
          <declname>frames</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_file.c" line="467" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_file.c" bodystart="467" bodyend="483"/>
      </memberdef>
      <memberdef kind="function" id="pcm__file_8c_1a60327472dc9cc188c9da8527a7a50816" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___p_c_m_1ga71cdfa37e258d2210b8bd0216bf0c36c" kindref="member">snd_pcm_sframes_t</ref></type>
        <definition>static snd_pcm_sframes_t snd_pcm_file_forwardable</definition>
        <argsstring>(snd_pcm_t *pcm)</argsstring>
        <name>snd_pcm_file_forwardable</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_file.c" line="485" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_file.c" bodystart="485" bodyend="493"/>
      </memberdef>
      <memberdef kind="function" id="pcm__file_8c_1a0153f9c70c326c1293c5a066b72a92ae" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___p_c_m_1ga71cdfa37e258d2210b8bd0216bf0c36c" kindref="member">snd_pcm_sframes_t</ref></type>
        <definition>static snd_pcm_sframes_t snd_pcm_file_forward</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_uframes_t frames)</argsstring>
        <name>snd_pcm_file_forward</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref></type>
          <declname>frames</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_file.c" line="495" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_file.c" bodystart="495" bodyend="511"/>
      </memberdef>
      <memberdef kind="function" id="pcm__file_8c_1a549a8d83c91a12dbf919c86789af6bff" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___p_c_m_1ga71cdfa37e258d2210b8bd0216bf0c36c" kindref="member">snd_pcm_sframes_t</ref></type>
        <definition>static snd_pcm_sframes_t snd_pcm_file_writei</definition>
        <argsstring>(snd_pcm_t *pcm, const void *buffer, snd_pcm_uframes_t size)</argsstring>
        <name>snd_pcm_file_writei</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_file.c" line="514" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_file.c" bodystart="514" bodyend="526"/>
      </memberdef>
      <memberdef kind="function" id="pcm__file_8c_1ad52be9b36fb04b39d7b555c5ae0d275b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___p_c_m_1ga71cdfa37e258d2210b8bd0216bf0c36c" kindref="member">snd_pcm_sframes_t</ref></type>
        <definition>static snd_pcm_sframes_t snd_pcm_file_writen</definition>
        <argsstring>(snd_pcm_t *pcm, void **bufs, snd_pcm_uframes_t size)</argsstring>
        <name>snd_pcm_file_writen</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type>void **</type>
          <declname>bufs</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_file.c" line="529" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_file.c" bodystart="529" bodyend="541"/>
      </memberdef>
      <memberdef kind="function" id="pcm__file_8c_1aae351681e6fbea1a377f4af1b97c165f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___p_c_m_1ga71cdfa37e258d2210b8bd0216bf0c36c" kindref="member">snd_pcm_sframes_t</ref></type>
        <definition>static snd_pcm_sframes_t snd_pcm_file_readi</definition>
        <argsstring>(snd_pcm_t *pcm, void *buffer, snd_pcm_uframes_t size)</argsstring>
        <name>snd_pcm_file_readi</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_file.c" line="544" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_file.c" bodystart="544" bodyend="561"/>
      </memberdef>
      <memberdef kind="function" id="pcm__file_8c_1a4f29c76d52352f49438d1a3e253bf01b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___p_c_m_1ga71cdfa37e258d2210b8bd0216bf0c36c" kindref="member">snd_pcm_sframes_t</ref></type>
        <definition>static snd_pcm_sframes_t snd_pcm_file_readn</definition>
        <argsstring>(snd_pcm_t *pcm, void **bufs, snd_pcm_uframes_t size)</argsstring>
        <name>snd_pcm_file_readn</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type>void **</type>
          <declname>bufs</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_file.c" line="564" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_file.c" bodystart="564" bodyend="576"/>
      </memberdef>
      <memberdef kind="function" id="pcm__file_8c_1a83b7aaac69985d4a7185f15e0a2b255b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___p_c_m_1ga71cdfa37e258d2210b8bd0216bf0c36c" kindref="member">snd_pcm_sframes_t</ref></type>
        <definition>static snd_pcm_sframes_t snd_pcm_file_mmap_commit</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_uframes_t offset, snd_pcm_uframes_t size)</argsstring>
        <name>snd_pcm_file_mmap_commit</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref></type>
          <declname>offset</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gab01fcfe9b97382a8d3f2027c664b8b8a" kindref="member">snd_pcm_uframes_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_file.c" line="578" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_file.c" bodystart="578" bodyend="594"/>
      </memberdef>
      <memberdef kind="function" id="pcm__file_8c_1a80ba8aefc9701ad340c92d2ae08c6b05" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_pcm_file_hw_free</definition>
        <argsstring>(snd_pcm_t *pcm)</argsstring>
        <name>snd_pcm_file_hw_free</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_file.c" line="596" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_file.c" bodystart="596" bodyend="606"/>
      </memberdef>
      <memberdef kind="function" id="pcm__file_8c_1a97575222a0a9b137d5a48411b2d28f54" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snd_pcm_file_hw_params</definition>
        <argsstring>(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)</argsstring>
        <name>snd_pcm_file_hw_params</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga65c737127994f0a980edad744e36dc40" kindref="member">snd_pcm_hw_params_t</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_file.c" line="608" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_file.c" bodystart="608" bodyend="654"/>
      </memberdef>
      <memberdef kind="function" id="pcm__file_8c_1aae8d468dfb7d694ede8c71aaaa80ed7f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void snd_pcm_file_dump</definition>
        <argsstring>(snd_pcm_t *pcm, snd_output_t *out)</argsstring>
        <name>snd_pcm_file_dump</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>pcm</declname>
        </param>
        <param>
          <type><ref refid="group___output_1ga49729cc6454539495c1f5b6e95cd474a" kindref="member">snd_output_t</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_file.c" line="656" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_file.c" bodystart="656" bodyend="673"/>
      </memberdef>
      <memberdef kind="function" id="pcm__file_8c_1a2d295a1bebec45e0541de03b86de0703" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_pcm_file_open</definition>
        <argsstring>(snd_pcm_t **pcmp, const char *name, const char *fname, int fd, const char *ifname, int ifd, int trunc, const char *fmt, int perm, snd_pcm_t *slave, int close_slave, snd_pcm_stream_t stream)</argsstring>
        <name>snd_pcm_file_open</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> **</type>
          <declname>pcmp</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fname</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>ifname</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ifd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>trunc</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>perm</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> *</type>
          <declname>slave</declname>
        </param>
        <param>
          <type>int</type>
          <declname>close_slave</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gac23b43ff55add78638e503b9cc892c24" kindref="member">snd_pcm_stream_t</ref></type>
          <declname>stream</declname>
        </param>
        <briefdescription>
<para>Creates a new File PCM. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcmp</parametername>
</parameternamelist>
<parameterdescription>
<para>Returns created PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of PCM </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fname</parametername>
</parameternamelist>
<parameterdescription>
<para>Output filename (or NULL if file descriptor fd is available) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>Output file descriptor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ifname</parametername>
</parameternamelist>
<parameterdescription>
<para>Input filename (or NULL if file descriptor ifd is available) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ifd</parametername>
</parameternamelist>
<parameterdescription>
<para>Input file descriptor (if (ifd &lt; 0) &amp;&amp; (ifname == NULL), no input redirection will be performed) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>trunc</parametername>
</parameternamelist>
<parameterdescription>
<para>Truncate the file if it already exists </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fmt</parametername>
</parameternamelist>
<parameterdescription>
<para>File format (&quot;raw&quot; or &quot;wav&quot; are available) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>perm</parametername>
</parameternamelist>
<parameterdescription>
<para>File permission </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>slave</parametername>
</parameternamelist>
<parameterdescription>
<para>Slave PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>close_slave</parametername>
</parameternamelist>
<parameterdescription>
<para>When set, the slave PCM handle is closed with copy PCM </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stream</parametername>
</parameternamelist>
<parameterdescription>
<para>the direction of PCM stream </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>zero</parametername>
</parameternamelist>
<parameterdescription>
<para>on success otherwise a negative error code </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="warning"><para>Using of this function might be dangerous in the sense of compatibility reasons. The prototype might be freely changed in future. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_file.c" line="744" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_file.c" bodystart="744" bodyend="817"/>
      </memberdef>
      <memberdef kind="function" id="pcm__file_8c_1a3732156e2f368386a89f2f200c496b0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _snd_pcm_file_open</definition>
        <argsstring>(snd_pcm_t **pcmp, const char *name, snd_config_t *root, snd_config_t *conf, snd_pcm_stream_t stream, int mode)</argsstring>
        <name>_snd_pcm_file_open</name>
        <param>
          <type><ref refid="group___p_c_m_1ga919e634deecd855b6e2e15174e70d3ea" kindref="member">snd_pcm_t</ref> **</type>
          <declname>pcmp</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>root</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>conf</declname>
        </param>
        <param>
          <type><ref refid="group___p_c_m_1gac23b43ff55add78638e503b9cc892c24" kindref="member">snd_pcm_stream_t</ref></type>
          <declname>stream</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Creates a new File PCM. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pcmp</parametername>
</parameternamelist>
<parameterdescription>
<para>Returns created PCM handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of PCM </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>root</parametername>
</parameternamelist>
<parameterdescription>
<para>Root configuration node </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>conf</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration node with File PCM description </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stream</parametername>
</parameternamelist>
<parameterdescription>
<para>Stream type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Stream mode </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>zero</parametername>
</parameternamelist>
<parameterdescription>
<para>on success otherwise a negative error code </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="warning"><para>Using of this function might be dangerous in the sense of compatibility reasons. The prototype might be freely changed in future. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_file.c" line="880" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_file.c" bodystart="880" bodyend="987"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>PCM File Plugin Interface. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Abramo Bagnara <ulink url="mailto:abramo@alsa-project.org">abramo@alsa-project.org</ulink> </para></simplesect>
<simplesect kind="date"><para>2000-2001 </para></simplesect>
</para>    </detaileddescription>
    <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm_file.c"/>
  </compounddef>
</doxygen>
