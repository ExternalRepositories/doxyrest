<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namehint_8c" kind="file" language="C++">
    <compoundname>namehint.c</compoundname>
    <includes local="yes">local.h</includes>
    <incdepgraph>
      <node id="204">
        <label>/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/namehint.c</label>
        <link refid="namehint_8c"/>
        <childnode refid="205" relation="include">
        </childnode>
      </node>
      <node id="205">
        <label>local.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="namehint_8c_1aa8db71051509c7e9e08cc2640e1ff87d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int hint_list_add</definition>
        <argsstring>(struct hint_list *list, const char *name, const char *description)</argsstring>
        <name>hint_list_add</name>
        <param>
          <type>struct hint_list *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>description</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/namehint.c" line="50" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/namehint.c" bodystart="50" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="namehint_8c_1a28b2cdcaeb2ed6d356ee20e05cc5b1d6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void zero_handler</definition>
        <argsstring>(const char *file, int line, const char *function, int err, const char *fmt, va_list arg)</argsstring>
        <name>zero_handler</name>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>function</declname>
        </param>
        <param>
          <type>int</type>
          <declname>err</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/namehint.c" line="81" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/namehint.c" bodystart="81" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="namehint_8c_1af880bc2fa4424c49860ef9078984fcea" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int get_dev_name1</definition>
        <argsstring>(struct hint_list *list, char **res, int device, int stream)</argsstring>
        <name>get_dev_name1</name>
        <param>
          <type>struct hint_list *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>res</declname>
        </param>
        <param>
          <type>int</type>
          <declname>device</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/namehint.c" line="90" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/namehint.c" bodystart="90" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="namehint_8c_1a441e5d62253b2fd671ebecf62a28b580" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>static char* get_dev_name</definition>
        <argsstring>(struct hint_list *list)</argsstring>
        <name>get_dev_name</name>
        <param>
          <type>struct hint_list *</type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/namehint.c" line="144" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/namehint.c" bodystart="144" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="namehint_8c_1a1c61403e1dce1d45fa45130660748e1b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int try_config</definition>
        <argsstring>(snd_config_t *config, struct hint_list *list, const char *base, const char *name)</argsstring>
        <name>try_config</name>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <param>
          <type>struct hint_list *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/namehint.c" line="211" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/namehint.c" bodystart="211" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="namehint_8c_1a0162cba1e2d22488041dc1d82b5ef990" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int add_card</definition>
        <argsstring>(snd_config_t *config, snd_config_t *rw_config, struct hint_list *list, int card)</argsstring>
        <name>add_card</name>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>rw_config</declname>
        </param>
        <param>
          <type>struct hint_list *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>int</type>
          <declname>card</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/namehint.c" line="412" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/namehint.c" bodystart="412" bodyend="478"/>
      </memberdef>
      <memberdef kind="function" id="namehint_8c_1a2a5399e2d850dd0ff8fe94e8b01f4fa1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int get_card_name</definition>
        <argsstring>(struct hint_list *list, int card)</argsstring>
        <name>get_card_name</name>
        <param>
          <type>struct hint_list *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>int</type>
          <declname>card</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/namehint.c" line="480" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/namehint.c" bodystart="480" bodyend="496"/>
      </memberdef>
      <memberdef kind="function" id="namehint_8c_1a41ead05c678d0d76759414906139ed4c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int add_software_devices</definition>
        <argsstring>(snd_config_t *config, snd_config_t *rw_config, struct hint_list *list)</argsstring>
        <name>add_software_devices</name>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <param>
          <type><ref refid="group___config_1ga1c20905af775ae77d04d1a5696f67985" kindref="member">snd_config_t</ref> *</type>
          <declname>rw_config</declname>
        </param>
        <param>
          <type>struct hint_list *</type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/namehint.c" line="498" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/namehint.c" bodystart="498" bodyend="520"/>
      </memberdef>
      <memberdef kind="function" id="group___control_1gadf4ce9117fcfa454c523ed6e6bd8b353" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_device_name_hint</definition>
        <argsstring>(int card, const char *iface, void ***hints)</argsstring>
        <name>snd_device_name_hint</name>
        <param>
          <type>int</type>
          <declname>card</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>iface</declname>
        </param>
        <param>
          <type>void ***</type>
          <declname>hints</declname>
        </param>
        <briefdescription>
<para>Get a set of device name hints. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>card</parametername>
</parameternamelist>
<parameterdescription>
<para>Card number or -1 (means all cards) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iface</parametername>
</parameternamelist>
<parameterdescription>
<para>Interface identification (like &quot;pcm&quot;, &quot;rawmidi&quot;, &quot;timer&quot;, &quot;seq&quot;) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hints</parametername>
</parameternamelist>
<parameterdescription>
<para>Result - array of device name hints </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>zero if success, otherwise a negative error code</para></simplesect>
hints will receive a NULL-terminated array of device name hints, which can be passed to <ref refid="group___control_1ga8546500ca828392f03f5bba2e7813874" kindref="member">snd_device_name_get_hint</ref> to extract usable values. When no longer needed, hints should be passed to <ref refid="group___control_1gad4cacf29df4616c2458fc84c1fde708c" kindref="member">snd_device_name_free_hint</ref> to release resources.</para><para>User-defined hints are gathered from namehint.IFACE tree like:</para><para><computeroutput> namehint.pcm {<linebreak/>
 myfile &quot;file:FILE=/tmp/soundwave.raw|Save sound output to /tmp/soundwave.raw&quot;<linebreak/>
 myplug &quot;plug:front:Do all conversions for front speakers&quot;<linebreak/>
 } </computeroutput></para><para>Note: The device description is separated with &apos;|&apos; char.</para><para>Special variables: defaults.namehint.showall specifies if all device definitions are accepted (boolean type). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/namehint.c" line="548" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/namehint.c" bodystart="548" bodyend="644"/>
      </memberdef>
      <memberdef kind="function" id="group___control_1gad4cacf29df4616c2458fc84c1fde708c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_device_name_free_hint</definition>
        <argsstring>(void **hints)</argsstring>
        <name>snd_device_name_free_hint</name>
        <param>
          <type>void **</type>
          <declname>hints</declname>
        </param>
        <briefdescription>
<para>Free a list of device name hints. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hints</parametername>
</parameternamelist>
<parameterdescription>
<para>List to free </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>zero if success, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/namehint.c" line="651" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/namehint.c" bodystart="651" bodyend="664"/>
      </memberdef>
      <memberdef kind="function" id="group___control_1ga8546500ca828392f03f5bba2e7813874" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* snd_device_name_get_hint</definition>
        <argsstring>(const void *hint, const char *id)</argsstring>
        <name>snd_device_name_get_hint</name>
        <param>
          <type>const void *</type>
          <declname>hint</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Extract a value from a hint. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hint</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to hint </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>Hint value to extract (&quot;NAME&quot;, &quot;DESC&quot;, or &quot;IOID&quot;, see below) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>an allocated ASCII string if success, otherwise NULL</para></simplesect>
List of valid IDs: NAME - name of device DESC - description of device IOID - input / output identification (&quot;Input&quot; or &quot;Output&quot;), NULL means both</para><para>The return value should be freed when no longer needed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/namehint.c" line="679" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/namehint.c" bodystart="679" bodyend="706"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Give device name hints. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Jaroslav Kysela <ulink url="mailto:perex@perex.cz">perex@perex.cz</ulink> </para></simplesect>
<simplesect kind="date"><para>2006 </para></simplesect>
</para>    </detaileddescription>
    <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/namehint.c"/>
  </compounddef>
</doxygen>
