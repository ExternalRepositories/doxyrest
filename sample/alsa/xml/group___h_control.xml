<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group___h_control" kind="group">
    <compoundname>HControl</compoundname>
    <title>High level Control Interface</title>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group___h_control_1gaddfb152863e87857d463c7008d72ad74" prot="public" static="no">
        <type>struct _snd_hctl_elem</type>
        <definition>typedef struct _snd_hctl_elem snd_hctl_elem_t</definition>
        <argsstring></argsstring>
        <name>snd_hctl_elem_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>HCTL element handle </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/control.h" line="508" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/control.h" bodystart="520" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___h_control_1ga13c9ad52c57ab7db06065a7f806b2369" prot="public" static="no">
        <type>struct _snd_hctl</type>
        <definition>typedef struct _snd_hctl snd_hctl_t</definition>
        <argsstring></argsstring>
        <name>snd_hctl_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>HCTL handle </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/control.h" line="508" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/control.h" bodystart="523" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___h_control_1ga612e7c59d360ecc9334f7fe71377f9cc" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* snd_hctl_compare_t) (const snd_hctl_elem_t *e1, const snd_hctl_elem_t *e2)</definition>
        <argsstring>)(const snd_hctl_elem_t *e1, const snd_hctl_elem_t *e2)</argsstring>
        <name>snd_hctl_compare_t</name>
        <briefdescription>
<para>Compare function for sorting HCTL elements. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e1</parametername>
</parameternamelist>
<parameterdescription>
<para>First element </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>e2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second element </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>-1 if e1 &lt; e2, 0 if e1 == e2, 1 if e1 &gt; e2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/control.h" line="531" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/control.h" bodystart="531" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___h_control_1ga5e2b26a2cc8d696e2a9eacb6bbb2f417" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* snd_hctl_callback_t) (snd_hctl_t *hctl, unsigned int mask, snd_hctl_elem_t *elem)</definition>
        <argsstring>)(snd_hctl_t *hctl, unsigned int mask, snd_hctl_elem_t *elem)</argsstring>
        <name>snd_hctl_callback_t</name>
        <briefdescription>
<para>HCTL callback function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hctl</parametername>
</parameternamelist>
<parameterdescription>
<para>HCTL handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>event mask </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>related HCTL element (if any) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/control.h" line="542" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/control.h" bodystart="542" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___h_control_1ga64ce2446d79c992547d3db8c7faa6143" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* snd_hctl_elem_callback_t) (snd_hctl_elem_t *elem, unsigned int mask)</definition>
        <argsstring>)(snd_hctl_elem_t *elem, unsigned int mask)</argsstring>
        <name>snd_hctl_elem_callback_t</name>
        <briefdescription>
<para>HCTL element callback function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>HCTL element </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>event mask </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/control.h" line="551" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/control.h" bodystart="551" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___h_control_1gaaa17b28ebe0f1e0e4443182312af7408" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_hctl_compare_fast</definition>
        <argsstring>(const snd_hctl_elem_t *c1, const snd_hctl_elem_t *c2)</argsstring>
        <name>snd_hctl_compare_fast</name>
        <param>
          <type>const <ref refid="group___h_control_1gaddfb152863e87857d463c7008d72ad74" kindref="member">snd_hctl_elem_t</ref> *</type>
          <declname>c1</declname>
        </param>
        <param>
          <type>const <ref refid="group___h_control_1gaddfb152863e87857d463c7008d72ad74" kindref="member">snd_hctl_elem_t</ref> *</type>
          <declname>c2</declname>
        </param>
        <briefdescription>
<para>A &quot;don&apos;t care&quot; fast compare functions that may be used with <ref refid="group___h_control_1ga5917b8cbcdf5d44d8730027b18ff6172" kindref="member">snd_hctl_set_compare</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c1</parametername>
</parameternamelist>
<parameterdescription>
<para>First HCTL element </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second HCTL element </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>-1 if c1 &lt; c2, 0 if c1 == c2, 1 if c1 &gt; c2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/control.h" line="533" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/hcontrol.c" bodystart="462" bodyend="466"/>
      </memberdef>
      <memberdef kind="function" id="group___h_control_1ga2a86455eaad4f2730a936d06c62cca29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_hctl_open</definition>
        <argsstring>(snd_hctl_t **hctl, const char *name, int mode)</argsstring>
        <name>snd_hctl_open</name>
        <param>
          <type><ref refid="group___h_control_1ga13c9ad52c57ab7db06065a7f806b2369" kindref="member">snd_hctl_t</ref> **</type>
          <declname>hctl</declname>
          <defname>hctlp</defname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Opens an HCTL. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hctlp</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned HCTL handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>ASCII identifier of the underlying CTL handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Open mode (see <ref refid="group___control_1gae8a46558414be5b5b3b7bed127ad4574" kindref="member">SND_CTL_NONBLOCK</ref>, <ref refid="group___control_1gadcbc5a476ffaf2b8d4dfd29a2cfaab3d" kindref="member">SND_CTL_ASYNC</ref>) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/control.h" line="554" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/hcontrol.c" bodystart="70" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="group___h_control_1ga48b556b219e99c36d65efc6b8a97029c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_hctl_open_ctl</definition>
        <argsstring>(snd_hctl_t **hctlp, snd_ctl_t *ctl)</argsstring>
        <name>snd_hctl_open_ctl</name>
        <param>
          <type><ref refid="group___h_control_1ga13c9ad52c57ab7db06065a7f806b2369" kindref="member">snd_hctl_t</ref> **</type>
          <declname>hctlp</declname>
        </param>
        <param>
          <type><ref refid="group___control_1ga06628f38def84a0fe3da74041db9d51f" kindref="member">snd_ctl_t</ref> *</type>
          <declname>ctl</declname>
        </param>
        <briefdescription>
<para>Opens an HCTL. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hctlp</parametername>
</parameternamelist>
<parameterdescription>
<para>Returned HCTL handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ctl</parametername>
</parameternamelist>
<parameterdescription>
<para>underlying CTL handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/control.h" line="555" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/hcontrol.c" bodystart="89" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="group___h_control_1gae9537f6a56d663aa9714ccc82689ff1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_hctl_close</definition>
        <argsstring>(snd_hctl_t *hctl)</argsstring>
        <name>snd_hctl_close</name>
        <param>
          <type><ref refid="group___h_control_1ga13c9ad52c57ab7db06065a7f806b2369" kindref="member">snd_hctl_t</ref> *</type>
          <declname>hctl</declname>
        </param>
        <briefdescription>
<para>close HCTL handle </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hctl</parametername>
</parameternamelist>
<parameterdescription>
<para>HCTL handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code</para></simplesect>
Closes the specified HCTL handle and frees all associated resources. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/control.h" line="556" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/hcontrol.c" bodystart="111" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="group___h_control_1ga3c3e66e230fc93c15f18568342725a43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_hctl_nonblock</definition>
        <argsstring>(snd_hctl_t *hctl, int nonblock)</argsstring>
        <name>snd_hctl_nonblock</name>
        <param>
          <type><ref refid="group___h_control_1ga13c9ad52c57ab7db06065a7f806b2369" kindref="member">snd_hctl_t</ref> *</type>
          <declname>hctl</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nonblock</declname>
        </param>
        <briefdescription>
<para>set nonblock mode </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hctl</parametername>
</parameternamelist>
<parameterdescription>
<para>HCTL handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nonblock</parametername>
</parameternamelist>
<parameterdescription>
<para>0 = block, 1 = nonblock mode </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/control.h" line="557" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/hcontrol.c" bodystart="142" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="group___h_control_1gaf3b87e3225fb163fbdadf7fe203a1622" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__inline__ int</type>
        <definition>static __inline__ int snd_hctl_abort</definition>
        <argsstring>(snd_hctl_t *hctl)</argsstring>
        <name>snd_hctl_abort</name>
        <param>
          <type><ref refid="group___h_control_1ga13c9ad52c57ab7db06065a7f806b2369" kindref="member">snd_hctl_t</ref> *</type>
          <declname>hctl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/control.h" line="558" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/control.h" bodystart="558" bodyend="558"/>
      </memberdef>
      <memberdef kind="function" id="group___h_control_1ga32238dba8935b2cb91fbad73aae9e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_hctl_poll_descriptors_count</definition>
        <argsstring>(snd_hctl_t *hctl)</argsstring>
        <name>snd_hctl_poll_descriptors_count</name>
        <param>
          <type><ref refid="group___h_control_1ga13c9ad52c57ab7db06065a7f806b2369" kindref="member">snd_hctl_t</ref> *</type>
          <declname>hctl</declname>
        </param>
        <briefdescription>
<para>get count of poll descriptors for HCTL handle </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hctl</parametername>
</parameternamelist>
<parameterdescription>
<para>HCTL handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>count of poll descriptors </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/control.h" line="559" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/hcontrol.c" bodystart="168" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="group___h_control_1ga7dd3894b55740cbdb8b2a0bef15af295" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_hctl_poll_descriptors</definition>
        <argsstring>(snd_hctl_t *hctl, struct pollfd *pfds, unsigned int space)</argsstring>
        <name>snd_hctl_poll_descriptors</name>
        <param>
          <type><ref refid="group___h_control_1ga13c9ad52c57ab7db06065a7f806b2369" kindref="member">snd_hctl_t</ref> *</type>
          <declname>hctl</declname>
        </param>
        <param>
          <type>struct pollfd *</type>
          <declname>pfds</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>space</declname>
        </param>
        <briefdescription>
<para>get poll descriptors </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hctl</parametername>
</parameternamelist>
<parameterdescription>
<para>HCTL handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pfds</parametername>
</parameternamelist>
<parameterdescription>
<para>array of poll descriptors </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>space</parametername>
</parameternamelist>
<parameterdescription>
<para>space in the poll descriptor array </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>count of filled descriptors </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/control.h" line="560" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/hcontrol.c" bodystart="181" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="group___h_control_1ga704fd06286869e793e223956b186bfdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_hctl_poll_descriptors_revents</definition>
        <argsstring>(snd_hctl_t *ctl, struct pollfd *pfds, unsigned int nfds, unsigned short *revents)</argsstring>
        <name>snd_hctl_poll_descriptors_revents</name>
        <param>
          <type><ref refid="group___h_control_1ga13c9ad52c57ab7db06065a7f806b2369" kindref="member">snd_hctl_t</ref> *</type>
          <declname>ctl</declname>
          <defname>hctl</defname>
        </param>
        <param>
          <type>struct pollfd *</type>
          <declname>pfds</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>nfds</declname>
        </param>
        <param>
          <type>unsigned short *</type>
          <declname>revents</declname>
        </param>
        <briefdescription>
<para>get returned events from poll descriptors </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hctl</parametername>
</parameternamelist>
<parameterdescription>
<para>HCTL handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pfds</parametername>
</parameternamelist>
<parameterdescription>
<para>array of poll descriptors </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nfds</parametername>
</parameternamelist>
<parameterdescription>
<para>count of poll descriptors </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>revents</parametername>
</parameternamelist>
<parameterdescription>
<para>returned events </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>zero if success, otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/control.h" line="561" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/hcontrol.c" bodystart="195" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="group___h_control_1ga098944f4f2d7722550901bf6f80ee91c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int snd_hctl_get_count</definition>
        <argsstring>(snd_hctl_t *hctl)</argsstring>
        <name>snd_hctl_get_count</name>
        <param>
          <type><ref refid="group___h_control_1ga13c9ad52c57ab7db06065a7f806b2369" kindref="member">snd_hctl_t</ref> *</type>
          <declname>hctl</declname>
        </param>
        <briefdescription>
<para>Get number of loaded elements for an HCTL. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hctl</parametername>
</parameternamelist>
<parameterdescription>
<para>HCTL handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>elements count </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/control.h" line="562" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/hcontrol.c" bodystart="662" bodyend="665"/>
      </memberdef>
      <memberdef kind="function" id="group___h_control_1ga5917b8cbcdf5d44d8730027b18ff6172" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_hctl_set_compare</definition>
        <argsstring>(snd_hctl_t *hctl, snd_hctl_compare_t hsort)</argsstring>
        <name>snd_hctl_set_compare</name>
        <param>
          <type><ref refid="group___h_control_1ga13c9ad52c57ab7db06065a7f806b2369" kindref="member">snd_hctl_t</ref> *</type>
          <declname>hctl</declname>
        </param>
        <param>
          <type><ref refid="group___h_control_1ga612e7c59d360ecc9334f7fe71377f9cc" kindref="member">snd_hctl_compare_t</ref></type>
          <declname>hsort</declname>
          <defname>compare</defname>
        </param>
        <briefdescription>
<para>Change HCTL compare function and reorder elements. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hctl</parametername>
</parameternamelist>
<parameterdescription>
<para>HCTL handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>compare</parametername>
</parameternamelist>
<parameterdescription>
<para>Element compare function </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/control.h" line="563" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/hcontrol.c" bodystart="448" bodyend="454"/>
      </memberdef>
      <memberdef kind="function" id="group___h_control_1gaaa68ce403d30e4d152fe4ce82b6c02db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___h_control_1gaddfb152863e87857d463c7008d72ad74" kindref="member">snd_hctl_elem_t</ref> *</type>
        <definition>snd_hctl_elem_t* snd_hctl_first_elem</definition>
        <argsstring>(snd_hctl_t *hctl)</argsstring>
        <name>snd_hctl_first_elem</name>
        <param>
          <type><ref refid="group___h_control_1ga13c9ad52c57ab7db06065a7f806b2369" kindref="member">snd_hctl_t</ref> *</type>
          <declname>hctl</declname>
        </param>
        <briefdescription>
<para>get first element for an HCTL </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hctl</parametername>
</parameternamelist>
<parameterdescription>
<para>HCTL handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to first element </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/control.h" line="564" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/hcontrol.c" bodystart="498" bodyend="504"/>
      </memberdef>
      <memberdef kind="function" id="group___h_control_1ga8b7270503d275040a391e05c991ec569" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___h_control_1gaddfb152863e87857d463c7008d72ad74" kindref="member">snd_hctl_elem_t</ref> *</type>
        <definition>snd_hctl_elem_t* snd_hctl_last_elem</definition>
        <argsstring>(snd_hctl_t *hctl)</argsstring>
        <name>snd_hctl_last_elem</name>
        <param>
          <type><ref refid="group___h_control_1ga13c9ad52c57ab7db06065a7f806b2369" kindref="member">snd_hctl_t</ref> *</type>
          <declname>hctl</declname>
        </param>
        <briefdescription>
<para>get last element for an HCTL </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hctl</parametername>
</parameternamelist>
<parameterdescription>
<para>HCTL handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to last element </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/control.h" line="565" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/hcontrol.c" bodystart="511" bodyend="517"/>
      </memberdef>
      <memberdef kind="function" id="group___h_control_1gaeee7f3f76cb71fd4b3456a9566529bd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___h_control_1gaddfb152863e87857d463c7008d72ad74" kindref="member">snd_hctl_elem_t</ref> *</type>
        <definition>snd_hctl_elem_t* snd_hctl_find_elem</definition>
        <argsstring>(snd_hctl_t *hctl, const snd_ctl_elem_id_t *id)</argsstring>
        <name>snd_hctl_find_elem</name>
        <param>
          <type><ref refid="group___h_control_1ga13c9ad52c57ab7db06065a7f806b2369" kindref="member">snd_hctl_t</ref> *</type>
          <declname>hctl</declname>
        </param>
        <param>
          <type>const <ref refid="group___control_1gad6c3746f1925bfec6a4fd0e913430e55" kindref="member">snd_ctl_elem_id_t</ref> *</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Search an HCTL element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hctl</parametername>
</parameternamelist>
<parameterdescription>
<para>HCTL handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>Element identifier </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to found HCTL element or NULL if it does not exists </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/control.h" line="566" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/hcontrol.c" bodystart="551" bodyend="558"/>
      </memberdef>
      <memberdef kind="function" id="group___h_control_1ga9c0abde0c53cafb640bbd6e3b1c3d6c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_hctl_set_callback</definition>
        <argsstring>(snd_hctl_t *hctl, snd_hctl_callback_t callback)</argsstring>
        <name>snd_hctl_set_callback</name>
        <param>
          <type><ref refid="group___h_control_1ga13c9ad52c57ab7db06065a7f806b2369" kindref="member">snd_hctl_t</ref> *</type>
          <declname>hctl</declname>
        </param>
        <param>
          <type><ref refid="group___h_control_1ga5e2b26a2cc8d696e2a9eacb6bbb2f417" kindref="member">snd_hctl_callback_t</ref></type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Set callback function for an HCTL. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hctl</parametername>
</parameternamelist>
<parameterdescription>
<para>HCTL handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>callback function </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/control.h" line="567" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/hcontrol.c" bodystart="629" bodyend="633"/>
      </memberdef>
      <memberdef kind="function" id="group___h_control_1gae678856658731969c884a4c9c810d799" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_hctl_set_callback_private</definition>
        <argsstring>(snd_hctl_t *hctl, void *data)</argsstring>
        <name>snd_hctl_set_callback_private</name>
        <param>
          <type><ref refid="group___h_control_1ga13c9ad52c57ab7db06065a7f806b2369" kindref="member">snd_hctl_t</ref> *</type>
          <declname>hctl</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
          <defname>callback_private</defname>
        </param>
        <briefdescription>
<para>Set callback private value for an HCTL. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hctl</parametername>
</parameternamelist>
<parameterdescription>
<para>HCTL handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback_private</parametername>
</parameternamelist>
<parameterdescription>
<para>callback private value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/control.h" line="568" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/hcontrol.c" bodystart="640" bodyend="644"/>
      </memberdef>
      <memberdef kind="function" id="group___h_control_1ga60c1606f4d423301355344e5373d5ccc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* snd_hctl_get_callback_private</definition>
        <argsstring>(snd_hctl_t *hctl)</argsstring>
        <name>snd_hctl_get_callback_private</name>
        <param>
          <type><ref refid="group___h_control_1ga13c9ad52c57ab7db06065a7f806b2369" kindref="member">snd_hctl_t</ref> *</type>
          <declname>hctl</declname>
        </param>
        <briefdescription>
<para>Get callback private value for an HCTL. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hctl</parametername>
</parameternamelist>
<parameterdescription>
<para>HCTL handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>callback private value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/control.h" line="569" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/hcontrol.c" bodystart="651" bodyend="655"/>
      </memberdef>
      <memberdef kind="function" id="group___h_control_1ga700017b7d9b8decb775702d5dc6fef85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_hctl_load</definition>
        <argsstring>(snd_hctl_t *hctl)</argsstring>
        <name>snd_hctl_load</name>
        <param>
          <type><ref refid="group___h_control_1ga13c9ad52c57ab7db06065a7f806b2369" kindref="member">snd_hctl_t</ref> *</type>
          <declname>hctl</declname>
        </param>
        <briefdescription>
<para>Load an HCTL with all elements and sort them. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hctl</parametername>
</parameternamelist>
<parameterdescription>
<para>HCTL handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/control.h" line="570" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/hcontrol.c" bodystart="565" bodyend="622"/>
      </memberdef>
      <memberdef kind="function" id="group___h_control_1ga1b3e936bba7a6127459af1244c7da454" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_hctl_free</definition>
        <argsstring>(snd_hctl_t *hctl)</argsstring>
        <name>snd_hctl_free</name>
        <param>
          <type><ref refid="group___h_control_1ga13c9ad52c57ab7db06065a7f806b2369" kindref="member">snd_hctl_t</ref> *</type>
          <declname>hctl</declname>
        </param>
        <briefdescription>
<para>free HCTL loaded elements </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hctl</parametername>
</parameternamelist>
<parameterdescription>
<para>HCTL handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success otherwise a negative error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/control.h" line="571" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/hcontrol.c" bodystart="402" bodyend="411"/>
      </memberdef>
      <memberdef kind="function" id="group___h_control_1ga02d9dc1cdbdfe11880e3fe774f2034bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_hctl_handle_events</definition>
        <argsstring>(snd_hctl_t *hctl)</argsstring>
        <name>snd_hctl_handle_events</name>
        <param>
          <type><ref refid="group___h_control_1ga13c9ad52c57ab7db06065a7f806b2369" kindref="member">snd_hctl_t</ref> *</type>
          <declname>hctl</declname>
        </param>
        <briefdescription>
<para>Handle pending HCTL events invoking callbacks. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hctl</parametername>
</parameternamelist>
<parameterdescription>
<para>HCTL handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/control.h" line="572" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/hcontrol.c" bodystart="779" bodyend="797"/>
      </memberdef>
      <memberdef kind="function" id="group___h_control_1gabd1208fbbe2061021494ea21ab382088" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* snd_hctl_name</definition>
        <argsstring>(snd_hctl_t *hctl)</argsstring>
        <name>snd_hctl_name</name>
        <param>
          <type><ref refid="group___h_control_1ga13c9ad52c57ab7db06065a7f806b2369" kindref="member">snd_hctl_t</ref> *</type>
          <declname>hctl</declname>
        </param>
        <briefdescription>
<para>get identifier of HCTL handle </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hctl</parametername>
</parameternamelist>
<parameterdescription>
<para>HCTL handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ascii identifier of HCTL handle</para></simplesect>
Returns the ASCII identifier of given HCTL handle. It&apos;s the same identifier specified in <ref refid="group___h_control_1ga2a86455eaad4f2730a936d06c62cca29" kindref="member">snd_hctl_open()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/control.h" line="573" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/hcontrol.c" bodystart="130" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="group___h_control_1ga2f0d0548f5d848b6557b2967d0e73494" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_hctl_wait</definition>
        <argsstring>(snd_hctl_t *hctl, int timeout)</argsstring>
        <name>snd_hctl_wait</name>
        <param>
          <type><ref refid="group___h_control_1ga13c9ad52c57ab7db06065a7f806b2369" kindref="member">snd_hctl_t</ref> *</type>
          <declname>hctl</declname>
        </param>
        <param>
          <type>int</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Wait for a HCTL to become ready (i.e. at least one event pending) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hctl</parametername>
</parameternamelist>
<parameterdescription>
<para>HCTL handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum time in milliseconds to wait </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a positive value on success otherwise a negative error code </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>timeout occurred </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>an event is pending </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/control.h" line="574" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/hcontrol.c" bodystart="675" bodyend="717"/>
      </memberdef>
      <memberdef kind="function" id="group___h_control_1ga93f19c0fb16337f72b6c413512b79f1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___control_1ga06628f38def84a0fe3da74041db9d51f" kindref="member">snd_ctl_t</ref> *</type>
        <definition>snd_ctl_t* snd_hctl_ctl</definition>
        <argsstring>(snd_hctl_t *hctl)</argsstring>
        <name>snd_hctl_ctl</name>
        <param>
          <type><ref refid="group___h_control_1ga13c9ad52c57ab7db06065a7f806b2369" kindref="member">snd_hctl_t</ref> *</type>
          <declname>hctl</declname>
        </param>
        <briefdescription>
<para>Get a ctl handle associated to the given hctl handle. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hctl</parametername>
</parameternamelist>
<parameterdescription>
<para>HCTL handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a ctl handle otherwise NULL </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/control.h" line="575" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/hcontrol.c" bodystart="724" bodyend="727"/>
      </memberdef>
      <memberdef kind="function" id="group___h_control_1gaf7c6b19c5feb2392f2d447bc3f54fd15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___h_control_1gaddfb152863e87857d463c7008d72ad74" kindref="member">snd_hctl_elem_t</ref> *</type>
        <definition>snd_hctl_elem_t* snd_hctl_elem_next</definition>
        <argsstring>(snd_hctl_elem_t *elem)</argsstring>
        <name>snd_hctl_elem_next</name>
        <param>
          <type><ref refid="group___h_control_1gaddfb152863e87857d463c7008d72ad74" kindref="member">snd_hctl_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
<para>get next HCTL element </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>HCTL element </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to next element </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/control.h" line="577" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/hcontrol.c" bodystart="524" bodyend="530"/>
      </memberdef>
      <memberdef kind="function" id="group___h_control_1ga89a720775cb955ee4069a45074e4b32f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___h_control_1gaddfb152863e87857d463c7008d72ad74" kindref="member">snd_hctl_elem_t</ref> *</type>
        <definition>snd_hctl_elem_t* snd_hctl_elem_prev</definition>
        <argsstring>(snd_hctl_elem_t *elem)</argsstring>
        <name>snd_hctl_elem_prev</name>
        <param>
          <type><ref refid="group___h_control_1gaddfb152863e87857d463c7008d72ad74" kindref="member">snd_hctl_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
<para>get previous HCTL element </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>HCTL element </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to previous element </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/control.h" line="578" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/hcontrol.c" bodystart="537" bodyend="543"/>
      </memberdef>
      <memberdef kind="function" id="group___h_control_1gae08b50b118461e6fcc55975e5530885c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_hctl_elem_info</definition>
        <argsstring>(snd_hctl_elem_t *elem, snd_ctl_elem_info_t *info)</argsstring>
        <name>snd_hctl_elem_info</name>
        <param>
          <type><ref refid="group___h_control_1gaddfb152863e87857d463c7008d72ad74" kindref="member">snd_hctl_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <param>
          <type><ref refid="group___control_1ga2cae0bb76df919368e4ff9a7021dd3ab" kindref="member">snd_ctl_elem_info_t</ref> *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
<para>Get information for an HCTL element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>HCTL element </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>HCTL element information </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/control.h" line="579" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/hcontrol.c" bodystart="805" bodyend="812"/>
      </memberdef>
      <memberdef kind="function" id="group___h_control_1ga86728d69cc5de843ed46ffb4f3b98e2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_hctl_elem_read</definition>
        <argsstring>(snd_hctl_elem_t *elem, snd_ctl_elem_value_t *value)</argsstring>
        <name>snd_hctl_elem_read</name>
        <param>
          <type><ref refid="group___h_control_1gaddfb152863e87857d463c7008d72ad74" kindref="member">snd_hctl_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <param>
          <type><ref refid="group___control_1ga266b478eb64f1cdd75e337df4b4b995e" kindref="member">snd_ctl_elem_value_t</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Get value for an HCTL element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>HCTL element </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>HCTL element value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/control.h" line="580" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/hcontrol.c" bodystart="820" bodyend="827"/>
      </memberdef>
      <memberdef kind="function" id="group___h_control_1gafaf6b88337fdc827c847e21a6fd0cd79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_hctl_elem_write</definition>
        <argsstring>(snd_hctl_elem_t *elem, snd_ctl_elem_value_t *value)</argsstring>
        <name>snd_hctl_elem_write</name>
        <param>
          <type><ref refid="group___h_control_1gaddfb152863e87857d463c7008d72ad74" kindref="member">snd_hctl_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <param>
          <type><ref refid="group___control_1ga266b478eb64f1cdd75e337df4b4b995e" kindref="member">snd_ctl_elem_value_t</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set value for an HCTL element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>HCTL element </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>HCTL element value </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>on success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>&gt;1</parametername>
</parameternamelist>
<parameterdescription>
<para>on success when value was changed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>&lt;0</parametername>
</parameternamelist>
<parameterdescription>
<para>a negative error code on failure </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/control.h" line="581" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/hcontrol.c" bodystart="837" bodyend="844"/>
      </memberdef>
      <memberdef kind="function" id="group___h_control_1ga45fc0e8b3dfaeb2dfebce4f613b21297" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_hctl_elem_tlv_read</definition>
        <argsstring>(snd_hctl_elem_t *elem, unsigned int *tlv, unsigned int tlv_size)</argsstring>
        <name>snd_hctl_elem_tlv_read</name>
        <param>
          <type><ref refid="group___h_control_1gaddfb152863e87857d463c7008d72ad74" kindref="member">snd_hctl_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>tlv</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>tlv_size</declname>
        </param>
        <briefdescription>
<para>Get TLV value for an HCTL element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>HCTL element </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tlv</parametername>
</parameternamelist>
<parameterdescription>
<para>TLV array for value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tlv_size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of TLV array in bytes </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 otherwise a negative error code on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/control.h" line="582" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/hcontrol.c" bodystart="853" bodyend="859"/>
      </memberdef>
      <memberdef kind="function" id="group___h_control_1gab5611090cee93ace74db2e744718ae25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_hctl_elem_tlv_write</definition>
        <argsstring>(snd_hctl_elem_t *elem, const unsigned int *tlv)</argsstring>
        <name>snd_hctl_elem_tlv_write</name>
        <param>
          <type><ref refid="group___h_control_1gaddfb152863e87857d463c7008d72ad74" kindref="member">snd_hctl_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <param>
          <type>const unsigned int *</type>
          <declname>tlv</declname>
        </param>
        <briefdescription>
<para>Set TLV value for an HCTL element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>HCTL element </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tlv</parametername>
</parameternamelist>
<parameterdescription>
<para>TLV array for value </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>on success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>&gt;1</parametername>
</parameternamelist>
<parameterdescription>
<para>on success when value was changed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>&lt;0</parametername>
</parameternamelist>
<parameterdescription>
<para>a negative error code on failure </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/control.h" line="583" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/hcontrol.c" bodystart="869" bodyend="875"/>
      </memberdef>
      <memberdef kind="function" id="group___h_control_1gaedec51e102fbf6161322553355439121" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int snd_hctl_elem_tlv_command</definition>
        <argsstring>(snd_hctl_elem_t *elem, const unsigned int *tlv)</argsstring>
        <name>snd_hctl_elem_tlv_command</name>
        <param>
          <type><ref refid="group___h_control_1gaddfb152863e87857d463c7008d72ad74" kindref="member">snd_hctl_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <param>
          <type>const unsigned int *</type>
          <declname>tlv</declname>
        </param>
        <briefdescription>
<para>Set TLV value for an HCTL element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>HCTL element </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tlv</parametername>
</parameternamelist>
<parameterdescription>
<para>TLV array for value </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>on success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>&gt;1</parametername>
</parameternamelist>
<parameterdescription>
<para>on success when value was changed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>&lt;0</parametername>
</parameternamelist>
<parameterdescription>
<para>a negative error code on failure </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/control.h" line="584" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/hcontrol.c" bodystart="885" bodyend="891"/>
      </memberdef>
      <memberdef kind="function" id="group___h_control_1ga98660b650e7c060be8a574402e2f2257" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___h_control_1ga13c9ad52c57ab7db06065a7f806b2369" kindref="member">snd_hctl_t</ref> *</type>
        <definition>snd_hctl_t* snd_hctl_elem_get_hctl</definition>
        <argsstring>(snd_hctl_elem_t *elem)</argsstring>
        <name>snd_hctl_elem_get_hctl</name>
        <param>
          <type><ref refid="group___h_control_1gaddfb152863e87857d463c7008d72ad74" kindref="member">snd_hctl_elem_t</ref> *</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
<para>Get HCTL handle for an HCTL element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elem</parametername>
</parameternamelist>
<parameterdescription>
<para>HCTL element </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>HCTL handle </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/control.h" line="586" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/hcontrol.c" bodystart="898" bodyend="902"/>
      </memberdef>
      <memberdef kind="function" id="group___h_control_1gac1c0ce6f627f2f1560c5db03a93caf5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_hctl_elem_get_id</definition>
        <argsstring>(const snd_hctl_elem_t *obj, snd_ctl_elem_id_t *ptr)</argsstring>
        <name>snd_hctl_elem_get_id</name>
        <param>
          <type>const <ref refid="group___h_control_1gaddfb152863e87857d463c7008d72ad74" kindref="member">snd_hctl_elem_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="group___control_1gad6c3746f1925bfec6a4fd0e913430e55" kindref="member">snd_ctl_elem_id_t</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Get CTL element identifier of a CTL element id/value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>CTL element id/value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to returned CTL element identifier </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/control.h" line="588" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/hcontrol.c" bodystart="909" bodyend="913"/>
      </memberdef>
      <memberdef kind="function" id="group___h_control_1gae5e86d487c6c964be8a59dfeddb2f36e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int snd_hctl_elem_get_numid</definition>
        <argsstring>(const snd_hctl_elem_t *obj)</argsstring>
        <name>snd_hctl_elem_get_numid</name>
        <param>
          <type>const <ref refid="group___h_control_1gaddfb152863e87857d463c7008d72ad74" kindref="member">snd_hctl_elem_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Get element numeric identifier of a CTL element id/value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>CTL element id/value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>element numeric identifier </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/control.h" line="589" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/hcontrol.c" bodystart="920" bodyend="924"/>
      </memberdef>
      <memberdef kind="function" id="group___h_control_1gabe8c46cbe8b6a2612fa0eaeb1fa8fefb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___control_1ga14baa0febb91cc4c5d72dcc825acf518" kindref="member">snd_ctl_elem_iface_t</ref></type>
        <definition>snd_ctl_elem_iface_t snd_hctl_elem_get_interface</definition>
        <argsstring>(const snd_hctl_elem_t *obj)</argsstring>
        <name>snd_hctl_elem_get_interface</name>
        <param>
          <type>const <ref refid="group___h_control_1gaddfb152863e87857d463c7008d72ad74" kindref="member">snd_hctl_elem_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Get interface part of CTL element identifier of a CTL element id/value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>CTL element id/value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>interface part of element identifier </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/control.h" line="590" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/hcontrol.c" bodystart="931" bodyend="935"/>
      </memberdef>
      <memberdef kind="function" id="group___h_control_1gae933e61025507ee572408138e935c63f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int snd_hctl_elem_get_device</definition>
        <argsstring>(const snd_hctl_elem_t *obj)</argsstring>
        <name>snd_hctl_elem_get_device</name>
        <param>
          <type>const <ref refid="group___h_control_1gaddfb152863e87857d463c7008d72ad74" kindref="member">snd_hctl_elem_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Get device part of CTL element identifier of a CTL element id/value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>CTL element id/value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>device part of element identifier </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/control.h" line="591" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/hcontrol.c" bodystart="942" bodyend="946"/>
      </memberdef>
      <memberdef kind="function" id="group___h_control_1ga894c09354156fd12f8a089726449f6ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int snd_hctl_elem_get_subdevice</definition>
        <argsstring>(const snd_hctl_elem_t *obj)</argsstring>
        <name>snd_hctl_elem_get_subdevice</name>
        <param>
          <type>const <ref refid="group___h_control_1gaddfb152863e87857d463c7008d72ad74" kindref="member">snd_hctl_elem_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Get subdevice part of CTL element identifier of a CTL element id/value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>CTL element id/value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>subdevice part of element identifier </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/control.h" line="592" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/hcontrol.c" bodystart="953" bodyend="957"/>
      </memberdef>
      <memberdef kind="function" id="group___h_control_1gab89b9d62f8575795fc52b86415373a49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* snd_hctl_elem_get_name</definition>
        <argsstring>(const snd_hctl_elem_t *obj)</argsstring>
        <name>snd_hctl_elem_get_name</name>
        <param>
          <type>const <ref refid="group___h_control_1gaddfb152863e87857d463c7008d72ad74" kindref="member">snd_hctl_elem_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Get name part of CTL element identifier of a CTL element id/value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>CTL element id/value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>name part of element identifier </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/control.h" line="593" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/hcontrol.c" bodystart="964" bodyend="968"/>
      </memberdef>
      <memberdef kind="function" id="group___h_control_1gaa2bad4d08aa1c8ea98f2a92435583e01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int snd_hctl_elem_get_index</definition>
        <argsstring>(const snd_hctl_elem_t *obj)</argsstring>
        <name>snd_hctl_elem_get_index</name>
        <param>
          <type>const <ref refid="group___h_control_1gaddfb152863e87857d463c7008d72ad74" kindref="member">snd_hctl_elem_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Get index part of CTL element identifier of a CTL element id/value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>CTL element id/value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>index part of element identifier </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/control.h" line="594" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/hcontrol.c" bodystart="975" bodyend="979"/>
      </memberdef>
      <memberdef kind="function" id="group___h_control_1gacc10c18b636db3388e9b6383058fc757" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_hctl_elem_set_callback</definition>
        <argsstring>(snd_hctl_elem_t *obj, snd_hctl_elem_callback_t val)</argsstring>
        <name>snd_hctl_elem_set_callback</name>
        <param>
          <type><ref refid="group___h_control_1gaddfb152863e87857d463c7008d72ad74" kindref="member">snd_hctl_elem_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="group___h_control_1ga64ce2446d79c992547d3db8c7faa6143" kindref="member">snd_hctl_elem_callback_t</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set callback function for an HCTL element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>HCTL element </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>callback function </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/control.h" line="595" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/hcontrol.c" bodystart="986" bodyend="990"/>
      </memberdef>
      <memberdef kind="function" id="group___h_control_1gac0aad0000d7eccde5d107b1b95f429e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* snd_hctl_elem_get_callback_private</definition>
        <argsstring>(const snd_hctl_elem_t *obj)</argsstring>
        <name>snd_hctl_elem_get_callback_private</name>
        <param>
          <type>const <ref refid="group___h_control_1gaddfb152863e87857d463c7008d72ad74" kindref="member">snd_hctl_elem_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Get callback private value for an HCTL element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>HCTL element </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>callback private value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/control.h" line="596" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/hcontrol.c" bodystart="1008" bodyend="1012"/>
      </memberdef>
      <memberdef kind="function" id="group___h_control_1gaa9d511449fc220d09e69a05ae65f1ead" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void snd_hctl_elem_set_callback_private</definition>
        <argsstring>(snd_hctl_elem_t *obj, void *val)</argsstring>
        <name>snd_hctl_elem_set_callback_private</name>
        <param>
          <type><ref refid="group___h_control_1gaddfb152863e87857d463c7008d72ad74" kindref="member">snd_hctl_elem_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set callback private value for an HCTL element. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>HCTL element </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>callback private value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/control.h" line="597" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/control/hcontrol.c" bodystart="997" bodyend="1001"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The high level control interface. See <ref refid="hcontrol" kindref="compound">High level control interface</ref> page for more details. </para>    </detaileddescription>
  </compounddef>
</doxygen>
