<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group___p_c_m___description" kind="group">
    <compoundname>PCM_Description</compoundname>
    <title>Description Functions</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___p_c_m___description_1ga1089d73f52de6e7b724f7453d6f48f36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* snd_pcm_type_name</definition>
        <argsstring>(snd_pcm_type_t type)</argsstring>
        <name>snd_pcm_type_name</name>
        <param>
          <type><ref refid="group___p_c_m_1gaca6314f46f54a0b62536c403bbb62601" kindref="member">snd_pcm_type_t</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>get name of PCM type </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM type </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ascii name of PCM type </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="1042" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="2102" bodyend="2108"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___description_1gafea7e7c65133faec1da1ef8b2d079578" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* snd_pcm_stream_name</definition>
        <argsstring>(const snd_pcm_stream_t stream)</argsstring>
        <name>snd_pcm_stream_name</name>
        <param>
          <type>const <ref refid="group___p_c_m_1gac23b43ff55add78638e503b9cc892c24" kindref="member">snd_pcm_stream_t</ref></type>
          <declname>stream</declname>
        </param>
        <briefdescription>
<para>get name of PCM stream type </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stream</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM stream type </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ascii name of PCM stream type </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="1043" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="1932" bodyend="1937"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___description_1ga1406fe8388a612b8e44e5f3682d00e91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* snd_pcm_access_name</definition>
        <argsstring>(const snd_pcm_access_t _access)</argsstring>
        <name>snd_pcm_access_name</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga661221ba5e8f1d6eaf4ab8e2da57cc1a" kindref="member">snd_pcm_access_t</ref></type>
          <declname>_access</declname>
          <defname>acc</defname>
        </param>
        <briefdescription>
<para>get name of PCM access type </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>acc</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM access type </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ascii name of PCM access type </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="1044" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="1944" bodyend="1949"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___description_1ga2ca258b8ac569ca35f283e48d2181e45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* snd_pcm_format_name</definition>
        <argsstring>(const snd_pcm_format_t format)</argsstring>
        <name>snd_pcm_format_name</name>
        <param>
          <type>const <ref refid="group___p_c_m_1gaa14b7f26877a812acbb39811364177f8" kindref="member">snd_pcm_format_t</ref></type>
          <declname>format</declname>
        </param>
        <briefdescription>
<para>get name of PCM sample format </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM sample format </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ascii name of PCM sample format </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="1045" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="1956" bodyend="1961"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___description_1gae201c92e3053c778bd7f2a4f5cc4d0e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* snd_pcm_format_description</definition>
        <argsstring>(const snd_pcm_format_t format)</argsstring>
        <name>snd_pcm_format_description</name>
        <param>
          <type>const <ref refid="group___p_c_m_1gaa14b7f26877a812acbb39811364177f8" kindref="member">snd_pcm_format_t</ref></type>
          <declname>format</declname>
        </param>
        <briefdescription>
<para>get description of PCM sample format </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM sample format </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ascii description of PCM sample format </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="1046" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="1968" bodyend="1973"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___description_1ga81beb8c430d897208269bd67bb3309b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* snd_pcm_subformat_name</definition>
        <argsstring>(const snd_pcm_subformat_t subformat)</argsstring>
        <name>snd_pcm_subformat_name</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga1e5fe73a6bdf881e2f91921d5e5327c7" kindref="member">snd_pcm_subformat_t</ref></type>
          <declname>subformat</declname>
        </param>
        <briefdescription>
<para>get name of PCM sample subformat </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>subformat</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM sample subformat </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ascii name of PCM sample subformat </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="1047" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="2007" bodyend="2012"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___description_1gaf4e162f7a059cbbf8c388cb9ed5e23fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* snd_pcm_subformat_description</definition>
        <argsstring>(const snd_pcm_subformat_t subformat)</argsstring>
        <name>snd_pcm_subformat_description</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga1e5fe73a6bdf881e2f91921d5e5327c7" kindref="member">snd_pcm_subformat_t</ref></type>
          <declname>subformat</declname>
        </param>
        <briefdescription>
<para>get description of PCM sample subformat </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>subformat</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM sample subformat </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ascii description of PCM sample subformat </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="1048" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="2019" bodyend="2024"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___description_1ga59f99dd9647315a7312d1f2b6204b7bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___p_c_m_1gaa14b7f26877a812acbb39811364177f8" kindref="member">snd_pcm_format_t</ref></type>
        <definition>snd_pcm_format_t snd_pcm_format_value</definition>
        <argsstring>(const char *name)</argsstring>
        <name>snd_pcm_format_value</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>get PCM sample format from name </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM sample format name (case insensitive) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>PCM sample format </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="1049" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="1980" bodyend="2000"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___description_1ga9a27f18595344de572cce51c4e52ec4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* snd_pcm_tstamp_mode_name</definition>
        <argsstring>(const snd_pcm_tstamp_t mode)</argsstring>
        <name>snd_pcm_tstamp_mode_name</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga695a9755880cf886c13d07938f92ea77" kindref="member">snd_pcm_tstamp_t</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>get name of PCM tstamp mode setting </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM tstamp mode </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ascii name of PCM tstamp mode setting </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="1050" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="2063" bodyend="2068"/>
      </memberdef>
      <memberdef kind="function" id="group___p_c_m___description_1ga16ea2b82b7ea8f8c7b21e81aa6d28f1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* snd_pcm_state_name</definition>
        <argsstring>(const snd_pcm_state_t state)</argsstring>
        <name>snd_pcm_state_name</name>
        <param>
          <type>const <ref refid="group___p_c_m_1ga61ac499cb3701ce536d4d83725908860" kindref="member">snd_pcm_state_t</ref></type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>get name of PCM state </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>PCM state </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ascii name of PCM state </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/include/pcm.h" line="1051" column="1" bodyfile="/home/vladimir/Develop/alsa-lib/alsa-lib-1.1.3/src/pcm/pcm.c" bodystart="2087" bodyend="2092"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>See the <ref refid="pcm" kindref="compound">PCM (digital audio) interface</ref> page for more details. </para>    </detaileddescription>
  </compounddef>
</doxygen>
