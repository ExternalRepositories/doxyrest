<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structapr__mmap__t" kind="struct" language="C++" prot="public">
    <compoundname>apr_mmap_t</compoundname>
    <includes refid="apr__mmap_8h" local="no">apr_mmap.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structapr__mmap__t_1a42d01080278bbc9bad26728f9a71c492" prot="public" static="no" mutable="no">
        <type><ref refid="group__apr__pools_1gaf137f28edcf9a086cd6bc36c20d7cdfb" kindref="member">apr_pool_t</ref> *</type>
        <definition>apr_pool_t* apr_mmap_t::cntxt</definition>
        <argsstring></argsstring>
        <name>cntxt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The pool the mmap structure was allocated out of. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_mmap.h" line="64" column="1" bodyfile="include/apr_mmap.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structapr__mmap__t_1abcc62d7e7c8187311e6619faf0d44f19" prot="public" static="no" mutable="no">
        <type>void *</type>
        <definition>void* apr_mmap_t::mm</definition>
        <argsstring></argsstring>
        <name>mm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The start of the memory mapped area </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_mmap.h" line="80" column="1" bodyfile="include/apr_mmap.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structapr__mmap__t_1a274aea0906a4b674e1642ac9e81966c7" prot="public" static="no" mutable="no">
        <type>apr_size_t</type>
        <definition>apr_size_t apr_mmap_t::size</definition>
        <argsstring></argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The amount of data in the mmap </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_mmap.h" line="82" column="1" bodyfile="include/apr_mmap.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structapr__mmap__t_1aeca30aed7539548d31b7c0115020af62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>apr_mmap_t::APR_RING_ENTRY</definition>
        <argsstring>(apr_mmap_t) link</argsstring>
        <name>APR_RING_ENTRY</name>
        <param>
          <type><ref refid="structapr__mmap__t" kindref="compound">apr_mmap_t</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ring of <ref refid="structapr__mmap__t" kindref="compound">apr_mmap_t</ref>&apos;s that reference the same mmap&apos;ed region; acts in place of a reference count </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_mmap.h" line="85" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="remark"><para>As far as I can tell the only really sane way to store an MMAP is as a void * and a length. BeOS requires this area_id, but that&apos;s just a little something extra. I am exposing this type, because it doesn&apos;t make much sense to keep it private, and opening it up makes some stuff easier in Apache.The MMAP structure </para></simplesect>
</para>    </detaileddescription>
    <location file="include/apr_mmap.h" line="62" column="1" bodyfile="include/apr_mmap.h" bodystart="62" bodyend="86"/>
    <listofallmembers>
      <member refid="structapr__mmap__t_1aeca30aed7539548d31b7c0115020af62" prot="public" virt="non-virtual"><scope>apr_mmap_t</scope><name>APR_RING_ENTRY</name></member>
      <member refid="structapr__mmap__t_1a42d01080278bbc9bad26728f9a71c492" prot="public" virt="non-virtual"><scope>apr_mmap_t</scope><name>cntxt</name></member>
      <member refid="structapr__mmap__t_1abcc62d7e7c8187311e6619faf0d44f19" prot="public" virt="non-virtual"><scope>apr_mmap_t</scope><name>mm</name></member>
      <member refid="structapr__mmap__t_1a274aea0906a4b674e1642ac9e81966c7" prot="public" virt="non-virtual"><scope>apr_mmap_t</scope><name>size</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
