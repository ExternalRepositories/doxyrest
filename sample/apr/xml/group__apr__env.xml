<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__apr__env" kind="group">
    <compoundname>apr_env</compoundname>
    <title>Functions for manipulating the environment</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__apr__env_1gada7cd6ccada789a3738f8fc6334da809" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c" kindref="member">apr_status_t</ref></type>
        <definition>apr_status_t apr_env_get</definition>
        <argsstring>(char **value, const char *envvar, apr_pool_t *pool)</argsstring>
        <name>apr_env_get</name>
        <param>
          <type>char **</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>envvar</declname>
        </param>
        <param>
          <type><ref refid="group__apr__pools_1gaf137f28edcf9a086cd6bc36c20d7cdfb" kindref="member">apr_pool_t</ref> *</type>
          <declname>pool</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the value of an environment variable <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the returned value, allocated from <emphasis>pool</emphasis> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>envvar</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the environment variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pool</parametername>
</parameternamelist>
<parameterdescription>
<para>where to allocate <emphasis>value</emphasis> and any temporary storage from </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_env.h" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__apr__env_1gae11f733a639393a35e82c795f4ecd470" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c" kindref="member">apr_status_t</ref></type>
        <definition>apr_status_t apr_env_set</definition>
        <argsstring>(const char *envvar, const char *value, apr_pool_t *pool)</argsstring>
        <name>apr_env_set</name>
        <param>
          <type>const char *</type>
          <declname>envvar</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="group__apr__pools_1gaf137f28edcf9a086cd6bc36c20d7cdfb" kindref="member">apr_pool_t</ref> *</type>
          <declname>pool</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the value of an environment variable <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>envvar</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the environment variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pool</parametername>
</parameternamelist>
<parameterdescription>
<para>where to allocate temporary storage from </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_env.h" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__apr__env_1ga2bfac0686199b2fee97a7638df7cbfdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__apr__errno_1gaf76ee4543247e9fb3f3546203e590a6c" kindref="member">apr_status_t</ref></type>
        <definition>apr_status_t apr_env_delete</definition>
        <argsstring>(const char *envvar, apr_pool_t *pool)</argsstring>
        <name>apr_env_delete</name>
        <param>
          <type>const char *</type>
          <declname>envvar</declname>
        </param>
        <param>
          <type><ref refid="group__apr__pools_1gaf137f28edcf9a086cd6bc36c20d7cdfb" kindref="member">apr_pool_t</ref> *</type>
          <declname>pool</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Delete a variable from the environment <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>envvar</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the environment variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pool</parametername>
</parameternamelist>
<parameterdescription>
<para>where to allocate temporary storage from </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/apr_env.h" line="59" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
