<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__libusb__misc" kind="group">
    <compoundname>libusb_misc</compoundname>
    <title>Miscellaneous</title>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__libusb__misc_1ga5b5912057c2d7e23b3ed5aa0c20236df" prot="public" static="no">
        <name>libusb_standard_request</name>
        <enumvalue id="group__libusb__misc_1gga5b5912057c2d7e23b3ed5aa0c20236dfa42f2eefbbd7a5c5cce68ca5989a02a7a" prot="public">
          <name>LIBUSB_REQUEST_GET_STATUS</name>
          <initializer>= 0x00</initializer>
          <briefdescription>
<para>Request status of the specific recipient. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__libusb__misc_1gga5b5912057c2d7e23b3ed5aa0c20236dfa0b0f3b3ac6e8ebca120bf3581c5505de" prot="public">
          <name>LIBUSB_REQUEST_CLEAR_FEATURE</name>
          <initializer>= 0x01</initializer>
          <briefdescription>
<para>Clear or disable a specific feature. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__libusb__misc_1gga5b5912057c2d7e23b3ed5aa0c20236dfa6059966cdfccc4db0cccaab22a6d9a83" prot="public">
          <name>LIBUSB_REQUEST_SET_FEATURE</name>
          <initializer>= 0x03</initializer>
          <briefdescription>
<para>Set or enable a specific feature. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__libusb__misc_1gga5b5912057c2d7e23b3ed5aa0c20236dfa7c69aef99e548d128bc1f9e18c539c1d" prot="public">
          <name>LIBUSB_REQUEST_SET_ADDRESS</name>
          <initializer>= 0x05</initializer>
          <briefdescription>
<para>Set device address for all future accesses. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__libusb__misc_1gga5b5912057c2d7e23b3ed5aa0c20236dfa3ebb19fe897a2a36e90b2e8193b88b0f" prot="public">
          <name>LIBUSB_REQUEST_GET_DESCRIPTOR</name>
          <initializer>= 0x06</initializer>
          <briefdescription>
<para>Get the specified descriptor. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__libusb__misc_1gga5b5912057c2d7e23b3ed5aa0c20236dfa40ad5a26219379bbbeab2137b21dcb74" prot="public">
          <name>LIBUSB_REQUEST_SET_DESCRIPTOR</name>
          <initializer>= 0x07</initializer>
          <briefdescription>
<para>Used to update existing descriptors or add new descriptors. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__libusb__misc_1gga5b5912057c2d7e23b3ed5aa0c20236dfa7e33754fe6c088b94905c387155a8586" prot="public">
          <name>LIBUSB_REQUEST_GET_CONFIGURATION</name>
          <initializer>= 0x08</initializer>
          <briefdescription>
<para>Get the current device configuration value. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__libusb__misc_1gga5b5912057c2d7e23b3ed5aa0c20236dfaefcadf8a4b1f0d1dadd79764486b2cb3" prot="public">
          <name>LIBUSB_REQUEST_SET_CONFIGURATION</name>
          <initializer>= 0x09</initializer>
          <briefdescription>
<para>Set device configuration. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__libusb__misc_1gga5b5912057c2d7e23b3ed5aa0c20236dfa179b703deda249f6e48412bc2cf61d8c" prot="public">
          <name>LIBUSB_REQUEST_GET_INTERFACE</name>
          <initializer>= 0x0A</initializer>
          <briefdescription>
<para>Return the selected alternate setting for the specified interface. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__libusb__misc_1gga5b5912057c2d7e23b3ed5aa0c20236dfa72e910864721ebe3e5cb6a5b53de6061" prot="public">
          <name>LIBUSB_REQUEST_SET_INTERFACE</name>
          <initializer>= 0x0B</initializer>
          <briefdescription>
<para>Select an alternate interface for the specified interface. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__libusb__misc_1gga5b5912057c2d7e23b3ed5aa0c20236dfab4244333798720a3664e59187819f2d5" prot="public">
          <name>LIBUSB_REQUEST_SYNCH_FRAME</name>
          <initializer>= 0x0C</initializer>
          <briefdescription>
<para>Set then report an endpoint&apos;s synchronization frame. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__libusb__misc_1gga5b5912057c2d7e23b3ed5aa0c20236dfa8fc0213fcc23566ec28e88bee216777b" prot="public">
          <name>LIBUSB_REQUEST_SET_SEL</name>
          <initializer>= 0x30</initializer>
          <briefdescription>
<para>Sets both the U1 and U2 Exit Latency. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__libusb__misc_1gga5b5912057c2d7e23b3ed5aa0c20236dfaa280efe17cdd0be55d528b9932142376" prot="public">
          <name>LIBUSB_SET_ISOCH_DELAY</name>
          <initializer>= 0x31</initializer>
          <briefdescription>
<para>Delay from the time a host transmits a packet to the time it is received by the device. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Standard requests, as defined in table 9-5 of the USB 3.0 specifications. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/libusb/libusb-1.0.21/libusb/libusb.h" line="351" column="1" bodyfile="/home/vladimir/Develop/libusb/libusb-1.0.21/libusb/libusb.h" bodystart="351" bodyend="395"/>
      </memberdef>
      <memberdef kind="enum" id="group__libusb__misc_1ga0b0933ae70744726cde11254c39fac91" prot="public" static="no">
        <name>libusb_request_type</name>
        <enumvalue id="group__libusb__misc_1gga0b0933ae70744726cde11254c39fac91a20eca62c34d2d25be7e1776510184209" prot="public">
          <name>LIBUSB_REQUEST_TYPE_STANDARD</name>
          <initializer>= (0x00 &lt;&lt; 5)</initializer>
          <briefdescription>
<para>Standard. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__libusb__misc_1gga0b0933ae70744726cde11254c39fac91a43f45ae56bf339e3f984a4182fdd85f0" prot="public">
          <name>LIBUSB_REQUEST_TYPE_CLASS</name>
          <initializer>= (0x01 &lt;&lt; 5)</initializer>
          <briefdescription>
<para>Class. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__libusb__misc_1gga0b0933ae70744726cde11254c39fac91a1585f40d2a73c752a5f60688612c1345" prot="public">
          <name>LIBUSB_REQUEST_TYPE_VENDOR</name>
          <initializer>= (0x02 &lt;&lt; 5)</initializer>
          <briefdescription>
<para>Vendor. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__libusb__misc_1gga0b0933ae70744726cde11254c39fac91a8e2a1b00f9bcf05d3303c75c9e9cda69" prot="public">
          <name>LIBUSB_REQUEST_TYPE_RESERVED</name>
          <initializer>= (0x03 &lt;&lt; 5)</initializer>
          <briefdescription>
<para>Reserved. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Request type bits of the <ref refid="structlibusb__control__setup_1a39b148c231d675492ccd2383196926bf" kindref="member">bmRequestType</ref> field in control transfers. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/libusb/libusb-1.0.21/libusb/libusb.h" line="401" column="1" bodyfile="/home/vladimir/Develop/libusb/libusb-1.0.21/libusb/libusb.h" bodystart="401" bodyend="413"/>
      </memberdef>
      <memberdef kind="enum" id="group__libusb__misc_1ga20a4e8a729aa543fa742a5086596cbae" prot="public" static="no">
        <name>libusb_request_recipient</name>
        <enumvalue id="group__libusb__misc_1gga20a4e8a729aa543fa742a5086596cbaeaf39ffde2a586d565a817bfd591f2dc33" prot="public">
          <name>LIBUSB_RECIPIENT_DEVICE</name>
          <initializer>= 0x00</initializer>
          <briefdescription>
<para>Device. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__libusb__misc_1gga20a4e8a729aa543fa742a5086596cbaea9e5f9678cb9b301ccc07a247d350aadc" prot="public">
          <name>LIBUSB_RECIPIENT_INTERFACE</name>
          <initializer>= 0x01</initializer>
          <briefdescription>
<para>Interface. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__libusb__misc_1gga20a4e8a729aa543fa742a5086596cbaea6873e84c5a1ae0160891ebab16e5d93b" prot="public">
          <name>LIBUSB_RECIPIENT_ENDPOINT</name>
          <initializer>= 0x02</initializer>
          <briefdescription>
<para>Endpoint. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__libusb__misc_1gga20a4e8a729aa543fa742a5086596cbaeae6f863cf9e2122d2194916876e9477eb" prot="public">
          <name>LIBUSB_RECIPIENT_OTHER</name>
          <initializer>= 0x03</initializer>
          <briefdescription>
<para>Other. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Recipient bits of the <ref refid="structlibusb__control__setup_1a39b148c231d675492ccd2383196926bf" kindref="member">bmRequestType</ref> field in control transfers. </para>        </briefdescription>
        <detaileddescription>
<para>Values 4 through 31 are reserved. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/libusb/libusb-1.0.21/libusb/libusb.h" line="419" column="1" bodyfile="/home/vladimir/Develop/libusb/libusb-1.0.21/libusb/libusb.h" bodystart="419" bodyend="431"/>
      </memberdef>
      <memberdef kind="enum" id="group__libusb__misc_1gab2323aa0f04bc22038e7e1740b2f29ef" prot="public" static="no">
        <name>libusb_error</name>
        <enumvalue id="group__libusb__misc_1ggab2323aa0f04bc22038e7e1740b2f29efa576d8d63f6e24b2e57cb2ca63b304f15" prot="public">
          <name>LIBUSB_SUCCESS</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>Success (no error) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__libusb__misc_1ggab2323aa0f04bc22038e7e1740b2f29efa790feab8b45d8c323038f4d7d15eceec" prot="public">
          <name>LIBUSB_ERROR_IO</name>
          <initializer>= -1</initializer>
          <briefdescription>
<para>Input/output error. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__libusb__misc_1ggab2323aa0f04bc22038e7e1740b2f29efa680e4bf39b66a36be3182be3ebf58062" prot="public">
          <name>LIBUSB_ERROR_INVALID_PARAM</name>
          <initializer>= -2</initializer>
          <briefdescription>
<para>Invalid parameter. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__libusb__misc_1ggab2323aa0f04bc22038e7e1740b2f29efa131f3c2f6f2bb40bc6fb60ccb6f3152f" prot="public">
          <name>LIBUSB_ERROR_ACCESS</name>
          <initializer>= -3</initializer>
          <briefdescription>
<para>Access denied (insufficient permissions) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__libusb__misc_1ggab2323aa0f04bc22038e7e1740b2f29efaf8d98f464314a8e202507a0e5c67336f" prot="public">
          <name>LIBUSB_ERROR_NO_DEVICE</name>
          <initializer>= -4</initializer>
          <briefdescription>
<para>No such device (it may have been disconnected) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__libusb__misc_1ggab2323aa0f04bc22038e7e1740b2f29efa28214194dc4399e51777408b2c27f03f" prot="public">
          <name>LIBUSB_ERROR_NOT_FOUND</name>
          <initializer>= -5</initializer>
          <briefdescription>
<para>Entity not found. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__libusb__misc_1ggab2323aa0f04bc22038e7e1740b2f29efa34ede1140a8a16022f730ac80875ed3b" prot="public">
          <name>LIBUSB_ERROR_BUSY</name>
          <initializer>= -6</initializer>
          <briefdescription>
<para>Resource busy. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__libusb__misc_1ggab2323aa0f04bc22038e7e1740b2f29efa9b000ac2e6dc4ac864c59579dd08c8bd" prot="public">
          <name>LIBUSB_ERROR_TIMEOUT</name>
          <initializer>= -7</initializer>
          <briefdescription>
<para>Operation timed out. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__libusb__misc_1ggab2323aa0f04bc22038e7e1740b2f29efaf00ae4b8772fda64263ae6e4d6569af0" prot="public">
          <name>LIBUSB_ERROR_OVERFLOW</name>
          <initializer>= -8</initializer>
          <briefdescription>
<para>Overflow. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__libusb__misc_1ggab2323aa0f04bc22038e7e1740b2f29efa1406e98370900156484f5fe609270837" prot="public">
          <name>LIBUSB_ERROR_PIPE</name>
          <initializer>= -9</initializer>
          <briefdescription>
<para>Pipe error. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__libusb__misc_1ggab2323aa0f04bc22038e7e1740b2f29efa39c9284a18fb3277696d84d65f50dbea" prot="public">
          <name>LIBUSB_ERROR_INTERRUPTED</name>
          <initializer>= -10</initializer>
          <briefdescription>
<para>System call interrupted (perhaps due to signal) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__libusb__misc_1ggab2323aa0f04bc22038e7e1740b2f29efaff885c8ef4522f22f6673059c7b9edec" prot="public">
          <name>LIBUSB_ERROR_NO_MEM</name>
          <initializer>= -11</initializer>
          <briefdescription>
<para>Insufficient memory. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__libusb__misc_1ggab2323aa0f04bc22038e7e1740b2f29efa01b43115484f435627be755d5dc9509b" prot="public">
          <name>LIBUSB_ERROR_NOT_SUPPORTED</name>
          <initializer>= -12</initializer>
          <briefdescription>
<para>Operation not supported or unimplemented on this platform. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__libusb__misc_1ggab2323aa0f04bc22038e7e1740b2f29efa9705eb232d1a5e249926d4e76599672e" prot="public">
          <name>LIBUSB_ERROR_OTHER</name>
          <initializer>= -99</initializer>
          <briefdescription>
<para>Other error. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Error codes. </para>        </briefdescription>
        <detaileddescription>
<para>Most libusb functions return 0 on success or one of these codes on failure. You can call <ref refid="group__libusb__misc_1gacf319b823a1a1a25cc934d80db2f28c7" kindref="member">libusb_error_name()</ref> to retrieve a string representation of an error code or <ref refid="group__libusb__misc_1gab977153d03d867a8b228a5921edaf457" kindref="member">libusb_strerror()</ref> to get an end-user suitable description of an error code. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/libusb/libusb-1.0.21/libusb/libusb.h" line="1054" column="1" bodyfile="/home/vladimir/Develop/libusb/libusb-1.0.21/libusb/libusb.h" bodystart="1054" bodyend="1099"/>
      </memberdef>
      <memberdef kind="enum" id="group__libusb__misc_1gaab1b3fa0728c06fafbee897795889bd5" prot="public" static="no">
        <name>libusb_capability</name>
        <enumvalue id="group__libusb__misc_1ggaab1b3fa0728c06fafbee897795889bd5a24b79436d4bd088d169f9d1edb4b9649" prot="public">
          <name>LIBUSB_CAP_HAS_CAPABILITY</name>
          <initializer>= 0x0000</initializer>
          <briefdescription>
<para>The <ref refid="group__libusb__misc_1ga9b8e324d28c624cd0b8e7ba21607b8db" kindref="member">libusb_has_capability()</ref> API is available. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__libusb__misc_1ggaab1b3fa0728c06fafbee897795889bd5a8b1bbccc648a6677cb9030a6ba827438" prot="public">
          <name>LIBUSB_CAP_HAS_HOTPLUG</name>
          <initializer>= 0x0001</initializer>
          <briefdescription>
<para>Hotplug support is available on this platform. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__libusb__misc_1ggaab1b3fa0728c06fafbee897795889bd5aa74726ef0af0e42d2d56532f82e873a5" prot="public">
          <name>LIBUSB_CAP_HAS_HID_ACCESS</name>
          <initializer>= 0x0100</initializer>
          <briefdescription>
<para>The library can access HID devices without requiring user intervention. </para>          </briefdescription>
          <detaileddescription>
<para>Note that before being able to actually access an HID device, you may still have to call additional libusb functions such as <ref refid="group__libusb__dev_1ga5e0cc1d666097e915748593effdc634a" kindref="member">libusb_detach_kernel_driver()</ref>. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__libusb__misc_1ggaab1b3fa0728c06fafbee897795889bd5ad15a06b1aede635004f08bdc0fe561cc" prot="public">
          <name>LIBUSB_CAP_SUPPORTS_DETACH_KERNEL_DRIVER</name>
          <initializer>= 0x0101</initializer>
          <briefdescription>
<para>The library supports detaching of the default USB driver, using <ref refid="group__libusb__dev_1ga5e0cc1d666097e915748593effdc634a" kindref="member">libusb_detach_kernel_driver()</ref>, if one is set by the OS kernel. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Capabilities supported by an instance of libusb on the current running platform. </para>        </briefdescription>
        <detaileddescription>
<para>Test if the loaded library supports a given capability by calling <ref refid="group__libusb__misc_1ga9b8e324d28c624cd0b8e7ba21607b8db" kindref="member">libusb_has_capability()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/libusb/libusb-1.0.21/libusb/libusb.h" line="1273" column="1" bodyfile="/home/vladimir/Develop/libusb/libusb-1.0.21/libusb/libusb.h" bodystart="1273" bodyend="1286"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__libusb__misc_1ga611b1f878eda4efa11cf722970380994" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* usbi_locale_supported[]</definition>
        <argsstring>[]</argsstring>
        <name>usbi_locale_supported</name>
        <initializer>= { &quot;en&quot;, &quot;nl&quot;, &quot;fr&quot;, &quot;ru&quot; }</initializer>
        <briefdescription>
<para>How to add a new <ref refid="group__libusb__misc_1gab977153d03d867a8b228a5921edaf457" kindref="member">libusb_strerror()</ref> translation: </para>        </briefdescription>
        <detaileddescription>
<para><orderedlist>
<listitem>
<para>Download the latest <computeroutput>strerror.c</computeroutput> from:<linebreak/>
 <ulink url="https://raw.github.com/libusb/libusb/master/libusb/sterror.c">https://raw.github.com/libusb/libusb/master/libusb/sterror.c</ulink>  </para></listitem>
<listitem>
<para>Open the file in an UTF-8 capable editor  </para></listitem>
<listitem>
<para>Add the 2 letter <ulink url="http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes">ISO 639-1</ulink> code for your locale at the end of <computeroutput>usbi_locale_supported</computeroutput>[]<linebreak/>
 Eg. for Chinese, you would add &quot;zh&quot; so that: <programlisting><codeline><highlight class="normal">...<sp/>usbi_locale_supported[]<sp/>=<sp/>{<sp/>&quot;en&quot;,<sp/>&quot;nl&quot;,<sp/>&quot;fr&quot;<sp/>};</highlight></codeline>
</programlisting> becomes: <programlisting><codeline><highlight class="normal">...<sp/>usbi_locale_supported[]<sp/>=<sp/>{<sp/>&quot;en&quot;,<sp/>&quot;nl&quot;,<sp/>&quot;fr&quot;,<sp/>&quot;zh&quot;<sp/>};</highlight></codeline>
</programlisting>  </para></listitem>
<listitem>
<para>Copy the <computeroutput>{ / * English (en) * / ... }</computeroutput> section and add it at the end of <computeroutput>usbi_localized_errors</computeroutput> <linebreak/>
 Eg. for Chinese, the last section of <computeroutput>usbi_localized_errors</computeroutput> could look like: <programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/>{<sp/>/<sp/>*<sp/>Chinese<sp/>(zh)<sp/>*<sp/>/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;Success&quot;,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;Other<sp/>error&quot;,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting>  </para></listitem>
<listitem>
<para>Translate each of the English messages from the section you copied into your language  </para></listitem>
<listitem>
<para>Save the file (in UTF-8 format) and send it to <computeroutput>libusb-devel@lists.sourceforge.net</computeroutput>  </para></listitem>
</orderedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/libusb/libusb-1.0.21/libusb/strerror.c" line="63" column="1" bodyfile="/home/vladimir/Develop/libusb/libusb-1.0.21/libusb/strerror.c" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__libusb__misc_1ga9b8e324d28c624cd0b8e7ba21607b8db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int libusb_has_capability</definition>
        <argsstring>(uint32_t capability)</argsstring>
        <name>libusb_has_capability</name>
        <param>
          <type>uint32_t</type>
          <declname>capability</declname>
        </param>
        <briefdescription>
<para>Check at runtime if the loaded library has a given capability. </para>        </briefdescription>
        <detaileddescription>
<para>This call should be performed after <ref refid="group__libusb__lib_1ga9517c37281bba0b51cc62eba728be48b" kindref="member">libusb_init()</ref>, to ensure the backend has updated its capability set.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>capability</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="group__libusb__misc_1gaab1b3fa0728c06fafbee897795889bd5" kindref="member">libusb_capability</ref> to check for </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>nonzero if the running library has the capability, 0 otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/libusb/libusb-1.0.21/libusb/core.c" line="2250" column="1" bodyfile="/home/vladimir/Develop/libusb/libusb-1.0.21/libusb/core.c" bodystart="2250" bodyend="2263"/>
      </memberdef>
      <memberdef kind="function" id="group__libusb__misc_1gacf319b823a1a1a25cc934d80db2f28c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* libusb_error_name</definition>
        <argsstring>(int error_code)</argsstring>
        <name>libusb_error_name</name>
        <param>
          <type>int</type>
          <declname>error_code</declname>
        </param>
        <briefdescription>
<para>Returns a constant NULL-terminated string with the ASCII name of a libusb error or transfer status code. </para>        </briefdescription>
        <detaileddescription>
<para>The caller must not free() the returned string.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>error_code</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="group__libusb__misc_1gab2323aa0f04bc22038e7e1740b2f29ef" kindref="member">libusb_error</ref> or libusb_transfer_status code to return the name of. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The error name, or the string <bold>UNKNOWN</bold> if the value of error_code is not a known error / status code. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/libusb/libusb-1.0.21/libusb/core.c" line="2474" column="1" bodyfile="/home/vladimir/Develop/libusb/libusb-1.0.21/libusb/core.c" bodystart="2474" bodyend="2522"/>
      </memberdef>
      <memberdef kind="function" id="group__libusb__misc_1ga61d07b01404fdea080cd16c1ed8be93d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const struct <ref refid="structlibusb__version" kindref="compound">libusb_version</ref> *</type>
        <definition>const struct libusb_version* libusb_get_version</definition>
        <argsstring>(void)</argsstring>
        <name>libusb_get_version</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns a pointer to const struct <ref refid="structlibusb__version" kindref="compound">libusb_version</ref> with the version (major, minor, micro, nano and rc) of the running library. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/libusb/libusb-1.0.21/libusb/core.c" line="2529" column="1" bodyfile="/home/vladimir/Develop/libusb/libusb-1.0.21/libusb/core.c" bodystart="2529" bodyend="2532"/>
      </memberdef>
      <memberdef kind="function" id="group__libusb__misc_1gae3b1162b8e69b49bbf74dcbbdeeadbda" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint16_t</type>
        <definition>static uint16_t libusb_cpu_to_le16</definition>
        <argsstring>(const uint16_t x)</argsstring>
        <name>libusb_cpu_to_le16</name>
        <param>
          <type>const uint16_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Convert a 16-bit value from host-endian to little-endian format. </para>        </briefdescription>
        <detaileddescription>
<para>On little endian systems, this function does nothing. On big endian systems, the bytes are swapped. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the host-endian value to convert </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the value in little-endian byte order </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/libusb/libusb-1.0.21/libusb/libusb.h" line="161" column="1" bodyfile="/home/vladimir/Develop/libusb/libusb-1.0.21/libusb/libusb.h" bodystart="161" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="group__libusb__misc_1ga0badebde406e5f1874fb72ec6d1b60f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int libusb_setlocale</definition>
        <argsstring>(const char *locale)</argsstring>
        <name>libusb_setlocale</name>
        <param>
          <type>const char *</type>
          <declname>locale</declname>
        </param>
        <briefdescription>
<para>Set the language, and only the language, not the encoding! used for translatable libusb messages. </para>        </briefdescription>
        <detaileddescription>
<para>This takes a locale string in the default setlocale format: lang[-region] or lang[_country_region][.codeset]. Only the lang part of the string is used, and only 2 letter ISO 639-1 codes are accepted for it, such as &quot;de&quot;. The optional region, country_region or codeset parts are ignored. This means that functions which return translatable strings will NOT honor the specified encoding. All strings returned are encoded as UTF-8 strings.</para><para>If <ref refid="group__libusb__misc_1ga0badebde406e5f1874fb72ec6d1b60f4" kindref="member">libusb_setlocale()</ref> is not called, all messages will be in English.</para><para>The following functions return translatable strings: <ref refid="group__libusb__misc_1gab977153d03d867a8b228a5921edaf457" kindref="member">libusb_strerror()</ref>. Note that the libusb log messages controlled through <ref refid="group__libusb__lib_1ga5f8376b7a863a5a8d5b8824feb8a427a" kindref="member">libusb_set_debug()</ref> are not translated, they are always in English.</para><para>For POSIX UTF-8 environments if you want libusb to follow the standard locale settings, call libusb_setlocale(setlocale(LC_MESSAGES, NULL)), after your app has done its locale setup.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>locale</parametername>
</parameternamelist>
<parameterdescription>
<para>locale-string in the form of lang[_country_region][.codeset] or lang[-region], where lang is a 2 letter ISO 639-1 code </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>LIBUSB_SUCCESS on success </para></simplesect>
<simplesect kind="return"><para>LIBUSB_ERROR_INVALID_PARAM if the locale doesn&apos;t meet the requirements </para></simplesect>
<simplesect kind="return"><para>LIBUSB_ERROR_NOT_FOUND if the requested language is not supported </para></simplesect>
<simplesect kind="return"><para>a LIBUSB_ERROR code on other errors </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/libusb/libusb-1.0.21/libusb/strerror.c" line="158" column="1" bodyfile="/home/vladimir/Develop/libusb/libusb-1.0.21/libusb/strerror.c" bodystart="158" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="group__libusb__misc_1gab977153d03d867a8b228a5921edaf457" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* libusb_strerror</definition>
        <argsstring>(enum libusb_error errcode)</argsstring>
        <name>libusb_strerror</name>
        <param>
          <type>enum <ref refid="group__libusb__misc_1gab2323aa0f04bc22038e7e1740b2f29ef" kindref="member">libusb_error</ref></type>
          <declname>errcode</declname>
        </param>
        <briefdescription>
<para>Returns a constant string with a short description of the given error code, this description is intended for displaying to the end user and will be in the language set by <ref refid="group__libusb__misc_1ga0badebde406e5f1874fb72ec6d1b60f4" kindref="member">libusb_setlocale()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>The returned string is encoded in UTF-8.</para><para>The messages always start with a capital letter and end without any dot. The caller must not free() the returned string.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>errcode</parametername>
</parameternamelist>
<parameterdescription>
<para>the error code whose description is desired </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a short description of the error code in UTF-8 encoding </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/libusb/libusb-1.0.21/libusb/strerror.c" line="192" column="1" bodyfile="/home/vladimir/Develop/libusb/libusb-1.0.21/libusb/strerror.c" bodystart="192" bodyend="202"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__libusb__misc_1gaa7d6035eb2692d455d27144560a0f68d" prot="public" static="no">
        <name>LIBUSB_CALL</name>
        <briefdescription>
<para>libusb&apos;s Windows calling convention. </para>        </briefdescription>
        <detaileddescription>
<para>Under Windows, the selection of available compilers and configurations means that, unlike other platforms, there is not <emphasis>one true calling convention</emphasis> (calling convention: the manner in which parameters are passed to functions in the generated assembly code).</para><para>Matching the Windows API itself, libusb uses the WINAPI convention (which translates to the <computeroutput>stdcall</computeroutput> convention) and guarantees that the library is compiled in this way. The public header file also includes appropriate annotations so that your own software will use the right convention, even if another convention is being used by default within your codebase.</para><para>The one consideration that you must apply in your software is to mark all functions which you use as libusb callbacks with this LIBUSB_CALL annotation, so that they too get compiled for the correct calling convention.</para><para>On non-Windows operating systems, this macro is defined as nothing. This means that you can apply it to your code without worrying about cross-platform compatibility. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/libusb/libusb-1.0.21/libusb/libusb.h" line="121" column="10" bodyfile="/home/vladimir/Develop/libusb/libusb-1.0.21/libusb/libusb.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__libusb__misc_1gaabe4bc36a83358685d36a6c853cbb4de" prot="public" static="no">
        <name>LIBUSB_API_VERSION</name>
        <initializer>0x01000105</initializer>
        <briefdescription>
<para>libusb&apos;s API version. </para>        </briefdescription>
        <detaileddescription>
<para>Since version 1.0.13, to help with feature detection, libusb defines a LIBUSB_API_VERSION macro that gets increased every time there is a significant change to the API, such as the introduction of a new call, the definition of a new macro/enum member, or any other element that libusb applications may want to detect at compilation time.</para><para>The macro is typically used in an application as follows: <programlisting><codeline><highlight class="normal">#if<sp/>defined(LIBUSB_API_VERSION)<sp/>&amp;&amp;<sp/>(LIBUSB_API_VERSION<sp/>&gt;=<sp/>0x01001234)</highlight></codeline>
<codeline><highlight class="normal">//<sp/>Use<sp/>one<sp/>of<sp/>the<sp/>newer<sp/>features<sp/>from<sp/>the<sp/>libusb<sp/>API</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
</programlisting></para><para>Internally, LIBUSB_API_VERSION is defined as follows: (libusb major &lt;&lt; 24) | (libusb minor &lt;&lt; 16) | (16 bit incremental) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/libusb/libusb-1.0.21/libusb/libusb.h" line="144" column="9" bodyfile="/home/vladimir/Develop/libusb/libusb-1.0.21/libusb/libusb.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__libusb__misc_1ga22961bb8cb0d6a9b22c88079efb59b8b" prot="public" static="no">
        <name>libusb_le16_to_cpu</name>
        <initializer><ref refid="group__libusb__misc_1gae3b1162b8e69b49bbf74dcbbdeeadbda" kindref="member">libusb_cpu_to_le16</ref></initializer>
        <briefdescription>
<para>Convert a 16-bit value from little-endian to host-endian format. </para>        </briefdescription>
        <detaileddescription>
<para>On little endian systems, this function does nothing. On big endian systems, the bytes are swapped. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the little-endian value to convert </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the value in host-endian byte order </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vladimir/Develop/libusb/libusb-1.0.21/libusb/libusb.h" line="180" column="9" bodyfile="/home/vladimir/Develop/libusb/libusb-1.0.21/libusb/libusb.h" bodystart="180" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
