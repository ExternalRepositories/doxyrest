<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__libssh__log" kind="group">
    <compoundname>libssh_log</compoundname>
    <title>The SSH logging functions.</title>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__libssh__log_1ga06fc87d81c62e9abb8790b6e5713c55b" prot="public" static="no">
        <name>@0</name>
        <enumvalue id="group__libssh__log_1gga06fc87d81c62e9abb8790b6e5713c55ba95c5ce872b66ec03f3336970c1e0a774" prot="public">
          <name>SSH_LOG_NOLOG</name>
          <initializer>=0</initializer>
          <briefdescription>
<para>No logging at all. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__libssh__log_1gga06fc87d81c62e9abb8790b6e5713c55ba12e6bbab0c5a667e259e2f9599a72550" prot="public">
          <name>SSH_LOG_WARNING</name>
          <briefdescription>
<para>Only warnings. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__libssh__log_1gga06fc87d81c62e9abb8790b6e5713c55ba75fa79e63947b66462db977d9b5ae27c" prot="public">
          <name>SSH_LOG_PROTOCOL</name>
          <briefdescription>
<para>High level protocol information. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__libssh__log_1gga06fc87d81c62e9abb8790b6e5713c55ba6445dfe21592d69d9741d319538b6673" prot="public">
          <name>SSH_LOG_PACKET</name>
          <briefdescription>
<para>Lower level protocol infomations, packet level. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__libssh__log_1gga06fc87d81c62e9abb8790b6e5713c55ba926c933f61d1afa64003c1cc66f6a01c" prot="public">
          <name>SSH_LOG_FUNCTIONS</name>
          <briefdescription>
<para>Every function path. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libssh.h" line="277" column="1" bodyfile="include/libssh/libssh.h" bodystart="277" bodyend="293"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__libssh__log_1ga04e485696de6a4eb9ba303ef190f6a93" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int current_timestring</definition>
        <argsstring>(int hires, char *buf, size_t len)</argsstring>
        <name>current_timestring</name>
        <param>
          <type>int</type>
          <declname>hires</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/log.c" line="51" column="1" bodyfile="src/log.c" bodystart="51" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__log_1ga04874b7c2777229ef8ec669886ee10bd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ssh_log_stderr</definition>
        <argsstring>(int verbosity, const char *function, const char *buffer)</argsstring>
        <name>ssh_log_stderr</name>
        <param>
          <type>int</type>
          <declname>verbosity</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>function</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/log.c" line="77" column="1" bodyfile="src/log.c" bodystart="77" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__log_1ga28de9ecb422e9b2ffcd5dcb5b7ec13e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ssh_log_function</definition>
        <argsstring>(int verbosity, const char *function, const char *buffer)</argsstring>
        <name>ssh_log_function</name>
        <param>
          <type>int</type>
          <declname>verbosity</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>function</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/log.c" line="94" column="1" bodyfile="src/log.c" bodystart="94" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__log_1gac8bd5378e8af9c6af0ebc198ae6dd2ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _ssh_log</definition>
        <argsstring>(int verbosity, const char *function, const char *format,...)</argsstring>
        <name>_ssh_log</name>
        <param>
          <type>int</type>
          <declname>verbosity</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>function</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/log.c" line="114" column="1" bodyfile="src/log.c" bodystart="114" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__log_1ga0bb252b81e0c497fc559c9e4007cf6c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ssh_log</definition>
        <argsstring>(ssh_session session, int verbosity, const char *format,...)</argsstring>
        <name>ssh_log</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <param>
          <type>int</type>
          <declname>verbosity</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/log.c" line="131" column="1" bodyfile="src/log.c" bodystart="131" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__log_1gacfb35fd4c7d3dafdbbfaa2c255022ddc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ssh_log_common</definition>
        <argsstring>(struct ssh_common_struct *common, int verbosity, const char *function, const char *format,...)</argsstring>
        <name>ssh_log_common</name>
        <param>
          <type>struct ssh_common_struct *</type>
          <declname>common</declname>
        </param>
        <param>
          <type>int</type>
          <declname>verbosity</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>function</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>log a SSH event with a common pointer </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>common</parametername>
</parameternamelist>
<parameterdescription>
<para>The SSH/bind session. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>verbosity</parametername>
</parameternamelist>
<parameterdescription>
<para>The verbosity of the event. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>The format string of the log entry. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/log.c" line="152" column="1" bodyfile="src/log.c" bodystart="152" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__log_1ga9719dabb8fab8a3ebeb4dc2ebcd2dd45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_set_log_level</definition>
        <argsstring>(int level)</argsstring>
        <name>ssh_set_log_level</name>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <briefdescription>
<para>Set the log level of the library. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">level</parametername>
</parameternamelist>
<parameterdescription>
<para>The level to set.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SSH_OK on success, SSH_ERROR on error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/log.c" line="178" column="1" bodyfile="src/log.c" bodystart="178" bodyend="186"/>
        <referencedby refid="group__libssh__session_1ga93f7f7159893f3ce62c9b178724eff75" compoundref="options_8c" startline="1012" endline="1182">ssh_options_getopt</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__log_1gad6a0b7b581b12be4e34a110b7312614b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_get_log_level</definition>
        <argsstring>(void)</argsstring>
        <name>ssh_get_log_level</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the log level of the library. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The value of the log level. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/log.c" line="193" column="1" bodyfile="src/log.c" bodystart="193" bodyend="195"/>
        <referencedby refid="group__libssh__error_1ga03ff45cb8af89234c4c83beb6e7a8eab" compoundref="error_8c" startline="51" endline="69">_ssh_set_error</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__log_1ga6accdc08b7d8c4234750ef30c4854b9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_set_log_callback</definition>
        <argsstring>(ssh_logging_callback cb)</argsstring>
        <name>ssh_set_log_callback</name>
        <param>
          <type><ref refid="group__libssh__callbacks_1gab6eedc77c07dde0c6baf9c29e7700a99" kindref="member">ssh_logging_callback</ref></type>
          <declname>cb</declname>
        </param>
        <briefdescription>
<para>Set the logging callback function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cb</parametername>
</parameternamelist>
<parameterdescription>
<para>The callback to set.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, &lt; 0 on errror. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/log.c" line="197" column="1" bodyfile="src/log.c" bodystart="197" bodyend="205"/>
        <referencedby refid="group__libssh__callbacks_1ga2e4b0507c738748a3f10e43fe201fe09" compoundref="callbacks_8c" startline="45" endline="65">ssh_set_callbacks</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__log_1ga0f795c820547d058dbbfa80cd4fe9a4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__libssh__callbacks_1gab6eedc77c07dde0c6baf9c29e7700a99" kindref="member">ssh_logging_callback</ref></type>
        <definition>ssh_logging_callback ssh_get_log_callback</definition>
        <argsstring>(void)</argsstring>
        <name>ssh_get_log_callback</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the pointer to the logging callback function. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The pointer the the callback or NULL if none set. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/log.c" line="207" column="1" bodyfile="src/log.c" bodystart="207" bodyend="209"/>
        <referencedby refid="group__libssh__callbacks_1ga2e4b0507c738748a3f10e43fe201fe09" compoundref="callbacks_8c" startline="45" endline="65">ssh_set_callbacks</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__log_1ga887a1e754cd935b55fea1afb1f718761" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* ssh_get_log_userdata</definition>
        <argsstring>(void)</argsstring>
        <name>ssh_get_log_userdata</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the userdata of the logging function. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The userdata if set or NULL. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/log.c" line="216" column="1" bodyfile="src/log.c" bodystart="216" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__log_1ga0addd5c29922f40e9f842a43e0cb0b27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_set_log_userdata</definition>
        <argsstring>(void *data)</argsstring>
        <name>ssh_set_log_userdata</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Set the userdata for the logging function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>The userdata to set.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SSH_OK on success. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/log.c" line="232" column="1" bodyfile="src/log.c" bodystart="232" bodyend="237"/>
        <referencedby refid="group__libssh__callbacks_1ga2e4b0507c738748a3f10e43fe201fe09" compoundref="callbacks_8c" startline="45" endline="65">ssh_set_callbacks</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Logging functions for debugging and problem resolving. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
