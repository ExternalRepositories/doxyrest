<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__libssh__threads" kind="group">
    <compoundname>libssh_threads</compoundname>
    <title>The SSH threading functions.</title>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__libssh__threads_1ga3381df5358757a32636727fb0081976c" prot="public" static="yes" mutable="no">
        <type>struct ssh_threads_callbacks_struct</type>
        <definition>struct ssh_threads_callbacks_struct ssh_threads_noop</definition>
        <argsstring></argsstring>
        <name>ssh_threads_noop</name>
        <initializer>=
{
    &quot;threads_noop&quot;,
    threads_noop,
    threads_noop,
    threads_noop,
    threads_noop,
    threads_id_noop
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/threads.c" line="41" column="1" bodyfile="src/threads.c" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__libssh__threads_1gadb5d9b7e2606d95be69a5ad23fc4d073" prot="public" static="yes" mutable="no">
        <type>struct ssh_threads_callbacks_struct *</type>
        <definition>struct ssh_threads_callbacks_struct* user_callbacks</definition>
        <argsstring></argsstring>
        <name>user_callbacks</name>
        <initializer>=&amp;ssh_threads_noop</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/threads.c" line="59" column="1" bodyfile="src/threads.c" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__libssh__threads_1ga721baef37bce744f820cd2ae598615bb" prot="public" static="yes" mutable="no">
        <type>void **</type>
        <definition>void** libcrypto_mutexes</definition>
        <argsstring></argsstring>
        <name>libcrypto_mutexes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/threads.c" line="107" column="1" bodyfile="src/threads.c" bodystart="107" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__libssh__threads_1ga8644d8daa52d4911cfcce76bbdeba4f6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int threads_noop</definition>
        <argsstring>(void **lock)</argsstring>
        <name>threads_noop</name>
        <param>
          <type>void **</type>
          <declname>lock</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/threads.c" line="36" column="1" bodyfile="src/threads.c" bodystart="36" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__threads_1gab410830e69e7f4c910547071ea338037" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>static unsigned long threads_id_noop</definition>
        <argsstring>(void)</argsstring>
        <name>threads_id_noop</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/threads.c" line="41" column="1" bodyfile="src/threads.c" bodystart="41" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__threads_1gaed3006dbae78414fa3b82c8d9af69a88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct ssh_threads_callbacks_struct *</type>
        <definition>struct ssh_threads_callbacks_struct* ssh_threads_get_noop</definition>
        <argsstring>(void)</argsstring>
        <name>ssh_threads_get_noop</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the noop threads callbacks structure. </para>        </briefdescription>
        <detaileddescription>
<para>This can be used with ssh_threads_set_callbacks. These callbacks do nothing and are being used by default.</para><para><simplesect kind="return"><para>Always returns a valid pointer to the noop callbacks structure.</para></simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__threads_1gaf473af3fbae6f1bb0e249fd1d079ff68" kindref="member">ssh_threads_set_callbacks</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/threads.c" line="55" column="1" bodyfile="src/threads.c" bodystart="55" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__threads_1gaa1f1de653448e7aea5be684daa208785" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void libcrypto_lock_callback</definition>
        <argsstring>(int mode, int i, const char *file, int line)</argsstring>
        <name>libcrypto_lock_callback</name>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/threads.c" line="109" column="1" bodyfile="src/threads.c" bodystart="109" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__threads_1gaf24fe91a8fa9e20e3ef1e2b1ebf0d6e3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int libcrypto_thread_init</definition>
        <argsstring>(void)</argsstring>
        <name>libcrypto_thread_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/threads.c" line="119" column="1" bodyfile="src/threads.c" bodystart="119" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__threads_1ga6b00f27ae935a3239dc87e5356b7078b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void libcrypto_thread_finalize</definition>
        <argsstring>(void)</argsstring>
        <name>libcrypto_thread_finalize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/threads.c" line="136" column="1" bodyfile="src/threads.c" bodystart="136" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__threads_1ga93b7aed4984dbd58a270f1f7eb37f5cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_threads_init</definition>
        <argsstring>(void)</argsstring>
        <name>ssh_threads_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>inits the threading with the backend cryptographic libraries </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/threads.c" line="154" column="1" bodyfile="src/threads.c" bodystart="154" bodyend="175"/>
        <referencedby refid="group__libssh_1ga3ebf8d6920e563f3b032e3cd5277598e" compoundref="init_8c" startline="53" endline="61">ssh_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__threads_1ga892b23f2f4ffe4e33290a83802faa265" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ssh_threads_finalize</definition>
        <argsstring>(void)</argsstring>
        <name>ssh_threads_finalize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/threads.c" line="177" column="1" bodyfile="src/threads.c" bodystart="177" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__threads_1gaf473af3fbae6f1bb0e249fd1d079ff68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_threads_set_callbacks</definition>
        <argsstring>(struct ssh_threads_callbacks_struct *cb)</argsstring>
        <name>ssh_threads_set_callbacks</name>
        <param>
          <type>struct ssh_threads_callbacks_struct *</type>
          <declname>cb</declname>
        </param>
        <briefdescription>
<para>Set the thread callbacks structure. </para>        </briefdescription>
        <detaileddescription>
<para>This is necessary if your program is using libssh in a multithreaded fashion. This function must be called first, outside of any threading context (in your main() function for instance), before you call <ref refid="group__libssh_1ga3ebf8d6920e563f3b032e3cd5277598e" kindref="member">ssh_init()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cb</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a ssh_threads_callbacks_struct structure, which contains the different callbacks to be set.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Always returns SSH_OK.</para></simplesect>
<simplesect kind="see"><para>ssh_threads_callbacks_struct </para></simplesect>
<simplesect kind="see"><para>SSH_THREADS_PTHREAD </para></simplesect>
<xrefsect id="bug_1_bug000001"><xreftitle>Bug</xreftitle><xrefdescription><para>libgcrypt 1.6 and bigger backend does not support custom callback. Using anything else than pthreads here will fail. </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/threads.c" line="184" column="1" bodyfile="src/threads.c" bodystart="184" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__threads_1gac9431f068584276377498dea938cf951" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* ssh_threads_get_type</definition>
        <argsstring>(void)</argsstring>
        <name>ssh_threads_get_type</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/threads.c" line="189" column="1" bodyfile="src/threads.c" bodystart="189" bodyend="193"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Threading with libssh. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
