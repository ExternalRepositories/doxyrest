<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__libssh__error" kind="group">
    <compoundname>libssh_error</compoundname>
    <title>The SSH error functions.</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__libssh__error_1ga03ff45cb8af89234c4c83beb6e7a8eab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _ssh_set_error</definition>
        <argsstring>(void *error, int code, const char *function, const char *descr,...)</argsstring>
        <name>_ssh_set_error</name>
        <param>
          <type>void *</type>
          <declname>error</declname>
        </param>
        <param>
          <type>int</type>
          <declname>code</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>function</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>descr</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>Registers an error with a description. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>The place to store the error.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>code</parametername>
</parameternamelist>
<parameterdescription>
<para>The class of error.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>descr</parametername>
</parameternamelist>
<parameterdescription>
<para>The description, which can be a format string.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>The arguments for the format string. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/error.c" line="51" column="1" bodyfile="src/error.c" bodystart="51" bodyend="69"/>
        <references refid="group__libssh__log_1gad6a0b7b581b12be4e34a110b7312614b" compoundref="log_8c" startline="193" endline="195">ssh_get_log_level</references>
        <referencedby refid="group__libssh__error_1ga5db8187e6666f7b255b80197f53fd359" compoundref="error_8c" startline="98" endline="102">_ssh_set_error_invalid</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__error_1ga9d1eb111a8215cc82a9ad8bc3885c7df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _ssh_set_error_oom</definition>
        <argsstring>(void *error, const char *function)</argsstring>
        <name>_ssh_set_error_oom</name>
        <param>
          <type>void *</type>
          <declname>error</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>function</declname>
        </param>
        <briefdescription>
<para>Registers an out of memory error. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>The place to store the error. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/error.c" line="79" column="1" bodyfile="src/error.c" bodystart="79" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__error_1ga5db8187e6666f7b255b80197f53fd359" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _ssh_set_error_invalid</definition>
        <argsstring>(void *error, const char *function)</argsstring>
        <name>_ssh_set_error_invalid</name>
        <param>
          <type>void *</type>
          <declname>error</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>function</declname>
        </param>
        <briefdescription>
<para>Registers an invalid argument error. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>The place to store the error.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>function</parametername>
</parameternamelist>
<parameterdescription>
<para>The function the error happened in. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/error.c" line="98" column="1" bodyfile="src/error.c" bodystart="98" bodyend="102"/>
        <references refid="group__libssh__error_1ga03ff45cb8af89234c4c83beb6e7a8eab" compoundref="error_8c" startline="51" endline="69">_ssh_set_error</references>
      </memberdef>
      <memberdef kind="function" id="group__libssh__error_1ga9241586665bf21f823806473fc386258" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* ssh_get_error</definition>
        <argsstring>(void *error)</argsstring>
        <name>ssh_get_error</name>
        <param>
          <type>void *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Retrieve the error text message from the last error. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>An ssh_session or ssh_bind.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A static string describing the error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/error.c" line="111" column="1" bodyfile="src/error.c" bodystart="111" bodyend="115"/>
        <referencedby refid="classssh_1_1_session_1ab935e41beab3db33bccf5dd8f23a6886" compoundref="libsshpp_8hpp" startline="260" endline="262">ssh::Session::getError</referencedby>
        <referencedby refid="group__libssh__scp_1ga1db56dcb9dee01dd0b679b3b11151110" compoundref="scp_8c" startline="95" endline="150">ssh_scp_init</referencedby>
        <referencedby refid="group__libssh__scp_1ga2ca698c1e49612c083d9f8a72df52188" compoundref="scp_8c" startline="271" endline="298">ssh_scp_leave_directory</referencedby>
        <referencedby refid="group__libssh__scp_1gaa584f03d4e3d582ac10a3a19818ec56d" compoundref="scp_8c" startline="227" endline="261">ssh_scp_push_directory</referencedby>
        <referencedby refid="group__libssh__scp_1ga50b701b9c8923011d4fc6489c9c7eaae" compoundref="scp_8c" startline="317" endline="355">ssh_scp_push_file64</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__error_1ga036433b7bf3d4ca94206253f58d136f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_get_error_code</definition>
        <argsstring>(void *error)</argsstring>
        <name>ssh_get_error_code</name>
        <param>
          <type>void *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Retrieve the error code from the last error. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>An ssh_session or ssh_bind.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SSH_NO_ERROR No error occurred<linebreak/>
 SSH_REQUEST_DENIED The last request was denied but situation is recoverable<linebreak/>
 SSH_FATAL A fatal error occurred. This could be an unexpected disconnection<linebreak/>
 Other error codes are internal but can be considered same than SSH_FATAL. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/error.c" line="131" column="1" bodyfile="src/error.c" bodystart="131" bodyend="135"/>
        <referencedby refid="classssh_1_1_session_1aa48f704e1f62335eef378efef5215257" compoundref="libsshpp_8hpp" startline="266" endline="268">ssh::Session::getErrorCode</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Functions for error handling. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
