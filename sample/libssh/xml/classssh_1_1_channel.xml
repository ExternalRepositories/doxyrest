<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classssh_1_1_channel" kind="class" language="C++" prot="public">
    <compoundname>ssh::Channel</compoundname>
    <includes refid="libsshpp_8hpp" local="no">include/libssh/libsshpp.hpp</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classssh_1_1_channel_1afbdd63a566878ce30072e785ca7e7740" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Session</definition>
        <argsstring></argsstring>
        <name>Session</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="396" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="396" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classssh_1_1_channel_1a71d7d99293107c7e0bee53d4af0700ee" prot="private" static="no" mutable="no">
        <type><ref refid="classssh_1_1_session" kindref="compound">Session</ref> *</type>
        <definition>Session* ssh::Channel::session</definition>
        <argsstring></argsstring>
        <name>session</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="595" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="595" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classssh_1_1_channel_1aa806495a09335ebaaf972957952300c2" prot="private" static="no" mutable="no">
        <type>ssh_channel</type>
        <definition>ssh_channel ssh::Channel::channel</definition>
        <argsstring></argsstring>
        <name>channel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="596" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="596" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classssh_1_1_channel_1a342d8629aee4d4239ae791e1f7d38dd4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ssh::Channel::Channel</definition>
        <argsstring>(Session &amp;session)</argsstring>
        <name>Channel</name>
        <param>
          <type><ref refid="classssh_1_1_session" kindref="compound">Session</ref> &amp;</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="398" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="398" bodyend="401"/>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_channel_1a10dc8f6c498117bfb4be5f3cdafd0a02" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ssh::Channel::~Channel</definition>
        <argsstring>()</argsstring>
        <name>~Channel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="402" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="402" bodyend="405"/>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_channel_1a62000c16999e74525d296f0a1cb19c95" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classssh_1_1_channel" kindref="compound">Channel</ref> *</type>
        <definition>Channel* ssh::Channel::acceptX11</definition>
        <argsstring>(int timeout_ms)</argsstring>
        <name>acceptX11</name>
        <param>
          <type>int</type>
          <declname>timeout_ms</declname>
        </param>
        <briefdescription>
<para>accept an incoming X11 connection </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">timeout_ms</parametername>
</parameternamelist>
<parameterdescription>
<para>timeout for waiting, in ms </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>new <ref refid="classssh_1_1_channel" kindref="compound">Channel</ref> pointer on the X11 connection </para></simplesect>
<simplesect kind="return"><para>NULL in case of error </para></simplesect>
<simplesect kind="warning"><para>you have to delete this pointer after use </para></simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__channel_1ga548bd0f77a50b7c8180942544b375866" kindref="member">ssh_channel_accept_x11</ref> </para></simplesect>
<simplesect kind="see"><para>Channel::requestX11 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="415" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="415" bodyend="420"/>
        <references refid="group__libssh__channel_1ga548bd0f77a50b7c8180942544b375866" compoundref="channels_8c" startline="1980" endline="1982">ssh_channel_accept_x11</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_channel_1a196b0eab10bf168330f569ff3881562c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ssh::Channel::changePtySize</definition>
        <argsstring>(int cols, int rows)</argsstring>
        <name>changePtySize</name>
        <param>
          <type>int</type>
          <declname>cols</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rows</declname>
        </param>
        <briefdescription>
<para>change the size of a pseudoterminal </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cols</parametername>
</parameternamelist>
<parameterdescription>
<para>number of columns </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rows</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classssh_1_1_ssh_exception" kindref="compound">SshException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>on error </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__libssh__channel_1gaf5d55c90f3d98c583df23d21905c1127" kindref="member">ssh_channel_change_pty_size</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="427" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="427" bodyend="431"/>
        <references refid="group__libssh__channel_1gaf5d55c90f3d98c583df23d21905c1127" compoundref="channels_8c" startline="1707" endline="1742">ssh_channel_change_pty_size</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_channel_1ad14405b4e8c3a8e3d37a49ed793aadde" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ssh::Channel::close</definition>
        <argsstring>()</argsstring>
        <name>close</name>
        <briefdescription>
<para>closes a channel </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classssh_1_1_ssh_exception" kindref="compound">SshException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>on error </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__libssh__channel_1ga238f07e0455456a5bfd8a49ead917732" kindref="member">ssh_channel_close</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="437" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="437" bodyend="440"/>
        <references refid="group__libssh__channel_1ga238f07e0455456a5bfd8a49ead917732" compoundref="channels_8c" startline="1117" endline="1163">ssh_channel_close</references>
        <references refid="group__libssh__channel_1ga9eea019dd0bbaa8a817fff2c762d1a2d" compoundref="channels_8c" startline="2918" endline="2931">ssh_channel_get_exit_status</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_channel_1aa9bd03b50afa6f6c0126fe490e17112e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ssh::Channel::getExitStatus</definition>
        <argsstring>()</argsstring>
        <name>getExitStatus</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="442" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="442" bodyend="444"/>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_channel_1a1c60382b561193baebb1d68be1219500" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classssh_1_1_session" kindref="compound">Session</ref> &amp;</type>
        <definition>Session&amp; ssh::Channel::getSession</definition>
        <argsstring>()</argsstring>
        <name>getSession</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="445" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="445" bodyend="447"/>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_channel_1a38880d18d0fc357be0f4f8b8ef1c92ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ssh::Channel::isClosed</definition>
        <argsstring>()</argsstring>
        <name>isClosed</name>
        <briefdescription>
<para>returns true if channel is in closed state </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__libssh__channel_1gab2720b44cb7f1dfe2b38ffe07c2f45c7" kindref="member">ssh_channel_is_closed</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="451" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="451" bodyend="453"/>
        <references refid="group__libssh__channel_1gab2720b44cb7f1dfe2b38ffe07c2f45c7" compoundref="channels_8c" startline="1398" endline="1403">ssh_channel_is_closed</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_channel_1a3bb4131d82cc033d75f65a5137053532" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ssh::Channel::isEof</definition>
        <argsstring>()</argsstring>
        <name>isEof</name>
        <briefdescription>
<para>returns true if channel is in EOF state </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__libssh__channel_1gab535264029443d77214c0615a0788b0a" kindref="member">ssh_channel_is_eof</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="457" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="457" bodyend="459"/>
        <references refid="group__libssh__channel_1gab535264029443d77214c0615a0788b0a" compoundref="channels_8c" startline="1412" endline="1424">ssh_channel_is_eof</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_channel_1aa2794c09f819f3132b241aa6b72b0664" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ssh::Channel::isOpen</definition>
        <argsstring>()</argsstring>
        <name>isOpen</name>
        <briefdescription>
<para>returns true if channel is in open state </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__libssh__channel_1gaaafcda943c96ddb91e5c28c0bdee7045" kindref="member">ssh_channel_is_open</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="463" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="463" bodyend="465"/>
        <references refid="group__libssh__channel_1gaaafcda943c96ddb91e5c28c0bdee7045" compoundref="channels_8c" startline="1382" endline="1387">ssh_channel_is_open</references>
        <references refid="group__libssh__channel_1gae86b0704a1f2bdebb268b55567f7f47b" compoundref="channels_8c" startline="937" endline="983">ssh_channel_open_forward</references>
        <references refid="group__libssh__channel_1gaf051dd30d75bf6dc45d1a5088cf970bd" compoundref="channels_8c" startline="860" endline="876">ssh_channel_open_session</references>
        <references refid="group__libssh__channel_1ga157f7d1df5de07ec6c6976e2034ba6e2" compoundref="channels_8c" startline="2789" endline="2820">ssh_channel_poll</references>
        <references refid="group__libssh__channel_1gaaca5a3fbe9839c3ffb37b746afc35f4c" compoundref="channels_8c" startline="2737" endline="2773">ssh_channel_read_nonblocking</references>
        <references refid="group__libssh__channel_1ga3c1aa2ea4197626af7bf224b6a5aaff5" compoundref="channels_8c" startline="2627" endline="2714">ssh_channel_read_timeout</references>
        <references refid="group__libssh__channel_1ga7aede2f9af4c494ff9e41fc08a4572f1" compoundref="channels_8c" startline="2298" endline="2335">ssh_channel_request_env</references>
        <references refid="group__libssh__channel_1ga567d509183ade0a77190f390e2b5747d" compoundref="channels_8c" startline="2368" endline="2408">ssh_channel_request_exec</references>
        <references refid="group__libssh__channel_1ga37c1cec33fe5a2f184768aba52e3a0db" compoundref="channels_8c" startline="1688" endline="1690">ssh_channel_request_pty</references>
        <references refid="group__libssh__channel_1gabb175414352256e1602286e0ab50886c" compoundref="channels_8c" startline="1618" endline="1674">ssh_channel_request_pty_size</references>
        <references refid="group__libssh__channel_1gaa98315fca818b561970a6950683f4053" compoundref="channels_8c" startline="2443" endline="2477">ssh_channel_request_send_signal</references>
        <references refid="group__libssh__channel_1gaed4c5fb30c9df2b2548421ccf4e81bf1" compoundref="channels_8c" startline="1754" endline="1764">ssh_channel_request_shell</references>
        <references refid="group__libssh__channel_1ga06024b070f9b2a3d6964b79ae36695b7" compoundref="channels_8c" startline="1780" endline="1815">ssh_channel_request_subsystem</references>
        <references refid="group__libssh__channel_1gadfa34624c28164bd73453cd04aa64c1f" compoundref="channels_8c" startline="1864" endline="1913">ssh_channel_request_x11</references>
        <references refid="group__libssh__channel_1ga072f82fdf3e50514f747653af2c99004" compoundref="channels_8c" startline="1065" endline="1102">ssh_channel_send_eof</references>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_channel_1ac5408b11bfb79ec58456660b8c8d98d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ssh::Channel::openForward</definition>
        <argsstring>(const char *remotehost, int remoteport, const char *sourcehost=NULL, int localport=0)</argsstring>
        <name>openForward</name>
        <param>
          <type>const char *</type>
          <declname>remotehost</declname>
        </param>
        <param>
          <type>int</type>
          <declname>remoteport</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>sourcehost</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>int</type>
          <declname>localport</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="466" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="466" bodyend="472"/>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_channel_1ad6f328c91da72bc35f21cec8f0ec367f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ssh::Channel::openSession</definition>
        <argsstring>()</argsstring>
        <name>openSession</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="474" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="474" bodyend="478"/>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_channel_1a661394ceb03e65bb7c02e040d23d6fc8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ssh::Channel::poll</definition>
        <argsstring>(bool is_stderr=false)</argsstring>
        <name>poll</name>
        <param>
          <type>bool</type>
          <declname>is_stderr</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="479" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="479" bodyend="483"/>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_channel_1ab232d8f34a14af8f3a891bc964a103e7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ssh::Channel::read</definition>
        <argsstring>(void *dest, size_t count, bool is_stderr)</argsstring>
        <name>read</name>
        <param>
          <type>void *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_stderr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="484" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="484" bodyend="492"/>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_channel_1a5a03a0f25f2e7044bcc97df338f57c62" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ssh::Channel::read</definition>
        <argsstring>(void *dest, size_t count, int timeout)</argsstring>
        <name>read</name>
        <param>
          <type>void *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>int</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="493" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="493" bodyend="501"/>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_channel_1a046e390e41453a66cd442a687efd6695" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ssh::Channel::read</definition>
        <argsstring>(void *dest, size_t count, bool is_stderr=false, int timeout=-1)</argsstring>
        <name>read</name>
        <param>
          <type>void *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_stderr</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>int</type>
          <declname>timeout</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="502" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="502" bodyend="510"/>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_channel_1aef42ee6d77142e1a8369e06173ea550d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ssh::Channel::readNonblocking</definition>
        <argsstring>(void *dest, size_t count, bool is_stderr=false)</argsstring>
        <name>readNonblocking</name>
        <param>
          <type>void *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_stderr</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="511" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="511" bodyend="519"/>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_channel_1a26a288266c862363964d3c41ac5b77f5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ssh::Channel::requestEnv</definition>
        <argsstring>(const char *name, const char *value)</argsstring>
        <name>requestEnv</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="520" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="520" bodyend="524"/>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_channel_1a51a20e82f430513a52cfba3f329c3abe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ssh::Channel::requestExec</definition>
        <argsstring>(const char *cmd)</argsstring>
        <name>requestExec</name>
        <param>
          <type>const char *</type>
          <declname>cmd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="526" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="526" bodyend="530"/>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_channel_1ab8dc3ab11eba4ad6c429337823d89bb8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ssh::Channel::requestPty</definition>
        <argsstring>(const char *term=NULL, int cols=0, int rows=0)</argsstring>
        <name>requestPty</name>
        <param>
          <type>const char *</type>
          <declname>term</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>int</type>
          <declname>cols</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>rows</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="531" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="531" bodyend="539"/>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_channel_1ac551d84c253489d67fc7df3d415b1238" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ssh::Channel::requestShell</definition>
        <argsstring>()</argsstring>
        <name>requestShell</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="541" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="541" bodyend="545"/>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_channel_1a3f21cf3cc8111380134db317b356f7dc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ssh::Channel::requestSendSignal</definition>
        <argsstring>(const char *signum)</argsstring>
        <name>requestSendSignal</name>
        <param>
          <type>const char *</type>
          <declname>signum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="546" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="546" bodyend="550"/>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_channel_1a4b11b239b8e9f0302c5ab2147ad65757" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ssh::Channel::requestSubsystem</definition>
        <argsstring>(const char *subsystem)</argsstring>
        <name>requestSubsystem</name>
        <param>
          <type>const char *</type>
          <declname>subsystem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="551" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="551" bodyend="555"/>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_channel_1a7421cfbdc01d05f999a55e05af9a593c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ssh::Channel::requestX11</definition>
        <argsstring>(bool single_connection, const char *protocol, const char *cookie, int screen_number)</argsstring>
        <name>requestX11</name>
        <param>
          <type>bool</type>
          <declname>single_connection</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>protocol</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>cookie</declname>
        </param>
        <param>
          <type>int</type>
          <declname>screen_number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="556" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="556" bodyend="562"/>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_channel_1a4767519dc2766ca61a8a8567a0588d80" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ssh::Channel::sendEof</definition>
        <argsstring>()</argsstring>
        <name>sendEof</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="563" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="563" bodyend="567"/>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_channel_1a06cf7ffd971eff87783a169444fa09a2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ssh::Channel::write</definition>
        <argsstring>(const void *data, size_t len, bool is_stderr=false)</argsstring>
        <name>write</name>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_stderr</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Writes on a channel. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>data to write. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes to write. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is_stderr</parametername>
</parameternamelist>
<parameterdescription>
<para>write should be done on the stderr channel (server only) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of bytes written </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classssh_1_1_ssh_exception" kindref="compound">SshException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>in case of error </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para>channel_write </para></simplesect>
<simplesect kind="see"><para>channel_write_stderr </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="577" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="577" bodyend="586"/>
        <references refid="group__libssh__channel_1ga5d658df773ba854b35ff9f905341e2fb" compoundref="channels_8c" startline="1369" endline="1371">ssh_channel_write</references>
        <references refid="group__libssh__server_1ga76c7578b4e418f8105ba89471293b4c1" compoundref="channels_8c" startline="3176" endline="3178">ssh_channel_write_stderr</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classssh_1_1_channel_1aac8846105c4978af1313feb90f30d95e" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ssh_session</type>
        <definition>ssh_session ssh::Channel::getCSession</definition>
        <argsstring>()</argsstring>
        <name>getCSession</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="588" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="588" bodyend="590"/>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_channel_1af51f810b612d5ca654698735a252997f" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ssh::Channel::Channel</definition>
        <argsstring>(Session &amp;session, ssh_channel c_channel)</argsstring>
        <name>Channel</name>
        <param>
          <type><ref refid="classssh_1_1_session" kindref="compound">Session</ref> &amp;</type>
          <declname>session</declname>
        </param>
        <param>
          <type>ssh_channel</type>
          <declname>c_channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="591" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="591" bodyend="594"/>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_channel_1a43421cc29c20fbdc3f39a50381922343" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ssh::Channel::Channel</definition>
        <argsstring>(const Channel &amp;)</argsstring>
        <name>Channel</name>
        <param>
          <type>const <ref refid="classssh_1_1_channel" kindref="compound">Channel</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="598" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classssh_1_1_channel_1ab6a037db0c2be962bcccff1ebde62b9f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classssh_1_1_channel" kindref="compound">Channel</ref> &amp;</type>
        <definition>Channel&amp; ssh::Channel::operator=</definition>
        <argsstring>(const Channel &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classssh_1_1_channel" kindref="compound">Channel</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/libsshpp.hpp" line="599" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>the <ref refid="classssh_1_1_channel" kindref="compound">ssh::Channel</ref> class describes the state of an SSH channel. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="see"><para>ssh_channel </para></simplesect>
</para>    </detaileddescription>
    <location file="include/libssh/libsshpp.hpp" line="395" column="1" bodyfile="include/libssh/libsshpp.hpp" bodystart="395" bodyend="600"/>
    <listofallmembers>
      <member refid="classssh_1_1_channel_1a62000c16999e74525d296f0a1cb19c95" prot="public" virt="non-virtual"><scope>ssh::Channel</scope><name>acceptX11</name></member>
      <member refid="classssh_1_1_channel_1a196b0eab10bf168330f569ff3881562c" prot="public" virt="non-virtual"><scope>ssh::Channel</scope><name>changePtySize</name></member>
      <member refid="classssh_1_1_channel_1a342d8629aee4d4239ae791e1f7d38dd4" prot="public" virt="non-virtual"><scope>ssh::Channel</scope><name>Channel</name></member>
      <member refid="classssh_1_1_channel_1af51f810b612d5ca654698735a252997f" prot="private" virt="non-virtual"><scope>ssh::Channel</scope><name>Channel</name></member>
      <member refid="classssh_1_1_channel_1a43421cc29c20fbdc3f39a50381922343" prot="private" virt="non-virtual"><scope>ssh::Channel</scope><name>Channel</name></member>
      <member refid="classssh_1_1_channel_1aa806495a09335ebaaf972957952300c2" prot="private" virt="non-virtual"><scope>ssh::Channel</scope><name>channel</name></member>
      <member refid="classssh_1_1_channel_1ad14405b4e8c3a8e3d37a49ed793aadde" prot="public" virt="non-virtual"><scope>ssh::Channel</scope><name>close</name></member>
      <member refid="classssh_1_1_channel_1aac8846105c4978af1313feb90f30d95e" prot="private" virt="non-virtual"><scope>ssh::Channel</scope><name>getCSession</name></member>
      <member refid="classssh_1_1_channel_1aa9bd03b50afa6f6c0126fe490e17112e" prot="public" virt="non-virtual"><scope>ssh::Channel</scope><name>getExitStatus</name></member>
      <member refid="classssh_1_1_channel_1a1c60382b561193baebb1d68be1219500" prot="public" virt="non-virtual"><scope>ssh::Channel</scope><name>getSession</name></member>
      <member refid="classssh_1_1_channel_1a38880d18d0fc357be0f4f8b8ef1c92ef" prot="public" virt="non-virtual"><scope>ssh::Channel</scope><name>isClosed</name></member>
      <member refid="classssh_1_1_channel_1a3bb4131d82cc033d75f65a5137053532" prot="public" virt="non-virtual"><scope>ssh::Channel</scope><name>isEof</name></member>
      <member refid="classssh_1_1_channel_1aa2794c09f819f3132b241aa6b72b0664" prot="public" virt="non-virtual"><scope>ssh::Channel</scope><name>isOpen</name></member>
      <member refid="classssh_1_1_channel_1ac5408b11bfb79ec58456660b8c8d98d8" prot="public" virt="non-virtual"><scope>ssh::Channel</scope><name>openForward</name></member>
      <member refid="classssh_1_1_channel_1ad6f328c91da72bc35f21cec8f0ec367f" prot="public" virt="non-virtual"><scope>ssh::Channel</scope><name>openSession</name></member>
      <member refid="classssh_1_1_channel_1ab6a037db0c2be962bcccff1ebde62b9f" prot="private" virt="non-virtual"><scope>ssh::Channel</scope><name>operator=</name></member>
      <member refid="classssh_1_1_channel_1a661394ceb03e65bb7c02e040d23d6fc8" prot="public" virt="non-virtual"><scope>ssh::Channel</scope><name>poll</name></member>
      <member refid="classssh_1_1_channel_1ab232d8f34a14af8f3a891bc964a103e7" prot="public" virt="non-virtual"><scope>ssh::Channel</scope><name>read</name></member>
      <member refid="classssh_1_1_channel_1a5a03a0f25f2e7044bcc97df338f57c62" prot="public" virt="non-virtual"><scope>ssh::Channel</scope><name>read</name></member>
      <member refid="classssh_1_1_channel_1a046e390e41453a66cd442a687efd6695" prot="public" virt="non-virtual"><scope>ssh::Channel</scope><name>read</name></member>
      <member refid="classssh_1_1_channel_1aef42ee6d77142e1a8369e06173ea550d" prot="public" virt="non-virtual"><scope>ssh::Channel</scope><name>readNonblocking</name></member>
      <member refid="classssh_1_1_channel_1a26a288266c862363964d3c41ac5b77f5" prot="public" virt="non-virtual"><scope>ssh::Channel</scope><name>requestEnv</name></member>
      <member refid="classssh_1_1_channel_1a51a20e82f430513a52cfba3f329c3abe" prot="public" virt="non-virtual"><scope>ssh::Channel</scope><name>requestExec</name></member>
      <member refid="classssh_1_1_channel_1ab8dc3ab11eba4ad6c429337823d89bb8" prot="public" virt="non-virtual"><scope>ssh::Channel</scope><name>requestPty</name></member>
      <member refid="classssh_1_1_channel_1a3f21cf3cc8111380134db317b356f7dc" prot="public" virt="non-virtual"><scope>ssh::Channel</scope><name>requestSendSignal</name></member>
      <member refid="classssh_1_1_channel_1ac551d84c253489d67fc7df3d415b1238" prot="public" virt="non-virtual"><scope>ssh::Channel</scope><name>requestShell</name></member>
      <member refid="classssh_1_1_channel_1a4b11b239b8e9f0302c5ab2147ad65757" prot="public" virt="non-virtual"><scope>ssh::Channel</scope><name>requestSubsystem</name></member>
      <member refid="classssh_1_1_channel_1a7421cfbdc01d05f999a55e05af9a593c" prot="public" virt="non-virtual"><scope>ssh::Channel</scope><name>requestX11</name></member>
      <member refid="classssh_1_1_channel_1a4767519dc2766ca61a8a8567a0588d80" prot="public" virt="non-virtual"><scope>ssh::Channel</scope><name>sendEof</name></member>
      <member refid="classssh_1_1_channel_1afbdd63a566878ce30072e785ca7e7740" prot="private" virt="non-virtual"><scope>ssh::Channel</scope><name>Session</name></member>
      <member refid="classssh_1_1_channel_1a71d7d99293107c7e0bee53d4af0700ee" prot="private" virt="non-virtual"><scope>ssh::Channel</scope><name>session</name></member>
      <member refid="classssh_1_1_channel_1a06cf7ffd971eff87783a169444fa09a2" prot="public" virt="non-virtual"><scope>ssh::Channel</scope><name>write</name></member>
      <member refid="classssh_1_1_channel_1a10dc8f6c498117bfb4be5f3cdafd0a02" prot="public" virt="non-virtual"><scope>ssh::Channel</scope><name>~Channel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
