<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="server_8c" kind="file" language="C++">
    <compoundname>server.c</compoundname>
    <includes local="yes">config.h</includes>
    <includes local="no">errno.h</includes>
    <includes local="no">fcntl.h</includes>
    <includes local="no">stdio.h</includes>
    <includes refid="string_8h" local="no">string.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">netinet/in.h</includes>
    <includes refid="priv_8h" local="yes">libssh/priv.h</includes>
    <includes refid="libssh_8h" local="yes">libssh/libssh.h</includes>
    <includes refid="server_8h" local="yes">libssh/server.h</includes>
    <includes refid="ssh2_8h" local="yes">libssh/ssh2.h</includes>
    <includes refid="buffer_8h" local="yes">libssh/buffer.h</includes>
    <includes refid="packet_8h" local="yes">libssh/packet.h</includes>
    <includes refid="socket_8h" local="yes">libssh/socket.h</includes>
    <includes refid="session_8h" local="yes">libssh/session.h</includes>
    <includes refid="kex_8h" local="yes">libssh/kex.h</includes>
    <includes refid="misc_8h" local="yes">libssh/misc.h</includes>
    <includes refid="pki_8h" local="yes">libssh/pki.h</includes>
    <includes refid="dh_8h" local="yes">libssh/dh.h</includes>
    <includes refid="messages_8h" local="yes">libssh/messages.h</includes>
    <includes refid="options_8h" local="yes">libssh/options.h</includes>
    <includes refid="curve25519_8h" local="yes">libssh/curve25519.h</includes>
    <incdepgraph>
      <node id="2093">
        <label>libssh/buffer.h</label>
        <link refid="buffer_8h_source"/>
        <childnode refid="2094" relation="include">
        </childnode>
        <childnode refid="2082" relation="include">
        </childnode>
      </node>
      <node id="2094">
        <label>stdarg.h</label>
      </node>
      <node id="2110">
        <label>libssh/curve25519.h</label>
        <link refid="curve25519_8h_source"/>
        <childnode refid="2075" relation="include">
        </childnode>
        <childnode refid="2082" relation="include">
        </childnode>
      </node>
      <node id="2085">
        <label>sys/select.h</label>
      </node>
      <node id="2090">
        <label>netinet/in.h</label>
      </node>
      <node id="2080">
        <label>libssh/priv.h</label>
        <link refid="priv_8h_source"/>
        <childnode refid="2075" relation="include">
        </childnode>
        <childnode refid="2081" relation="include">
        </childnode>
        <childnode refid="2082" relation="include">
        </childnode>
        <childnode refid="2088" relation="include">
        </childnode>
      </node>
      <node id="2106">
        <label>libssh/misc.h</label>
        <link refid="misc_8h_source"/>
      </node>
      <node id="2082">
        <label>libssh/libssh.h</label>
        <link refid="libssh_8h_source"/>
        <childnode refid="2081" relation="include">
        </childnode>
        <childnode refid="2083" relation="include">
        </childnode>
        <childnode refid="2084" relation="include">
        </childnode>
        <childnode refid="2085" relation="include">
        </childnode>
        <childnode refid="2086" relation="include">
        </childnode>
        <childnode refid="2087" relation="include">
        </childnode>
      </node>
      <node id="2095">
        <label>libssh/packet.h</label>
        <link refid="packet_8h_source"/>
        <childnode refid="2096" relation="include">
        </childnode>
      </node>
      <node id="2074">
        <label>src/server.c</label>
        <link refid="server_8c"/>
        <childnode refid="2075" relation="include">
        </childnode>
        <childnode refid="2076" relation="include">
        </childnode>
        <childnode refid="2077" relation="include">
        </childnode>
        <childnode refid="2078" relation="include">
        </childnode>
        <childnode refid="2079" relation="include">
        </childnode>
        <childnode refid="2089" relation="include">
        </childnode>
        <childnode refid="2090" relation="include">
        </childnode>
        <childnode refid="2080" relation="include">
        </childnode>
        <childnode refid="2082" relation="include">
        </childnode>
        <childnode refid="2091" relation="include">
        </childnode>
        <childnode refid="2092" relation="include">
        </childnode>
        <childnode refid="2093" relation="include">
        </childnode>
        <childnode refid="2095" relation="include">
        </childnode>
        <childnode refid="2099" relation="include">
        </childnode>
        <childnode refid="2100" relation="include">
        </childnode>
        <childnode refid="2101" relation="include">
        </childnode>
        <childnode refid="2106" relation="include">
        </childnode>
        <childnode refid="2107" relation="include">
        </childnode>
        <childnode refid="2112" relation="include">
        </childnode>
        <childnode refid="2113" relation="include">
        </childnode>
        <childnode refid="2114" relation="include">
        </childnode>
        <childnode refid="2110" relation="include">
        </childnode>
      </node>
      <node id="2089">
        <label>stdlib.h</label>
      </node>
      <node id="2076">
        <label>errno.h</label>
      </node>
      <node id="2079">
        <label>string.h</label>
        <link refid="string_8h_source"/>
        <childnode refid="2080" relation="include">
        </childnode>
      </node>
      <node id="2077">
        <label>fcntl.h</label>
      </node>
      <node id="2107">
        <label>libssh/pki.h</label>
        <link refid="pki_8h_source"/>
        <childnode refid="2080" relation="include">
        </childnode>
        <childnode refid="2108" relation="include">
        </childnode>
        <childnode refid="2111" relation="include">
        </childnode>
      </node>
      <node id="2087">
        <label>libssh/legacy.h</label>
        <link refid="legacy_8h_source"/>
      </node>
      <node id="2108">
        <label>libssh/crypto.h</label>
        <link refid="crypto_8h_source"/>
        <childnode refid="2075" relation="include">
        </childnode>
        <childnode refid="2096" relation="include">
        </childnode>
        <childnode refid="2109" relation="include">
        </childnode>
        <childnode refid="2101" relation="include">
        </childnode>
        <childnode refid="2110" relation="include">
        </childnode>
      </node>
      <node id="2099">
        <label>libssh/socket.h</label>
        <link refid="socket_8h_source"/>
        <childnode refid="2088" relation="include">
        </childnode>
      </node>
      <node id="2086">
        <label>netdb.h</label>
      </node>
      <node id="2092">
        <label>libssh/ssh2.h</label>
        <link refid="ssh2_8h_source"/>
      </node>
      <node id="2088">
        <label>libssh/callbacks.h</label>
        <link refid="callbacks_8h_source"/>
        <childnode refid="2082" relation="include">
        </childnode>
        <childnode refid="2079" relation="include">
        </childnode>
      </node>
      <node id="2111">
        <label>libssh/ed25519.h</label>
        <link refid="ed25519_8h_source"/>
        <childnode refid="2080" relation="include">
        </childnode>
      </node>
      <node id="2084">
        <label>sys/types.h</label>
      </node>
      <node id="2105">
        <label>libssh/poll.h</label>
        <link refid="poll_8h_source"/>
        <childnode refid="2075" relation="include">
        </childnode>
      </node>
      <node id="2114">
        <label>libssh/options.h</label>
        <link refid="options_8h_source"/>
      </node>
      <node id="2081">
        <label>unistd.h</label>
      </node>
      <node id="2109">
        <label>libssh/ecdh.h</label>
        <link refid="ecdh_8h_source"/>
        <childnode refid="2075" relation="include">
        </childnode>
      </node>
      <node id="2104">
        <label>libssh/channels.h</label>
        <link refid="channels_8h_source"/>
        <childnode refid="2080" relation="include">
        </childnode>
      </node>
      <node id="2112">
        <label>libssh/dh.h</label>
        <link refid="dh_8h_source"/>
        <childnode refid="2075" relation="include">
        </childnode>
        <childnode refid="2108" relation="include">
        </childnode>
      </node>
      <node id="2103">
        <label>libssh/auth.h</label>
        <link refid="auth_8h_source"/>
        <childnode refid="2075" relation="include">
        </childnode>
        <childnode refid="2088" relation="include">
        </childnode>
      </node>
      <node id="2096">
        <label>libssh/wrapper.h</label>
        <link refid="wrapper_8h_source"/>
        <childnode refid="2075" relation="include">
        </childnode>
        <childnode refid="2082" relation="include">
        </childnode>
        <childnode refid="2097" relation="include">
        </childnode>
        <childnode refid="2098" relation="include">
        </childnode>
      </node>
      <node id="2097">
        <label>libssh/libcrypto.h</label>
        <link refid="libcrypto_8h_source"/>
        <childnode refid="2075" relation="include">
        </childnode>
      </node>
      <node id="2101">
        <label>libssh/kex.h</label>
        <link refid="kex_8h_source"/>
        <childnode refid="2080" relation="include">
        </childnode>
        <childnode refid="2088" relation="include">
        </childnode>
      </node>
      <node id="2098">
        <label>libssh/libgcrypt.h</label>
        <link refid="libgcrypt_8h_source"/>
        <childnode refid="2075" relation="include">
        </childnode>
      </node>
      <node id="2102">
        <label>libssh/pcap.h</label>
        <link refid="pcap_8h_source"/>
        <childnode refid="2075" relation="include">
        </childnode>
        <childnode refid="2082" relation="include">
        </childnode>
      </node>
      <node id="2075">
        <label>config.h</label>
      </node>
      <node id="2091">
        <label>libssh/server.h</label>
        <link refid="server_8h_source"/>
        <childnode refid="2082" relation="include">
        </childnode>
      </node>
      <node id="2078">
        <label>stdio.h</label>
      </node>
      <node id="2100">
        <label>libssh/session.h</label>
        <link refid="session_8h_source"/>
        <childnode refid="2080" relation="include">
        </childnode>
        <childnode refid="2101" relation="include">
        </childnode>
        <childnode refid="2095" relation="include">
        </childnode>
        <childnode refid="2102" relation="include">
        </childnode>
        <childnode refid="2103" relation="include">
        </childnode>
        <childnode refid="2104" relation="include">
        </childnode>
        <childnode refid="2105" relation="include">
        </childnode>
      </node>
      <node id="2083">
        <label>inttypes.h</label>
      </node>
      <node id="2113">
        <label>libssh/messages.h</label>
        <link refid="messages_8h_source"/>
        <childnode refid="2075" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="server_8c_1ae999fe5d95dd5d737af376462d2c59c5" prot="public" static="no">
        <name>set_status</name>
        <param><defname>session</defname></param>
        <param><defname>status</defname></param>
        <initializer>do {\
        if (session-&gt;common.callbacks &amp;&amp; session-&gt;common.callbacks-&gt;connect_status_function) \
            session-&gt;common.callbacks-&gt;connect_status_function(session-&gt;common.callbacks-&gt;userdata, status); \
    } while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server.c" line="63" column="9" bodyfile="src/server.c" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__libssh__server_1gaa348e427554a13245a24007d4590fe2f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int dh_handshake_server</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>dh_handshake_server</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server.c" line="68" column="1" bodyfile="src/server.c" bodystart="265" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1ga2792d656ee8d3c5589ff2db4e1b5cf80" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int server_set_kex</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>server_set_kex</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<internal><para>This functions sets the Key Exchange protocols to be accepted by the server. They depend on -What the user asked (via options) -What is available (keys) It should then accept the intersection of what the user asked and what is available, and return an error if nothing matches </para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server.c" line="86" column="1" bodyfile="src/server.c" bodystart="86" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gae2f38dc415fde063d526f8e925575d6b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int ssh_server_kexdh_init</definition>
        <argsstring>(ssh_session session, ssh_buffer packet)</argsstring>
        <name>ssh_server_kexdh_init</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <param>
          <type>ssh_buffer</type>
          <declname>packet</declname>
        </param>
        <briefdescription>
<para>parse an incoming SSH_MSG_KEXDH_INIT packet and complete key exchange </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server.c" line="156" column="1" bodyfile="src/server.c" bodystart="156" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1ga872620a8d0aa300fe01626f1aea153cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SSH_PACKET_CALLBACK</definition>
        <argsstring>(ssh_packet_kexdh_init)</argsstring>
        <name>SSH_PACKET_CALLBACK</name>
        <param>
          <type>ssh_packet_kexdh_init</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server.c" line="174" column="1" bodyfile="src/server.c" bodystart="174" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gae33b896210f4fba07009d0ff3772dcd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_get_key_params</definition>
        <argsstring>(ssh_session session, ssh_key *privkey)</argsstring>
        <name>ssh_get_key_params</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <param>
          <type>ssh_key *</type>
          <declname>privkey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server.c" line="222" column="1" bodyfile="src/server.c" bodystart="222" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1ga6b0057a0346a87ddd9b57bfbbc580d4d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ssh_server_connection_callback</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_server_connection_callback</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>A function to be called each time a step has been done in the connection. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server.c" line="348" column="1" bodyfile="src/server.c" bodystart="348" bodyend="481"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1ga4c4c9ace93a9791515090ebc197dd736" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int callback_receive_banner</definition>
        <argsstring>(const void *data, size_t len, void *user)</argsstring>
        <name>callback_receive_banner</name>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user</declname>
        </param>
        <briefdescription>
<para>Gets the banner from socket and saves it in session. Updates the session state. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the beginning of header </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the banner </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user</parametername>
</parameternamelist>
<parameterdescription>
<para>is a pointer to session </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of bytes processed, or zero if the banner is not complete. </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server.c" line="494" column="1" bodyfile="src/server.c" bodystart="494" bodyend="539"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gaa18bae911e9533e48b33f63ac0c24cb6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int ssh_server_kex_termination</definition>
        <argsstring>(void *s)</argsstring>
        <name>ssh_server_kex_termination</name>
        <param>
          <type>void *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server.c" line="542" column="1" bodyfile="src/server.c" bodystart="542" bodyend="550"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gabbfb96c938e33a8dddebaff29f25e0c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API void</type>
        <definition>void ssh_set_auth_methods</definition>
        <argsstring>(ssh_session session, int auth_methods)</argsstring>
        <name>ssh_set_auth_methods</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <param>
          <type>int</type>
          <declname>auth_methods</declname>
        </param>
        <briefdescription>
<para>Set the acceptable authentication methods to be sent to client. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>the SSH server session </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">auth_methods</parametername>
</parameternamelist>
<parameterdescription>
<para>Bitfield of authentication methods to be accepted, e.g. SSH_AUTH_METHOD_PUBLICKEY </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="196" column="1" bodyfile="src/server.c" bodystart="558" bodyend="561"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gab60c37350653eb3b65a99ac089c55830" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API int</type>
        <definition>int ssh_handle_key_exchange</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_handle_key_exchange</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>Handles the key exchange and set up encryption. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>A connected ssh session </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__libssh__server_1ga6609243446f1650243101e0a779dc822" kindref="member">ssh_bind_accept</ref> </para></simplesect>
<simplesect kind="return"><para>SSH_OK if the key exchange was successful </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="187" column="1" bodyfile="src/server.c" bodystart="564" bodyend="599"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gaa8a38b0ea0e5ee2bce17eab77dfc850c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_auth_reply_default</definition>
        <argsstring>(ssh_session session, int partial)</argsstring>
        <name>ssh_auth_reply_default</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <param>
          <type>int</type>
          <declname>partial</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<internal><para>replies to an SSH_AUTH packet with a default (denied) response. </para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server.c" line="606" column="1" bodyfile="src/server.c" bodystart="606" bodyend="656"/>
        <references refid="group__libssh__log_1gga06fc87d81c62e9abb8790b6e5713c55ba6445dfe21592d69d9741d319538b6673" compoundref="libssh_8h" startline="289">SSH_LOG_PACKET</references>
        <referencedby refid="group__libssh__server_1ga6e78c8f369333289d245931deed92573" compoundref="server_8c" startline="787" endline="811">ssh_message_reply_default</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gaf7984c469e61e9d5f05c80d967970a1c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int ssh_message_channel_request_open_reply_default</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_channel_request_open_reply_default</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server.c" line="658" column="1" bodyfile="src/server.c" bodystart="658" bodyend="677"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1ga79d82cfe686f9389bc74b95533f976d7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int ssh_message_channel_request_reply_default</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_channel_request_reply_default</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server.c" line="679" column="1" bodyfile="src/server.c" bodystart="679" bodyend="704"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1ga6e63796d916bcc9a259e9863b2424cce" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int ssh_message_service_request_reply_default</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_service_request_reply_default</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server.c" line="706" column="1" bodyfile="src/server.c" bodystart="706" bodyend="709"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gad0bd348b84300149f017f5abbaff38f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API int</type>
        <definition>int ssh_message_service_reply_success</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_service_reply_success</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="268" column="1" bodyfile="src/server.c" bodystart="711" bodyend="733"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1ga9c09466e299aff371b2fba996054a6a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API int</type>
        <definition>int ssh_message_global_request_reply_success</definition>
        <argsstring>(ssh_message msg, uint16_t bound_port)</argsstring>
        <name>ssh_message_global_request_reply_success</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>bound_port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="271" column="1" bodyfile="src/server.c" bodystart="735" bodyend="767"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1ga518a6b12d13cb2f4d74e261e43fc0129" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int ssh_message_global_request_reply_default</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_global_request_reply_default</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server.c" line="769" column="1" bodyfile="src/server.c" bodystart="769" bodyend="785"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1ga6e78c8f369333289d245931deed92573" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API int</type>
        <definition>int ssh_message_reply_default</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_reply_default</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Reply with a standard reject message. </para>        </briefdescription>
        <detaileddescription>
<para>Use this function if you don&apos;t know what to respond or if you want to reject a request.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to use for the reply.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, -1 on error.</para></simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__messages_1ga8e536b6f1c824b7ca43d0e8f954b3bd4" kindref="member">ssh_message_get()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="214" column="1" bodyfile="src/server.c" bodystart="787" bodyend="811"/>
        <references refid="group__libssh__server_1gaa8a38b0ea0e5ee2bce17eab77dfc850c" compoundref="server_8c" startline="606" endline="656">ssh_auth_reply_default</references>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1ga9f9dedae252c1b786b1213c84ac90baa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API const char *</type>
        <definition>const char * ssh_message_service_service</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_service_service</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="269" column="1" bodyfile="src/server.c" bodystart="813" bodyend="818"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gad05353966b70d7f04a3b7aed07a817cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API const char *</type>
        <definition>const char * ssh_message_auth_user</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_auth_user</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Get the name of the authenticated user. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to get the username from.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The username or NULL if an error occured.</para></simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__messages_1ga8e536b6f1c824b7ca43d0e8f954b3bd4" kindref="member">ssh_message_get()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__messages_1ga20fc6e536f170b98c7d62ce3675d8cdb" kindref="member">ssh_message_type()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="226" column="1" bodyfile="src/server.c" bodystart="820" bodyend="826"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gab434b45d3f542ab24735bba6432de85d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API const char *</type>
        <definition>const char * ssh_message_auth_password</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_auth_password</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Get the password of the authenticated user. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to get the password from.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The username or NULL if an error occured.</para></simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__messages_1ga8e536b6f1c824b7ca43d0e8f954b3bd4" kindref="member">ssh_message_get()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__messages_1ga20fc6e536f170b98c7d62ce3675d8cdb" kindref="member">ssh_message_type()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="238" column="1" bodyfile="src/server.c" bodystart="828" bodyend="834"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1ga97e909b1d89b4c4747eb5b80ac9fd215" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API ssh_key</type>
        <definition>ssh_key ssh_message_auth_pubkey</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_auth_pubkey</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Get the publickey of the authenticated user. </para>        </briefdescription>
        <detaileddescription>
<para>If you need the key for later user you should duplicate it.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to get the public key from.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The public key or NULL.</para></simplesect>
<simplesect kind="see"><para>ssh_key_dup() </para></simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__pki_1ga4dc33945294c2bbd671365a9d3db8e2f" kindref="member">ssh_key_cmp()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__messages_1ga8e536b6f1c824b7ca43d0e8f954b3bd4" kindref="member">ssh_message_get()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__messages_1ga20fc6e536f170b98c7d62ce3675d8cdb" kindref="member">ssh_message_type()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="254" column="1" bodyfile="src/server.c" bodystart="836" bodyend="842"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gaa5e80a5891527b2207dcb53efece1203" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssh_public_key</type>
        <definition>ssh_public_key ssh_message_auth_publickey</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_auth_publickey</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server.c" line="845" column="1" bodyfile="src/server.c" bodystart="845" bodyend="851"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gafcb928250ef8169f4823dadab217b4fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API enum ssh_publickey_state_e</type>
        <definition>enum ssh_publickey_state_e ssh_message_auth_publickey_state</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_auth_publickey_state</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="257" column="1" bodyfile="src/server.c" bodystart="853" bodyend="858"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1ga5132c82c49de985e9e10f51f393e52a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API int</type>
        <definition>int ssh_message_auth_kbdint_is_response</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_auth_kbdint_is_response</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="256" column="1" bodyfile="src/server.c" bodystart="860" bodyend="866"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gab993157d98e5b4b3399d216c9243effc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API int</type>
        <definition>int ssh_message_auth_set_methods</definition>
        <argsstring>(ssh_message msg, int methods)</argsstring>
        <name>ssh_message_auth_set_methods</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>methods</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="262" column="1" bodyfile="src/server.c" bodystart="868" bodyend="876"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gaacbc31ce3b39ac93061164feec822c77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API int</type>
        <definition>int ssh_message_auth_interactive_request</definition>
        <argsstring>(ssh_message msg, const char *name, const char *instruction, unsigned int num_prompts, const char **prompts, char *echo)</argsstring>
        <name>ssh_message_auth_interactive_request</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>instruction</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>num_prompts</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>prompts</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>echo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="264" column="1" bodyfile="src/server.c" bodystart="878" bodyend="981"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gace0de62d8bdae327069fd81fdb1861d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_auth_reply_success</definition>
        <argsstring>(ssh_session session, int partial)</argsstring>
        <name>ssh_auth_reply_success</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <param>
          <type>int</type>
          <declname>partial</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server.c" line="983" column="1" bodyfile="src/server.c" bodystart="983" bodyend="1011"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gac338ce3b49e097a6b9b75b92666cac96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API int</type>
        <definition>int ssh_message_auth_reply_success</definition>
        <argsstring>(ssh_message msg, int partial)</argsstring>
        <name>ssh_message_auth_reply_success</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>partial</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="258" column="1" bodyfile="src/server.c" bodystart="1013" bodyend="1017"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1ga2ce88786e073b36991fc96c8f6b58c09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API int</type>
        <definition>int ssh_message_auth_reply_pk_ok</definition>
        <argsstring>(ssh_message msg, ssh_string algo, ssh_string pubkey)</argsstring>
        <name>ssh_message_auth_reply_pk_ok</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>ssh_string</type>
          <declname>algo</declname>
        </param>
        <param>
          <type>ssh_string</type>
          <declname>pubkey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="259" column="1" bodyfile="src/server.c" bodystart="1020" bodyend="1038"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1ga98321ead09cda145a08603d481a62a9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API int</type>
        <definition>int ssh_message_auth_reply_pk_ok_simple</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_auth_reply_pk_ok_simple</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="260" column="1" bodyfile="src/server.c" bodystart="1040" bodyend="1062"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1ga0df64acc64787532205f6e85e5fbc4fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API const char *</type>
        <definition>const char * ssh_message_channel_request_open_originator</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_channel_request_open_originator</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="279" column="1" bodyfile="src/server.c" bodystart="1065" bodyend="1067"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gaf24d0f28aca42d1b26e5a08fe4abc9fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API int</type>
        <definition>int ssh_message_channel_request_open_originator_port</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_channel_request_open_originator_port</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="280" column="1" bodyfile="src/server.c" bodystart="1069" bodyend="1071"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1ga42f8b0980f73c9af36a0b5e4e3ba7a04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API const char *</type>
        <definition>const char * ssh_message_channel_request_open_destination</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_channel_request_open_destination</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="281" column="1" bodyfile="src/server.c" bodystart="1073" bodyend="1075"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gaf8b7350f50918f37f331efe2099ffa8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API int</type>
        <definition>int ssh_message_channel_request_open_destination_port</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_channel_request_open_destination_port</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="282" column="1" bodyfile="src/server.c" bodystart="1077" bodyend="1079"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1ga813cf45163230416cd179cd1dadc4118" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API ssh_channel</type>
        <definition>ssh_channel ssh_message_channel_request_channel</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_channel_request_channel</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="284" column="1" bodyfile="src/server.c" bodystart="1081" bodyend="1083"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1ga06f1578033ad6f3741f1c3b8e2322d2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API const char *</type>
        <definition>const char * ssh_message_channel_request_pty_term</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_channel_request_pty_term</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="286" column="1" bodyfile="src/server.c" bodystart="1085" bodyend="1087"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1ga6f96b1cee5ae05dabea404c5d40b50e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API int</type>
        <definition>int ssh_message_channel_request_pty_width</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_channel_request_pty_width</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="287" column="1" bodyfile="src/server.c" bodystart="1089" bodyend="1091"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gac793c0d76e4b5856f15ad0ed0afaa1d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API int</type>
        <definition>int ssh_message_channel_request_pty_height</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_channel_request_pty_height</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="288" column="1" bodyfile="src/server.c" bodystart="1093" bodyend="1095"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1ga9fe9493be6347da72ec3d55d6d58b9c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API int</type>
        <definition>int ssh_message_channel_request_pty_pxwidth</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_channel_request_pty_pxwidth</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="289" column="1" bodyfile="src/server.c" bodystart="1097" bodyend="1099"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gacc10bc19a556898628ca239fb013d3b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API int</type>
        <definition>int ssh_message_channel_request_pty_pxheight</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_channel_request_pty_pxheight</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="290" column="1" bodyfile="src/server.c" bodystart="1101" bodyend="1103"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gaa42c1e6e4224ca04ee34d9be1296ff44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API const char *</type>
        <definition>const char * ssh_message_channel_request_env_name</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_channel_request_env_name</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="292" column="1" bodyfile="src/server.c" bodystart="1105" bodyend="1107"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1ga88cd6877143ea23c371b19eed3b94474" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API const char *</type>
        <definition>const char * ssh_message_channel_request_env_value</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_channel_request_env_value</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="293" column="1" bodyfile="src/server.c" bodystart="1109" bodyend="1111"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1ga9042b6943d0b34efb8a7deb82a275c55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API const char *</type>
        <definition>const char * ssh_message_channel_request_command</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_channel_request_command</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="295" column="1" bodyfile="src/server.c" bodystart="1113" bodyend="1115"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gaf0f6570120b742f303b974f4fca3288a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API const char *</type>
        <definition>const char * ssh_message_channel_request_subsystem</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_channel_request_subsystem</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="297" column="1" bodyfile="src/server.c" bodystart="1117" bodyend="1119"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gaa0e03d4be51727ff7341efb48d0e3f98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API int</type>
        <definition>int ssh_message_channel_request_x11_single_connection</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_channel_request_x11_single_connection</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="299" column="1" bodyfile="src/server.c" bodystart="1121" bodyend="1123"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gaca48ee1e17dea412e136659f82051ef0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API const char *</type>
        <definition>const char * ssh_message_channel_request_x11_auth_protocol</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_channel_request_x11_auth_protocol</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="300" column="1" bodyfile="src/server.c" bodystart="1125" bodyend="1127"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1ga2b0f472aaa4ac8ed8562c167505e2534" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API const char *</type>
        <definition>const char * ssh_message_channel_request_x11_auth_cookie</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_channel_request_x11_auth_cookie</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="301" column="1" bodyfile="src/server.c" bodystart="1129" bodyend="1131"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gaf802b2a7e21e1026cc50c13133a33344" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API int</type>
        <definition>int ssh_message_channel_request_x11_screen_number</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_channel_request_x11_screen_number</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="302" column="1" bodyfile="src/server.c" bodystart="1133" bodyend="1135"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1ga4b06e2be400a34f8b99e913fffc6b994" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API const char *</type>
        <definition>const char * ssh_message_global_request_address</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_global_request_address</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="304" column="1" bodyfile="src/server.c" bodystart="1137" bodyend="1139"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1ga2df15146bcf25bbf9e97bdd4b1728e40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API int</type>
        <definition>int ssh_message_global_request_port</definition>
        <argsstring>(ssh_message msg)</argsstring>
        <name>ssh_message_global_request_port</name>
        <param>
          <type>ssh_message</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="305" column="1" bodyfile="src/server.c" bodystart="1141" bodyend="1143"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gaccad877b20fca2d4a7eda5bebc1f5af1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API void</type>
        <definition>void ssh_set_message_callback</definition>
        <argsstring>(ssh_session session, int(*ssh_bind_message_callback)(ssh_session session, ssh_message msg, void *data), void *data)</argsstring>
        <name>ssh_set_message_callback</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <param>
          <type>int(*)(ssh_session session, ssh_message msg, void *data)</type>
          <declname>ssh_bind_message_callback</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>defines the ssh_message callback </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>the current ssh session </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ssh_bind_message_callback</parametername>
</parameternamelist>
<parameterdescription>
<para>a function pointer to a callback taking the current ssh session and received message as parameters. the function returns 0 if the message has been parsed and treated successfully, 1 otherwise (libssh must take care of the response). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>void pointer to be passed to callback functions </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="274" column="1" bodyfile="src/server.c" bodystart="1153" bodyend="1158"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gac5c9893e27dad15af4bd2dd8abc4760c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API int</type>
        <definition>int ssh_execute_message_callbacks</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_execute_message_callbacks</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="277" column="1" bodyfile="src/server.c" bodystart="1160" bodyend="1188"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__server_1gaa1ac2e1b7fdc23fd7e253aa9f0a47e7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LIBSSH_API int</type>
        <definition>int ssh_send_keepalive</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_send_keepalive</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/server.h" line="323" column="1" bodyfile="src/server.c" bodystart="1190" bodyend="1216"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/server.c"/>
  </compounddef>
</doxygen>
