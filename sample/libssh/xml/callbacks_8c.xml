<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="callbacks_8c" kind="file" language="C++">
    <compoundname>callbacks.c</compoundname>
    <includes local="yes">config.h</includes>
    <includes refid="callbacks_8h" local="yes">libssh/callbacks.h</includes>
    <includes refid="session_8h" local="yes">libssh/session.h</includes>
    <incdepgraph>
      <node id="860">
        <label>sys/select.h</label>
      </node>
      <node id="864">
        <label>libssh/priv.h</label>
        <link refid="priv_8h_source"/>
        <childnode refid="854" relation="include">
        </childnode>
        <childnode refid="857" relation="include">
        </childnode>
        <childnode refid="856" relation="include">
        </childnode>
        <childnode refid="855" relation="include">
        </childnode>
      </node>
      <node id="856">
        <label>libssh/libssh.h</label>
        <link refid="libssh_8h_source"/>
        <childnode refid="857" relation="include">
        </childnode>
        <childnode refid="858" relation="include">
        </childnode>
        <childnode refid="859" relation="include">
        </childnode>
        <childnode refid="860" relation="include">
        </childnode>
        <childnode refid="861" relation="include">
        </childnode>
        <childnode refid="862" relation="include">
        </childnode>
      </node>
      <node id="867">
        <label>libssh/packet.h</label>
        <link refid="packet_8h_source"/>
        <childnode refid="868" relation="include">
        </childnode>
      </node>
      <node id="863">
        <label>string.h</label>
        <link refid="string_8h_source"/>
        <childnode refid="864" relation="include">
        </childnode>
      </node>
      <node id="862">
        <label>libssh/legacy.h</label>
        <link refid="legacy_8h_source"/>
      </node>
      <node id="861">
        <label>netdb.h</label>
      </node>
      <node id="855">
        <label>libssh/callbacks.h</label>
        <link refid="callbacks_8h_source"/>
        <childnode refid="856" relation="include">
        </childnode>
        <childnode refid="863" relation="include">
        </childnode>
      </node>
      <node id="853">
        <label>src/callbacks.c</label>
        <link refid="callbacks_8c"/>
        <childnode refid="854" relation="include">
        </childnode>
        <childnode refid="855" relation="include">
        </childnode>
        <childnode refid="865" relation="include">
        </childnode>
      </node>
      <node id="859">
        <label>sys/types.h</label>
      </node>
      <node id="874">
        <label>libssh/poll.h</label>
        <link refid="poll_8h_source"/>
        <childnode refid="854" relation="include">
        </childnode>
      </node>
      <node id="857">
        <label>unistd.h</label>
      </node>
      <node id="873">
        <label>libssh/channels.h</label>
        <link refid="channels_8h_source"/>
        <childnode refid="864" relation="include">
        </childnode>
      </node>
      <node id="872">
        <label>libssh/auth.h</label>
        <link refid="auth_8h_source"/>
        <childnode refid="854" relation="include">
        </childnode>
        <childnode refid="855" relation="include">
        </childnode>
      </node>
      <node id="868">
        <label>libssh/wrapper.h</label>
        <link refid="wrapper_8h_source"/>
        <childnode refid="854" relation="include">
        </childnode>
        <childnode refid="856" relation="include">
        </childnode>
        <childnode refid="869" relation="include">
        </childnode>
        <childnode refid="870" relation="include">
        </childnode>
      </node>
      <node id="869">
        <label>libssh/libcrypto.h</label>
        <link refid="libcrypto_8h_source"/>
        <childnode refid="854" relation="include">
        </childnode>
      </node>
      <node id="866">
        <label>libssh/kex.h</label>
        <link refid="kex_8h_source"/>
        <childnode refid="864" relation="include">
        </childnode>
        <childnode refid="855" relation="include">
        </childnode>
      </node>
      <node id="870">
        <label>libssh/libgcrypt.h</label>
        <link refid="libgcrypt_8h_source"/>
        <childnode refid="854" relation="include">
        </childnode>
      </node>
      <node id="871">
        <label>libssh/pcap.h</label>
        <link refid="pcap_8h_source"/>
        <childnode refid="854" relation="include">
        </childnode>
        <childnode refid="856" relation="include">
        </childnode>
      </node>
      <node id="854">
        <label>config.h</label>
      </node>
      <node id="865">
        <label>libssh/session.h</label>
        <link refid="session_8h_source"/>
        <childnode refid="864" relation="include">
        </childnode>
        <childnode refid="866" relation="include">
        </childnode>
        <childnode refid="867" relation="include">
        </childnode>
        <childnode refid="871" relation="include">
        </childnode>
        <childnode refid="872" relation="include">
        </childnode>
        <childnode refid="873" relation="include">
        </childnode>
        <childnode refid="874" relation="include">
        </childnode>
      </node>
      <node id="858">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="callbacks_8c_1a34d5f8c7e772fe313418d195acf4bc1f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ssh_legacy_log_callback</definition>
        <argsstring>(int priority, const char *function, const char *buffer, void *userdata)</argsstring>
        <name>ssh_legacy_log_callback</name>
        <param>
          <type>int</type>
          <declname>priority</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>function</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userdata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/callbacks.c" line="31" column="1" bodyfile="src/callbacks.c" bodystart="31" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__callbacks_1ga2e4b0507c738748a3f10e43fe201fe09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_set_callbacks</definition>
        <argsstring>(ssh_session session, ssh_callbacks cb)</argsstring>
        <name>ssh_set_callbacks</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <param>
          <type>ssh_callbacks</type>
          <declname>cb</declname>
        </param>
        <briefdescription>
<para>Set the session callback functions. </para>        </briefdescription>
        <detaileddescription>
<para>This functions sets the callback structure to use your own callback functions for auth, logging and status.</para><para><programlisting><codeline><highlight class="normal">struct<sp/>ssh_callbacks_struct<sp/>cb<sp/>=<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>.userdata<sp/>=<sp/>data,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>.auth_function<sp/>=<sp/>my_auth_function</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline><highlight class="normal">ssh_callbacks_init(&amp;cb);</highlight></codeline>
<codeline><highlight class="normal">ssh_set_callbacks(session,<sp/>&amp;cb);</highlight></codeline>
</programlisting></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>The session to set the callback structure.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>The callback structure itself.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SSH_OK on success, SSH_ERROR on error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/callbacks.c" line="45" column="1" bodyfile="src/callbacks.c" bodystart="45" bodyend="65"/>
        <references refid="group__libssh__log_1ga0f795c820547d058dbbfa80cd4fe9a4e" compoundref="log_8c" startline="207" endline="209">ssh_get_log_callback</references>
        <references refid="group__libssh__log_1ga6accdc08b7d8c4234750ef30c4854b9e" compoundref="log_8c" startline="197" endline="205">ssh_set_log_callback</references>
        <references refid="group__libssh__log_1ga0addd5c29922f40e9f842a43e0cb0b27" compoundref="log_8c" startline="232" endline="237">ssh_set_log_userdata</references>
      </memberdef>
      <memberdef kind="function" id="group__libssh__callbacks_1gacea52d1373970a4922bf60e6b1680919" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_set_channel_callbacks</definition>
        <argsstring>(ssh_channel channel, ssh_channel_callbacks cb)</argsstring>
        <name>ssh_set_channel_callbacks</name>
        <param>
          <type>ssh_channel</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>ssh_channel_callbacks</type>
          <declname>cb</declname>
        </param>
        <briefdescription>
<para>Set the channel callback functions. </para>        </briefdescription>
        <detaileddescription>
<para>This functions sets the callback structure to use your own callback functions for channel data and exceptions</para><para><programlisting><codeline><highlight class="normal">struct<sp/>ssh_channel_callbacks_struct<sp/>cb<sp/>=<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>.userdata<sp/>=<sp/>data,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>.channel_data<sp/>=<sp/>my_channel_data_function</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline><highlight class="normal">ssh_callbacks_init(&amp;cb);</highlight></codeline>
<codeline><highlight class="normal">ssh_set_channel_callbacks(channel,<sp/>&amp;cb);</highlight></codeline>
</programlisting></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel to set the callback structure.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>The callback structure itself.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SSH_OK on success, SSH_ERROR on error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/callbacks.c" line="67" column="1" bodyfile="src/callbacks.c" bodystart="67" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__callbacks_1gaa321f33172cfa54eb50baaa963457a17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_set_server_callbacks</definition>
        <argsstring>(ssh_session session, ssh_server_callbacks cb)</argsstring>
        <name>ssh_set_server_callbacks</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <param>
          <type>ssh_server_callbacks</type>
          <declname>cb</declname>
        </param>
        <briefdescription>
<para>Set the session server callback functions. </para>        </briefdescription>
        <detaileddescription>
<para>This functions sets the callback structure to use your own callback functions for user authentication, new channels and requests.</para><para><programlisting><codeline><highlight class="normal">struct<sp/>ssh_server_callbacks_struct<sp/>cb<sp/>=<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>.userdata<sp/>=<sp/>data,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>.auth_password_function<sp/>=<sp/>my_auth_function</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline><highlight class="normal">ssh_callbacks_init(&amp;cb);</highlight></codeline>
<codeline><highlight class="normal">ssh_set_server_callbacks(session,<sp/>&amp;cb);</highlight></codeline>
</programlisting></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>session</parametername>
</parameternamelist>
<parameterdescription>
<para>The session to set the callback structure.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>The callback structure itself.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SSH_OK on success, SSH_ERROR on error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/callbacks.c" line="85" column="1" bodyfile="src/callbacks.c" bodystart="85" bodyend="99"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/callbacks.c"/>
  </compounddef>
</doxygen>
