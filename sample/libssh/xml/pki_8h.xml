<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="pki_8h" kind="file" language="C++">
    <compoundname>pki.h</compoundname>
    <includes refid="priv_8h" local="yes">libssh/priv.h</includes>
    <includes refid="crypto_8h" local="yes">libssh/crypto.h</includes>
    <includes refid="ed25519_8h" local="yes">libssh/ed25519.h</includes>
    <includedby refid="pki__priv_8h" local="yes">include/libssh/pki_priv.h</includedby>
    <includedby refid="agent_8c" local="yes">src/agent.c</includedby>
    <includedby refid="auth_8c" local="yes">src/auth.c</includedby>
    <includedby refid="bind_8c" local="yes">src/bind.c</includedby>
    <includedby refid="client_8c" local="yes">src/client.c</includedby>
    <includedby refid="dh_8c" local="yes">src/dh.c</includedby>
    <includedby refid="ecdh_8c" local="yes">src/ecdh.c</includedby>
    <includedby refid="known__hosts_8c" local="yes">src/known_hosts.c</includedby>
    <includedby refid="legacy_8c" local="no">src/legacy.c</includedby>
    <includedby refid="messages_8c" local="yes">src/messages.c</includedby>
    <includedby refid="packet__cb_8c" local="yes">src/packet_cb.c</includedby>
    <includedby refid="pki_8c" local="yes">src/pki.c</includedby>
    <includedby refid="pki__container__openssh_8c" local="yes">src/pki_container_openssh.c</includedby>
    <includedby refid="pki__crypto_8c" local="yes">src/pki_crypto.c</includedby>
    <includedby refid="pki__ed25519_8c" local="yes">src/pki_ed25519.c</includedby>
    <includedby refid="server_8c" local="yes">src/server.c</includedby>
    <includedby refid="wrapper_8c" local="yes">src/wrapper.c</includedby>
    <incdepgraph>
      <node id="464">
        <label>libssh/curve25519.h</label>
        <link refid="curve25519_8h_source"/>
        <childnode refid="448" relation="include">
        </childnode>
        <childnode refid="450" relation="include">
        </childnode>
      </node>
      <node id="453">
        <label>sys/select.h</label>
      </node>
      <node id="447">
        <label>libssh/priv.h</label>
        <link refid="priv_8h_source"/>
        <childnode refid="448" relation="include">
        </childnode>
        <childnode refid="449" relation="include">
        </childnode>
        <childnode refid="450" relation="include">
        </childnode>
        <childnode refid="456" relation="include">
        </childnode>
      </node>
      <node id="450">
        <label>libssh/libssh.h</label>
        <link refid="libssh_8h_source"/>
        <childnode refid="449" relation="include">
        </childnode>
        <childnode refid="451" relation="include">
        </childnode>
        <childnode refid="452" relation="include">
        </childnode>
        <childnode refid="453" relation="include">
        </childnode>
        <childnode refid="454" relation="include">
        </childnode>
        <childnode refid="455" relation="include">
        </childnode>
      </node>
      <node id="457">
        <label>string.h</label>
        <link refid="string_8h_source"/>
        <childnode refid="447" relation="include">
        </childnode>
      </node>
      <node id="446">
        <label>include/libssh/pki.h</label>
        <link refid="pki_8h"/>
        <childnode refid="447" relation="include">
        </childnode>
        <childnode refid="458" relation="include">
        </childnode>
        <childnode refid="465" relation="include">
        </childnode>
      </node>
      <node id="455">
        <label>libssh/legacy.h</label>
        <link refid="legacy_8h_source"/>
      </node>
      <node id="458">
        <label>libssh/crypto.h</label>
        <link refid="crypto_8h_source"/>
        <childnode refid="448" relation="include">
        </childnode>
        <childnode refid="459" relation="include">
        </childnode>
        <childnode refid="462" relation="include">
        </childnode>
        <childnode refid="463" relation="include">
        </childnode>
        <childnode refid="464" relation="include">
        </childnode>
      </node>
      <node id="454">
        <label>netdb.h</label>
      </node>
      <node id="456">
        <label>libssh/callbacks.h</label>
        <link refid="callbacks_8h_source"/>
        <childnode refid="450" relation="include">
        </childnode>
        <childnode refid="457" relation="include">
        </childnode>
      </node>
      <node id="465">
        <label>libssh/ed25519.h</label>
        <link refid="ed25519_8h_source"/>
        <childnode refid="447" relation="include">
        </childnode>
      </node>
      <node id="452">
        <label>sys/types.h</label>
      </node>
      <node id="449">
        <label>unistd.h</label>
      </node>
      <node id="462">
        <label>libssh/ecdh.h</label>
        <link refid="ecdh_8h_source"/>
        <childnode refid="448" relation="include">
        </childnode>
      </node>
      <node id="459">
        <label>libssh/wrapper.h</label>
        <link refid="wrapper_8h_source"/>
        <childnode refid="448" relation="include">
        </childnode>
        <childnode refid="450" relation="include">
        </childnode>
        <childnode refid="460" relation="include">
        </childnode>
        <childnode refid="461" relation="include">
        </childnode>
      </node>
      <node id="460">
        <label>libssh/libcrypto.h</label>
        <link refid="libcrypto_8h_source"/>
        <childnode refid="448" relation="include">
        </childnode>
      </node>
      <node id="463">
        <label>libssh/kex.h</label>
        <link refid="kex_8h_source"/>
        <childnode refid="447" relation="include">
        </childnode>
        <childnode refid="456" relation="include">
        </childnode>
      </node>
      <node id="461">
        <label>libssh/libgcrypt.h</label>
        <link refid="libgcrypt_8h_source"/>
        <childnode refid="448" relation="include">
        </childnode>
      </node>
      <node id="448">
        <label>config.h</label>
      </node>
      <node id="451">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="466">
        <label>include/libssh/pki.h</label>
        <link refid="pki_8h"/>
        <childnode refid="467" relation="include">
        </childnode>
      </node>
      <node id="467">
        <label>include/libssh/pki_priv.h</label>
        <link refid="pki__priv_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structssh__key__struct" prot="public">ssh_key_struct</innerclass>
    <innerclass refid="structssh__signature__struct" prot="public">ssh_signature_struct</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="pki_8h_1a9e7fb9e0aa8f15313fe6cad1cc52f8c1" prot="public" static="no">
        <name>MAX_PUBKEY_SIZE</name>
        <initializer>0x100000 /* 1M */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/pki.h" line="35" column="9" bodyfile="include/libssh/pki.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pki_8h_1a7240401158ae683f3e9f1eeacf637cee" prot="public" static="no">
        <name>MAX_PRIVKEY_SIZE</name>
        <initializer>0x400000 /* 4M */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/pki.h" line="36" column="9" bodyfile="include/libssh/pki.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pki_8h_1a14fec7321f276db8a2f4d63c2a239bcf" prot="public" static="no">
        <name>SSH_KEY_FLAG_EMPTY</name>
        <initializer>0x0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/pki.h" line="38" column="9" bodyfile="include/libssh/pki.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pki_8h_1a916bbdaba2e1b30d69f34a2df20dc7b8" prot="public" static="no">
        <name>SSH_KEY_FLAG_PUBLIC</name>
        <initializer>0x0001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/pki.h" line="39" column="9" bodyfile="include/libssh/pki.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pki_8h_1afce3b7335f73412fa374350d8c65ca3c" prot="public" static="no">
        <name>SSH_KEY_FLAG_PRIVATE</name>
        <initializer>0x0002</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/pki.h" line="40" column="9" bodyfile="include/libssh/pki.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__libssh__pki_1gae0944d085d1a63c73b7eaf78924ddca8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssh_key</type>
        <definition>ssh_key ssh_key_dup</definition>
        <argsstring>(const ssh_key key)</argsstring>
        <name>ssh_key_dup</name>
        <param>
          <type>const ssh_key</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/pki.h" line="87" column="1" bodyfile="src/pki.c" bodystart="133" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__pki_1ga9ee6aacb86cb7f4e8f3b5ec582040d3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ssh_key_clean</definition>
        <argsstring>(ssh_key key)</argsstring>
        <name>ssh_key_clean</name>
        <param>
          <type>ssh_key</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>clean up the key and deallocate all existing keys </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">key</parametername>
</parameternamelist>
<parameterdescription>
<para>ssh_key to clean </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/pki.h" line="88" column="1" bodyfile="src/pki.c" bodystart="146" bodyend="172"/>
        <referencedby refid="group__libssh__pki_1ga08808beb83a42ccd6f1c710ddeb1b4c2" compoundref="pki_8c" startline="178" endline="183">ssh_key_free</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__pki_1gae69bb1e43ad83f808cc0ce4b89727bad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssh_signature</type>
        <definition>ssh_signature ssh_signature_new</definition>
        <argsstring>(void)</argsstring>
        <name>ssh_signature_new</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/pki.h" line="91" column="1" bodyfile="src/pki.c" bodystart="330" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__pki_1ga428f0c9a085999e3e28e672d23a5bc55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ssh_signature_free</definition>
        <argsstring>(ssh_signature sign)</argsstring>
        <name>ssh_signature_free</name>
        <param>
          <type>ssh_signature</type>
          <declname>sign</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/pki.h" line="92" column="1" bodyfile="src/pki.c" bodystart="343" bodyend="378"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__pki_1ga302c3e762e3268e3971df86784688013" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_pki_export_signature_blob</definition>
        <argsstring>(const ssh_signature sign, ssh_string *sign_blob)</argsstring>
        <name>ssh_pki_export_signature_blob</name>
        <param>
          <type>const ssh_signature</type>
          <declname>sign</declname>
        </param>
        <param>
          <type>ssh_string *</type>
          <declname>sign_blob</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/pki.h" line="94" column="1" bodyfile="src/pki.c" bodystart="1259" bodyend="1313"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__pki_1ga02ef62122b1d2c3065e86413cc673704" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_pki_import_signature_blob</definition>
        <argsstring>(const ssh_string sig_blob, const ssh_key pubkey, ssh_signature *psig)</argsstring>
        <name>ssh_pki_import_signature_blob</name>
        <param>
          <type>const ssh_string</type>
          <declname>sig_blob</declname>
        </param>
        <param>
          <type>const ssh_key</type>
          <declname>pubkey</declname>
        </param>
        <param>
          <type>ssh_signature *</type>
          <declname>psig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/pki.h" line="96" column="1" bodyfile="src/pki.c" bodystart="1315" bodyend="1365"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__pki_1ga03fdd0bce9e259365736555abb0ed571" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_pki_signature_verify_blob</definition>
        <argsstring>(ssh_session session, ssh_string sig_blob, const ssh_key key, unsigned char *digest, size_t dlen)</argsstring>
        <name>ssh_pki_signature_verify_blob</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <param>
          <type>ssh_string</type>
          <declname>sig_blob</declname>
        </param>
        <param>
          <type>const ssh_key</type>
          <declname>key</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>digest</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>dlen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/pki.h" line="99" column="1" bodyfile="src/pki.c" bodystart="1367" bodyend="1424"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__pki_1gaadeaf6dc35e99214de0af82c3c431649" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_pki_export_pubkey_blob</definition>
        <argsstring>(const ssh_key key, ssh_string *pblob)</argsstring>
        <name>ssh_pki_export_pubkey_blob</name>
        <param>
          <type>const ssh_key</type>
          <declname>key</declname>
        </param>
        <param>
          <type>ssh_string *</type>
          <declname>pblob</declname>
        </param>
        <briefdescription>
<para>Create a key_blob from a public key. </para>        </briefdescription>
        <detaileddescription>
<internal><para>The &quot;key_blob&quot; is encoded as per RFC 4253 section 6.6 &quot;Public Key
Algorithms&quot; for any of the supported protocol 2 key types.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">key</parametername>
</parameternamelist>
<parameterdescription>
<para>A public or private key to create the public ssh_string from.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pblob</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to store the newly allocated key blob. You NEED to free it.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SSH_OK on success, SSH_ERROR otherwise.</para></simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__string_1gacd9c4eb69f7ecfdcf709deb8dde6a5a8" kindref="member">ssh_string_free()</ref> </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/pki.h" line="106" column="1" bodyfile="src/pki.c" bodystart="1137" bodyend="1153"/>
        <referencedby refid="group__libssh__session_1ga7a7b16a4bed6d8d58f10bdb269172ff7" compoundref="dh_8c" startline="1004" endline="1075">ssh_get_publickey_hash</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__pki_1ga942b96ee72b13655952c87efe938e6ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_pki_import_pubkey_blob</definition>
        <argsstring>(const ssh_string key_blob, ssh_key *pkey)</argsstring>
        <name>ssh_pki_import_pubkey_blob</name>
        <param>
          <type>const ssh_string</type>
          <declname>key_blob</declname>
        </param>
        <param>
          <type>ssh_key *</type>
          <declname>pkey</declname>
        </param>
        <briefdescription>
<para>Import a public key from a ssh string. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">key_blob</parametername>
</parameternamelist>
<parameterdescription>
<para>The key blob to import as specified in RFC 4253 section 6.6 &quot;Public Key Algorithms&quot;.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pkey</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer where the allocated key can be stored. You need to free the memory.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SSH_OK on success, SSH_ERROR on error.</para></simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__pki_1ga08808beb83a42ccd6f1c710ddeb1b4c2" kindref="member">ssh_key_free()</ref> </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/pki.h" line="108" column="1" bodyfile="src/pki.c" bodystart="882" bodyend="929"/>
        <references refid="group__libssh__buffer_1ga7ecc914104a5bf0da485d3e42f6a7d3b" compoundref="buffer_8c" startline="86" endline="95">ssh_buffer_new</references>
        <references refid="group__libssh__buffer_1ga3bf82f0f310311432410f9393ebab528" compoundref="buffer_8c" startline="223" endline="247">ssh_buffer_add_data</references>
        <references refid="group__libssh__string_1gaf01673d22adbff92c88bcb6e30946ea6" compoundref="string_8c" startline="259" endline="265">ssh_string_data</references>
        <references refid="group__libssh__string_1ga331553369afbfcb4f5300729ed65d0fe" compoundref="string_8c" startline="131" endline="144">ssh_string_len</references>
        <references refid="group__libssh__buffer_1ga208f7cc2f69191c717d4bfd5d153bca4" compoundref="buffer_8c" startline="650" endline="676">buffer_get_ssh_string</references>
        <references refid="group__libssh__pki_1ga44584f2316c6ccd40e9939454335d8bc" compoundref="pki_8c" startline="232" endline="260">ssh_key_type_from_name</references>
        <references refid="group__libssh__string_1gaf867504fb528c32bf9e5e1459321cf59" compoundref="string_8c" startline="155" endline="163">ssh_string_get_char</references>
        <references refid="group__libssh__string_1gacd9c4eb69f7ecfdcf709deb8dde6a5a8" compoundref="string_8c" startline="272" endline="274">ssh_string_free</references>
        <referencedby refid="group__libssh__session_1ga839a93298aeff85adbaf4db815b58730" compoundref="dh_8c" startline="964" endline="974">ssh_get_publickey</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__pki_1ga9fe9fefc705e7ea8acc8dc809cea1076" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_pki_export_pubkey_rsa1</definition>
        <argsstring>(const ssh_key key, const char *host, char *rsa1, size_t rsa1_len)</argsstring>
        <name>ssh_pki_export_pubkey_rsa1</name>
        <param>
          <type>const ssh_key</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>host</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>rsa1</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>rsa1_len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/pki.h" line="110" column="1" bodyfile="src/pki.c" bodystart="1251" bodyend="1257"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__pki_1ga7e1830d2e6eaf10d4fdfb5954bf718eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssh_string</type>
        <definition>ssh_string ssh_pki_do_sign</definition>
        <argsstring>(ssh_session session, ssh_buffer sigbuf, const ssh_key privatekey)</argsstring>
        <name>ssh_pki_do_sign</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <param>
          <type>ssh_buffer</type>
          <declname>sigbuf</declname>
        </param>
        <param>
          <type>const ssh_key</type>
          <declname>privatekey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/pki.h" line="116" column="1" bodyfile="src/pki.c" bodystart="1429" bodyend="1528"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__pki_1ga030b5e767d97bd26053a5644b083c133" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssh_string</type>
        <definition>ssh_string ssh_pki_do_sign_agent</definition>
        <argsstring>(ssh_session session, struct ssh_buffer_struct *buf, const ssh_key pubkey)</argsstring>
        <name>ssh_pki_do_sign_agent</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <param>
          <type>struct ssh_buffer_struct *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>const ssh_key</type>
          <declname>pubkey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/pki.h" line="118" column="1" bodyfile="src/pki.c" bodystart="1531" bodyend="1579"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__pki_1ga7f7b8ba203dc93fd0ffdfb4bacb0f0e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssh_string</type>
        <definition>ssh_string ssh_srv_pki_do_sign_sessionid</definition>
        <argsstring>(ssh_session session, const ssh_key privkey)</argsstring>
        <name>ssh_srv_pki_do_sign_sessionid</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <param>
          <type>const ssh_key</type>
          <declname>privkey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/pki.h" line="121" column="1" bodyfile="src/pki.c" bodystart="1583" bodyend="1664"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__pki_1ga2fb166991a033adb5540b66f407e2db4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssh_public_key</type>
        <definition>ssh_public_key ssh_pki_convert_key_to_publickey</definition>
        <argsstring>(const ssh_key key)</argsstring>
        <name>ssh_pki_convert_key_to_publickey</name>
        <param>
          <type>const ssh_key</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/pki.h" line="125" column="1" bodyfile="src/pki.c" bodystart="598" bodyend="629"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__pki_1gacf3c14fbfaa1e0b1aa3d4129bad07fb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssh_private_key</type>
        <definition>ssh_private_key ssh_pki_convert_key_to_privatekey</definition>
        <argsstring>(const ssh_key key)</argsstring>
        <name>ssh_pki_convert_key_to_privatekey</name>
        <param>
          <type>const ssh_key</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/libssh/pki.h" line="126" column="1" bodyfile="src/pki.c" bodystart="631" bodyend="645"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/libssh/pki.h"/>
  </compounddef>
</doxygen>
