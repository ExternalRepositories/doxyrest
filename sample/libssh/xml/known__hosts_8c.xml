<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="known__hosts_8c" kind="file" language="C++">
    <compoundname>known_hosts.c</compoundname>
    <includes local="yes">config.h</includes>
    <includes local="no">ctype.h</includes>
    <includes local="no">errno.h</includes>
    <includes local="no">stdio.h</includes>
    <includes refid="priv_8h" local="yes">libssh/priv.h</includes>
    <includes refid="session_8h" local="yes">libssh/session.h</includes>
    <includes refid="buffer_8h" local="yes">libssh/buffer.h</includes>
    <includes refid="misc_8h" local="yes">libssh/misc.h</includes>
    <includes refid="pki_8h" local="yes">libssh/pki.h</includes>
    <includes refid="options_8h" local="yes">libssh/options.h</includes>
    <includes refid="knownhosts_8h" local="yes">libssh/knownhosts.h</includes>
    <includes refid="string_8h" local="yes">libssh/string.h</includes>
    <includes local="no">netinet/in.h</includes>
    <includes local="no">arpa/inet.h</includes>
    <incdepgraph>
      <node id="1478">
        <label>libssh/buffer.h</label>
        <link refid="buffer_8h_source"/>
        <childnode refid="1479" relation="include">
        </childnode>
        <childnode refid="1460" relation="include">
        </childnode>
      </node>
      <node id="1479">
        <label>stdarg.h</label>
      </node>
      <node id="1484">
        <label>libssh/curve25519.h</label>
        <link refid="curve25519_8h_source"/>
        <childnode refid="1454" relation="include">
        </childnode>
        <childnode refid="1460" relation="include">
        </childnode>
      </node>
      <node id="1463">
        <label>sys/select.h</label>
      </node>
      <node id="1488">
        <label>netinet/in.h</label>
      </node>
      <node id="1489">
        <label>arpa/inet.h</label>
      </node>
      <node id="1458">
        <label>libssh/priv.h</label>
        <link refid="priv_8h_source"/>
        <childnode refid="1454" relation="include">
        </childnode>
        <childnode refid="1459" relation="include">
        </childnode>
        <childnode refid="1460" relation="include">
        </childnode>
        <childnode refid="1466" relation="include">
        </childnode>
      </node>
      <node id="1480">
        <label>libssh/misc.h</label>
        <link refid="misc_8h_source"/>
      </node>
      <node id="1460">
        <label>libssh/libssh.h</label>
        <link refid="libssh_8h_source"/>
        <childnode refid="1459" relation="include">
        </childnode>
        <childnode refid="1461" relation="include">
        </childnode>
        <childnode refid="1462" relation="include">
        </childnode>
        <childnode refid="1463" relation="include">
        </childnode>
        <childnode refid="1464" relation="include">
        </childnode>
        <childnode refid="1465" relation="include">
        </childnode>
      </node>
      <node id="1470">
        <label>libssh/packet.h</label>
        <link refid="packet_8h_source"/>
        <childnode refid="1471" relation="include">
        </childnode>
      </node>
      <node id="1456">
        <label>errno.h</label>
      </node>
      <node id="1467">
        <label>string.h</label>
        <link refid="string_8h_source"/>
        <childnode refid="1458" relation="include">
        </childnode>
      </node>
      <node id="1481">
        <label>libssh/pki.h</label>
        <link refid="pki_8h_source"/>
        <childnode refid="1458" relation="include">
        </childnode>
        <childnode refid="1482" relation="include">
        </childnode>
        <childnode refid="1485" relation="include">
        </childnode>
      </node>
      <node id="1465">
        <label>libssh/legacy.h</label>
        <link refid="legacy_8h_source"/>
      </node>
      <node id="1482">
        <label>libssh/crypto.h</label>
        <link refid="crypto_8h_source"/>
        <childnode refid="1454" relation="include">
        </childnode>
        <childnode refid="1471" relation="include">
        </childnode>
        <childnode refid="1483" relation="include">
        </childnode>
        <childnode refid="1469" relation="include">
        </childnode>
        <childnode refid="1484" relation="include">
        </childnode>
      </node>
      <node id="1464">
        <label>netdb.h</label>
      </node>
      <node id="1466">
        <label>libssh/callbacks.h</label>
        <link refid="callbacks_8h_source"/>
        <childnode refid="1460" relation="include">
        </childnode>
        <childnode refid="1467" relation="include">
        </childnode>
      </node>
      <node id="1485">
        <label>libssh/ed25519.h</label>
        <link refid="ed25519_8h_source"/>
        <childnode refid="1458" relation="include">
        </childnode>
      </node>
      <node id="1462">
        <label>sys/types.h</label>
      </node>
      <node id="1477">
        <label>libssh/poll.h</label>
        <link refid="poll_8h_source"/>
        <childnode refid="1454" relation="include">
        </childnode>
      </node>
      <node id="1486">
        <label>libssh/options.h</label>
        <link refid="options_8h_source"/>
      </node>
      <node id="1459">
        <label>unistd.h</label>
      </node>
      <node id="1453">
        <label>src/known_hosts.c</label>
        <link refid="known__hosts_8c"/>
        <childnode refid="1454" relation="include">
        </childnode>
        <childnode refid="1455" relation="include">
        </childnode>
        <childnode refid="1456" relation="include">
        </childnode>
        <childnode refid="1457" relation="include">
        </childnode>
        <childnode refid="1458" relation="include">
        </childnode>
        <childnode refid="1468" relation="include">
        </childnode>
        <childnode refid="1478" relation="include">
        </childnode>
        <childnode refid="1480" relation="include">
        </childnode>
        <childnode refid="1481" relation="include">
        </childnode>
        <childnode refid="1486" relation="include">
        </childnode>
        <childnode refid="1487" relation="include">
        </childnode>
        <childnode refid="1467" relation="include">
        </childnode>
        <childnode refid="1488" relation="include">
        </childnode>
        <childnode refid="1489" relation="include">
        </childnode>
      </node>
      <node id="1483">
        <label>libssh/ecdh.h</label>
        <link refid="ecdh_8h_source"/>
        <childnode refid="1454" relation="include">
        </childnode>
      </node>
      <node id="1476">
        <label>libssh/channels.h</label>
        <link refid="channels_8h_source"/>
        <childnode refid="1458" relation="include">
        </childnode>
      </node>
      <node id="1475">
        <label>libssh/auth.h</label>
        <link refid="auth_8h_source"/>
        <childnode refid="1454" relation="include">
        </childnode>
        <childnode refid="1466" relation="include">
        </childnode>
      </node>
      <node id="1471">
        <label>libssh/wrapper.h</label>
        <link refid="wrapper_8h_source"/>
        <childnode refid="1454" relation="include">
        </childnode>
        <childnode refid="1460" relation="include">
        </childnode>
        <childnode refid="1472" relation="include">
        </childnode>
        <childnode refid="1473" relation="include">
        </childnode>
      </node>
      <node id="1455">
        <label>ctype.h</label>
      </node>
      <node id="1472">
        <label>libssh/libcrypto.h</label>
        <link refid="libcrypto_8h_source"/>
        <childnode refid="1454" relation="include">
        </childnode>
      </node>
      <node id="1469">
        <label>libssh/kex.h</label>
        <link refid="kex_8h_source"/>
        <childnode refid="1458" relation="include">
        </childnode>
        <childnode refid="1466" relation="include">
        </childnode>
      </node>
      <node id="1473">
        <label>libssh/libgcrypt.h</label>
        <link refid="libgcrypt_8h_source"/>
        <childnode refid="1454" relation="include">
        </childnode>
      </node>
      <node id="1474">
        <label>libssh/pcap.h</label>
        <link refid="pcap_8h_source"/>
        <childnode refid="1454" relation="include">
        </childnode>
        <childnode refid="1460" relation="include">
        </childnode>
      </node>
      <node id="1454">
        <label>config.h</label>
      </node>
      <node id="1487">
        <label>libssh/knownhosts.h</label>
        <link refid="knownhosts_8h_source"/>
      </node>
      <node id="1457">
        <label>stdio.h</label>
      </node>
      <node id="1468">
        <label>libssh/session.h</label>
        <link refid="session_8h_source"/>
        <childnode refid="1458" relation="include">
        </childnode>
        <childnode refid="1469" relation="include">
        </childnode>
        <childnode refid="1470" relation="include">
        </childnode>
        <childnode refid="1474" relation="include">
        </childnode>
        <childnode refid="1475" relation="include">
        </childnode>
        <childnode refid="1476" relation="include">
        </childnode>
        <childnode refid="1477" relation="include">
        </childnode>
      </node>
      <node id="1461">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__libssh__session_1gaf973d65853ac2ac2b0eb78b48c51e925" prot="public" static="no">
        <name>KNOWNHOSTS_MAXTYPES</name>
        <initializer>10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/known_hosts.c" line="650" column="9" bodyfile="src/known_hosts.c" bodystart="650" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__libssh__session_1ga1a06292da7667385acb7181c17fb2aaf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int alldigits</definition>
        <argsstring>(const char *s)</argsstring>
        <name>alldigits</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/known_hosts.c" line="61" column="1" bodyfile="src/known_hosts.c" bodystart="61" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga4443531b37afa026f6a8cac3bf313166" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void tokens_free</definition>
        <argsstring>(char **tokens)</argsstring>
        <name>tokens_free</name>
        <param>
          <type>char **</type>
          <declname>tokens</declname>
        </param>
        <briefdescription>
<para>Free a token array. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/known_hosts.c" line="78" column="1" bodyfile="src/known_hosts.c" bodystart="78" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga3d5f65b5769fb17797618a60f2b78101" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char **</type>
        <definition>static char** ssh_get_knownhost_line</definition>
        <argsstring>(FILE **file, const char *filename, const char **found_type)</argsstring>
        <name>ssh_get_knownhost_line</name>
        <param>
          <type>FILE **</type>
          <declname>file</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>found_type</declname>
        </param>
        <briefdescription>
<para>Return one line of known host file. </para>        </briefdescription>
        <detaileddescription>
<internal><para>This will return a token array containing (host|ip), keytype and key.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">file</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the known host file. Could be pointing to NULL at start.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">filename</parametername>
</parameternamelist>
<parameterdescription>
<para>The file name of the known host file.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">found_type</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a string to be set with the found key type.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The found_type type of key (ie &quot;dsa&quot;,&quot;ssh-rsa1&quot;). Don&apos;t free that value. NULL if no match was found or the file was not found. </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/known_hosts.c" line="109" column="1" bodyfile="src/known_hosts.c" bodystart="109" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga7c21df77bcd00b832e2f33c3afae64a0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int check_public_key</definition>
        <argsstring>(ssh_session session, char **tokens)</argsstring>
        <name>check_public_key</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>tokens</declname>
        </param>
        <briefdescription>
<para>Check the public key in the known host line matches the public key of the currently connected server. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The SSH session to use.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tokens</parametername>
</parameternamelist>
<parameterdescription>
<para>A list of tokens in the known_hosts line.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the key matches, 0 if the key doesn&apos;t match and -1 on error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/known_hosts.c" line="190" column="1" bodyfile="src/known_hosts.c" bodystart="190" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga8986fdab5f7b17935b21e96652f22cf8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int match_hashed_host</definition>
        <argsstring>(const char *host, const char *sourcehash)</argsstring>
        <name>match_hashed_host</name>
        <param>
          <type>const char *</type>
          <declname>host</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>sourcehash</declname>
        </param>
        <briefdescription>
<para>Check if a hostname matches a openssh-style hashed known host. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">host</parametername>
</parameternamelist>
<parameterdescription>
<para>The host to check.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">hashed</parametername>
</parameternamelist>
<parameterdescription>
<para>The hashed value.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if it matches, 0 otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/known_hosts.c" line="292" column="1" bodyfile="src/known_hosts.c" bodystart="292" bodyend="368"/>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga6f37e3d7bb6b938b44d6a34a76fdfa0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_is_server_known</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_is_server_known</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>Check if the server is known. </para>        </briefdescription>
        <detaileddescription>
<para>Checks the user&apos;s known host file for a previous connection to the current server.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The SSH session to use.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SSH_SERVER_KNOWN_OK: The server is known and has not changed.<linebreak/>
 SSH_SERVER_KNOWN_CHANGED: The server key has changed. Either you are under attack or the administrator changed the key. You HAVE to warn the user about a possible attack.<linebreak/>
 SSH_SERVER_FOUND_OTHER: The server gave use a key of a type while we had an other type recorded. It is a possible attack.<linebreak/>
 SSH_SERVER_NOT_KNOWN: The server is unknown. User should confirm the MD5 is correct.<linebreak/>
 SSH_SERVER_FILE_NOT_FOUND: The known host file does not exist. The host is thus unknown. File will be created if host key is accepted.<linebreak/>
 SSH_SERVER_ERROR: Some error happened.</para></simplesect>
<simplesect kind="see"><para><ref refid="group__libssh__session_1gaf8ff0e2236d54d964a82f68d7323a741" kindref="member">ssh_get_pubkey_hash()</ref></para></simplesect>
<xrefsect id="bug_1_bug000003"><xreftitle>Bug</xreftitle><xrefdescription><para>There is no current way to remove or modify an entry into the known host table. </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/known_hosts.c" line="406" column="1" bodyfile="src/known_hosts.c" bodystart="406" bodyend="514"/>
        <referencedby refid="classssh_1_1_session_1a0b7055cb236685a9c18cb79c5492b40f" compoundref="libsshpp_8hpp" startline="308" endline="312">ssh::Session::isServerKnown</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1gaf61a9cfdc40c76ffce9f9a8543755d36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ssh_write_knownhost</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_write_knownhost</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>Write the current server as known in the known hosts file. </para>        </briefdescription>
        <detaileddescription>
<para>This will create the known hosts file if it does not exist. You generaly use it when <ref refid="group__libssh__session_1ga6f37e3d7bb6b938b44d6a34a76fdfa0b" kindref="member">ssh_is_server_known()</ref> answered SSH_SERVER_NOT_KNOWN.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The ssh session to use.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SSH_OK on success, SSH_ERROR on error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/known_hosts.c" line="526" column="1" bodyfile="src/known_hosts.c" bodystart="526" bodyend="648"/>
        <referencedby refid="classssh_1_1_session_1ae55f054025dcbe4ceeaec87c9ca064c7" compoundref="libsshpp_8hpp" startline="351" endline="355">ssh::Session::writeKnownhost</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__libssh__session_1ga0cdaf267ea18c4d7910864f7203842f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char **</type>
        <definition>char** ssh_knownhosts_algorithms</definition>
        <argsstring>(ssh_session session)</argsstring>
        <name>ssh_knownhosts_algorithms</name>
        <param>
          <type>ssh_session</type>
          <declname>session</declname>
        </param>
        <briefdescription>
<para>Check which kind of host keys should be preferred for connection by reading the known_hosts file. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">session</parametername>
</parameternamelist>
<parameterdescription>
<para>The SSH session to use.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array of supported key types NULL on error </para></simplesect>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/known_hosts.c" line="662" column="1" bodyfile="src/known_hosts.c" bodystart="662" bodyend="744"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/known_hosts.c"/>
  </compounddef>
</doxygen>
