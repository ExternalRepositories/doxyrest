%{
--------------------------------------------------------------------------------
--
--  This file is part of the Doxyrest toolkit.
--
--  Doxyrest is distributed under the MIT license.
--  For details see accompanying license.txt file,
--  the public copy of which is also available at:
--  http://tibbo.com/downloads/archive/doxyrest/license.txt
--
--------------------------------------------------------------------------------

local argArray = table.pack(...)
local compound = argArray[1]

local variableSectionName
local functionSectionName

if compound.m_compoundKind == "namespace" or compound.m_compoundKind == "group" then
	variableSectionName = "Variables"
	functionSectionName = "Functions"
else
	variableSectionName = "Fields"
	functionSectionName = "Methods"
end

local compoundStats = prepareCompound(compound)
}

$(getCompoundTocTree(compound))
$(getItemImportString(compound))

%{
local hasDetails =
	compoundStats.m_hasDocumentedItems or
	compoundStats.m_hasBriefDocumentation and compoundStats.m_hasDetailedDocumentation

if hasDetails then
}
Overview
~~~~~~~~

$(getItemBriefDocumentation(compound, "details-"))

%{
else
}
$(getItemDetailedDocumentation(compound))

%{
end -- if

if #compound.m_groupArray > 0 then
	local groupTree = ""

	for i = 1, #compound.m_groupArray do
		local item = compound.m_groupArray[i]
		local targetFileName = getItemFileName(item)

		generateFile(targetFileName, "group.rst.in", item)
		groupTree = groupTree .. getGroupTree(item)
	end -- for
}
$groupTree

%{
end -- if

if compoundStats.m_hasItems or
	compound.m_baseCompound or
	compound.m_derivedTypeArray and #compound.m_derivedTypeArray > 0 then

	includeFile("overview_compound.rst.in", compound, variableSectionName, functionSectionName)
end

if hasDetails then
}
.. _details-doxid-$(compound.m_id):

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

$(getItemDetailedDocumentation(compound))

%{
end -- if

if compoundStats.m_hasDocumentedVariables then
	includeFile("details_variables.rst.in", compound, variableSectionName)
end

if compoundStats.m_hasDocumentedFunctions then
	includeFile("details_functions.rst.in", compound, functionSectionName)
end

if #compound.m_footnoteArray > 0 then
}
---------------------

.. rubric:: Footnotes

%{
	for i = 1, #compound.m_footnoteArray do
		local item = compound.m_footnoteArray[i]
		local text = getItemDetailedDocumentation(item)
		text = replaceCommonSpacePrefix(text, "\t")
}
.. [#$(item.m_name)]

$text

%{
	end -- for
end -- if
}
