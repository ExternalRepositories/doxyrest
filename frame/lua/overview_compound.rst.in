%{
--------------------------------------------------------------------------------
--
--  This file is part of the Doxyrest toolkit.
--
--  Doxyrest is distributed under the MIT license.
--  For details see accompanying license.txt file,
--  the public copy of which is also available at:
--  http://tibbo.com/downloads/archive/doxyrest/license.txt
--
--------------------------------------------------------------------------------

local argArray = table.pack(...)
local compound = argArray[1]
local variableSectionName = string.lower(argArray[2])
local functionSectionName = string.lower(argArray[3])

emit(getItemArrayOverviewRefTargetString(compound.variableArray))
emit(getItemArrayOverviewRefTargetString(compound.functionArray))
}
.. ref-code-block:: lua
	:class: overview-code-block

%{
if compound.baseTypeArray and #compound.baseTypeArray > 0 then
}
	-- base types

%{
	for i = 1, #compound.baseTypeArray do
		local baseType = compound.baseTypeArray[i]
}
	:ref:`$(baseType.name) <doxid-$(baseType.id)>`
%{
	end -- for
	emit("\n")
end -- if

if #compound.enumArray > 0 then
	includeFile("overview_enums.rst.in", compound)
	emit("\n")
end -- if

if #compound.structArray > 0 then
	includeFile("overview_structs.rst.in", compound)
	emit("\n")
end -- if

if #compound.variableArray > 0 then
	includeFile("overview_variables.rst.in", compound, variableSectionName)
	emit("\n")
end -- if

if #compound.functionArray > 0 then
	includeFile("overview_functions.rst.in", compound, functionSectionName)
	emit("\n")
end

if compound.baseTypeArray and #compound.baseTypeArray > 0 then

	-- always link inherited members (even when no documentation)

	local prevHasItemRefTarget = hasItemRefTarget
	hasItemRefTarget = function(item)
		return true
	end

	for i = 1, #compound.baseTypeArray do
		local baseType = compound.baseTypeArray[i]
}

$(getTitle("Inherited from " .. baseType.name, "-"))

%{
		includeFile("overview_compound.rst.in", baseType, "fields", "methods")
	end -- for

	hasItemRefTarget = prevHasItemRefTarget
end -- if
}
